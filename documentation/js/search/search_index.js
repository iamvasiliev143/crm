var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccountType.html",[0,0.226,1,1.396]],["body/classes/AccountType.html",[0,0.312,1,2.498,2,1.279,3,0.154,4,0.154,5,0.133,6,4.89,7,4.89,8,1.185,9,7.301,10,0.186,11,0.014,12,3.772,13,1.595,14,2.567,15,0.154,16,0.01,17,0.012,18,0.01]],["title/classes/AccountType-1.html",[0,0.19,1,1.173,19,1.32]],["body/classes/AccountType-1.html",[0,0.21,1,1.797,2,0.861,3,0.104,4,0.104,5,0.089,10,0.144,11,0.014,13,1.074,15,0.104,16,0.007,17,0.009,18,0.007,20,5.948,21,2.964,22,0.83,23,1.73,24,5.243,25,4.019,26,4.019,27,1.462,28,2.008,29,2.146,30,4.333,31,6.516,32,4.111,33,5.254,34,2.97,35,1.375,36,3.787,37,4.112,38,3.787,39,3.787,40,4.271,41,4.345,42,3.278,43,1.994,44,3.787,45,2.964,46,4.345,47,2.102,48,2.525]],["title/controllers/AccountTypeController.html",[49,1.201,50,2.547]],["body/controllers/AccountTypeController.html",[0,0.282,3,0.139,4,0.139,5,0.12,8,0.886,10,0.201,11,0.014,15,0.139,16,0.009,17,0.011,18,0.009,34,2.56,49,1.496,50,4.354,51,1.612,52,3.651,53,2.985,54,3.978,55,2.427,56,5.547,57,0.852,58,2.677,59,1.739,60,5.547,61,3.978,62,3.674,63,3.978,64,4.417,65,4.417,66,4.417,67,2.218,68,1.441,69,4.417]],["title/controllers/AccountTypeController-1.html",[19,1.32,49,1.009,50,2.139]],["body/controllers/AccountTypeController-1.html",[0,0.282,3,0.139,4,0.139,5,0.12,8,0.886,10,0.201,11,0.014,15,0.139,16,0.009,17,0.011,18,0.009,34,2.56,49,1.496,50,4.354,51,1.612,53,2.985,54,3.978,55,2.427,56,5.547,57,0.852,58,2.677,59,1.739,60,5.547,62,3.674,63,3.978,64,4.417,65,4.417,66,4.417,67,2.218,68,1.441,69,4.417,70,3.978,71,3.389]],["title/classes/AccountTypeDTO.html",[0,0.226,72,3.195]],["body/classes/AccountTypeDTO.html",[0,0.297,2,0.888,3,0.107,4,0.107,5,0.092,10,0.168,11,0.014,15,0.107,16,0.007,17,0.009,18,0.007,22,0.855,23,1.767,24,6.014,26,4.063,27,1.372,28,1.872,29,2.019,34,1.565,35,1.294,40,4.317,41,3.577,43,3.228,47,2.167,59,1.336,72,4.2,73,5.737,74,5.737,75,3.393,76,6.014,77,3.071,78,3.904,79,3.581,80,3.904,81,2.292,82,3.904,83,3.904,84,3.904,85,3.664,86,3.056,87,3.664,88,1.444,89,3.071,90,3.403,91,3.393,92,3.904,93,2.603,94,3.904]],["title/modules/AccountTypeModule.html",[95,1.115,96,2.547]],["body/modules/AccountTypeModule.html",[0,0.258,1,1.591,3,0.128,4,0.128,5,0.11,10,0.201,11,0.014,15,0.128,16,0.008,17,0.01,18,0.008,34,2.419,50,4.177,51,1.913,52,3.341,53,2.732,57,0.78,62,3.959,63,3.641,95,1.829,96,4.691,97,1.865,98,1.945,99,2.122,100,2.122,101,1.945,102,3.054,103,2.633,104,4.043,105,4.043,106,2.752,107,2.122,108,2.122,109,4.652,110,3.176,111,1.654,112,1.654,113,4.652,114,2.222,115,4.043]],["title/injectables/AccountTypeService.html",[62,2.149,116,1.036]],["body/injectables/AccountTypeService.html",[0,0.264,1,1.627,3,0.13,4,0.13,5,0.112,8,1.067,10,0.203,11,0.014,13,1.349,15,0.13,16,0.008,17,0.011,18,0.008,27,0.862,35,1.004,52,4.396,53,3.594,57,0.797,62,3.563,68,1.349,111,1.692,112,1.692,116,1.554,117,1.989,118,3.724,119,5.88,120,2.923,121,4.134,122,4.457,123,4.134,124,1.908,125,1.508,126,1.692,127,5.318,128,2.968,129,3.724,130,4.134,131,2.272,132,4.134]],["title/injectables/AccountTypeService-1.html",[19,1.32,62,1.805,116,0.87]],["body/injectables/AccountTypeService-1.html",[0,0.264,1,1.627,3,0.13,4,0.13,5,0.112,8,1.067,10,0.203,11,0.014,13,1.349,15,0.13,16,0.008,17,0.011,18,0.008,27,0.862,35,1.004,53,3.594,57,0.797,62,3.563,68,1.349,70,4.79,111,1.692,112,1.692,116,1.554,117,1.989,118,3.724,119,5.88,120,2.923,121,4.134,122,4.457,123,4.134,124,1.908,125,1.508,126,1.692,127,5.318,128,2.968,130,4.134,131,2.272,132,4.134,133,3.724]],["title/controllers/AuthController.html",[49,1.201,134,2.547]],["body/controllers/AuthController.html",[0,0.325,3,0.161,4,0.161,5,0.138,10,0.161,11,0.014,15,0.161,16,0.01,17,0.012,18,0.01,49,1.725,51,1.859,55,2.799,57,0.983,134,4.345,135,5.094,136,5.094,137,5.094]],["title/controllers/AuthController-1.html",[19,1.32,49,1.009,134,2.139]],["body/controllers/AuthController-1.html",[0,0.325,3,0.161,4,0.161,5,0.138,10,0.161,11,0.014,15,0.161,16,0.01,17,0.012,18,0.01,49,1.725,51,1.859,55,2.799,57,0.983,134,4.345,136,5.094,137,5.094,138,5.094]],["title/modules/AuthModule.html",[95,1.115,139,2.722]],["body/modules/AuthModule.html",[0,0.276,3,0.137,4,0.137,5,0.118,10,0.19,11,0.014,15,0.137,16,0.009,17,0.011,18,0.009,51,1.998,57,0.835,95,1.89,97,1.998,98,2.083,99,2.273,100,2.273,101,2.083,102,3.154,103,2.175,106,2.875,107,2.273,108,2.273,134,4.314,139,5.105,140,4.33,141,4.33,142,4.496,143,4.983,144,4.983,145,4.983]],["title/injectables/AuthService.html",[116,1.036,142,2.397]],["body/injectables/AuthService.html",[0,0.328,3,0.162,4,0.162,5,0.14,10,0.162,11,0.014,15,0.162,16,0.01,17,0.012,18,0.01,57,0.992,116,1.778,117,2.474,142,4.112,146,5.142]],["title/injectables/AuthService-1.html",[19,1.32,116,0.87,142,2.013]],["body/injectables/AuthService-1.html",[0,0.328,3,0.162,4,0.162,5,0.14,10,0.162,11,0.014,15,0.162,16,0.01,17,0.012,18,0.01,57,0.992,116,1.778,117,2.474,142,4.112,147,5.142]],["title/modules/DatabaseModule.html",[95,1.115,148,2.547]],["body/modules/DatabaseModule.html",[0,0.278,3,0.138,4,0.138,5,0.118,10,0.19,11,0.014,15,0.138,16,0.009,17,0.011,18,0.009,27,0.911,57,0.842,95,1.731,97,2.014,103,2.192,110,3.336,111,1.786,114,2.398,148,3.952,149,5.023,150,3.931,151,3.931,152,5.023,153,4.364,154,5.023,155,5.023,156,5.023,157,5.023,158,5.023,159,5.023,160,2.949,161,5.023,162,5.023,163,5.023,164,5.023,165,3.852,166,5.023,167,5.023,168,2.645,169,4.364]],["title/classes/ExistValidator.html",[0,0.226,170,2.722]],["body/classes/ExistValidator.html",[0,0.236,1,0.967,2,0.643,3,0.078,4,0.078,5,0.067,8,0.493,10,0.14,11,0.015,13,0.802,15,0.078,16,0.005,17,0.007,18,0.005,22,1.246,25,1.661,27,1.205,28,2.053,35,1.079,40,2.654,47,1.57,48,1.886,67,1.234,68,0.802,88,1.046,93,1.886,120,1.351,124,2.28,125,1.621,126,1.818,131,2.031,170,1.886,171,3.339,172,1.661,173,2.836,174,3.672,175,2.24,176,3.211,177,2.836,178,2.692,179,2.24,180,2.031,181,4.271,182,2.828,183,2.031,184,4.271,185,2.828,186,4.066,187,2.131,188,2.836,189,3.581,190,2.828,191,2.836,192,3.157,193,3.329,194,3.329,195,3.329,196,4.002,197,1.886,198,0.745,199,1.29,200,1.886,201,2.031,202,2.031,203,1.764,204,2.213,205,2.213,206,2.213,207,1.661,208,3.329,209,5.202,210,4.451,211,3.329,212,2.498,213,2.654,214,3.329,215,3.329,216,2.836,217,3.329,218,4.002,219,2.213,220,2.213,221,2.213,222,2.213,223,2.213]],["title/modules/GlobalAdminModule.html",[95,1.115,224,2.932]],["body/modules/GlobalAdminModule.html",[0,0.227,3,0.112,4,0.112,5,0.097,10,0.193,11,0.014,15,0.112,16,0.007,17,0.01,18,0.007,53,2.404,57,0.686,95,1.717,96,4.627,97,1.642,98,1.712,99,1.867,100,1.867,101,1.712,102,1.867,103,1.787,106,2.528,107,1.867,108,1.867,114,2.647,148,4.525,224,5.765,225,3.558,226,3.558,227,4.525,228,4.836,229,4.836,230,4.026,231,4.094,232,5.542,233,3.558,234,4.094,235,4.094,236,4.094,237,4.094]],["title/modules/GlobalTraderModule.html",[95,1.115,238,2.932]],["body/modules/GlobalTraderModule.html",[0,0.211,3,0.104,4,0.104,5,0.09,10,0.188,11,0.014,15,0.104,16,0.007,17,0.009,18,0.007,27,0.691,35,0.804,57,0.639,95,1.654,96,4.428,97,1.528,98,1.593,99,1.738,100,1.738,101,1.593,102,1.738,103,1.663,106,2.407,107,1.738,108,1.738,114,2.519,124,1.528,125,1.208,126,1.355,139,4.732,148,4.428,175,2.006,187,1.908,233,3.311,238,5.713,239,3.311,240,3.311,241,4.428,242,4.732,243,3.939,244,3.81,245,3.81,246,5.276,247,6.533,248,3.81,249,5.276,250,3.81,251,2.736,252,3.81,253,3.81,254,2.377,255,3.81,256,3.81,257,3.81,258,3.81]],["title/injectables/IsExist.html",[116,1.036,259,2.266]],["body/injectables/IsExist.html",[0,0.329,3,0.101,4,0.101,5,0.087,8,1.035,10,0.186,11,0.014,13,1.042,15,0.141,16,0.006,17,0.009,18,0.006,22,0.805,27,1.166,28,1.684,35,1.253,57,0.616,68,1.459,88,1.36,111,1.307,116,1.508,117,1.537,120,1.756,124,2.58,125,2.147,126,2.112,131,2.458,165,2.857,170,4.515,172,2.159,175,2.71,176,3.387,177,3.432,178,3.387,179,2.71,180,2.641,181,4.902,183,2.641,184,3.432,186,3.959,187,2.578,188,2.451,189,3.022,191,2.451,192,2.041,207,3.022,259,2.857,260,4.028,261,3.677,262,3.022,263,3.677,264,3.677,265,3.195,266,4.648,267,2.641,268,2.878,269,2.041,270,4.473,271,4.473,272,2.878]],["title/injectables/IsTimezone.html",[116,1.036,273,2.722]],["body/injectables/IsTimezone.html",[0,0.317,3,0.118,4,0.118,5,0.101,10,0.177,11,0.014,15,0.157,16,0.007,17,0.01,18,0.007,22,0.943,27,0.78,28,2.029,35,1.21,57,0.721,88,1.592,116,1.455,117,1.799,124,1.726,125,1.817,126,1.53,168,3.618,171,3.784,173,2.869,174,4.116,175,3.018,176,3.875,177,4.581,178,3.393,179,3.018,187,2.871,212,3.784,216,2.869,266,4.486,272,3.368,273,3.821,274,3.368,275,4.303,276,5.731,277,4.303,278,4.116,279,4.98,280,3.091,281,4.303,282,4.303]],["title/injectables/IsUnique.html",[116,1.036,269,2.266]],["body/injectables/IsUnique.html",[0,0.329,3,0.101,4,0.101,5,0.087,8,1.035,10,0.186,11,0.014,13,1.042,15,0.141,16,0.006,17,0.009,18,0.006,22,0.805,27,1.166,28,1.684,35,1.253,57,0.616,68,1.459,88,1.36,111,1.307,116,1.508,117,1.537,120,1.756,124,2.58,125,2.147,126,2.112,131,2.458,165,2.857,170,3.432,172,2.159,175,2.71,176,3.387,177,3.432,178,3.387,179,2.71,180,2.641,181,4.902,183,2.641,184,3.432,186,3.959,187,2.578,188,2.451,189,3.022,191,2.451,192,2.041,207,3.976,259,2.041,260,4.028,262,3.022,265,3.195,266,4.648,267,2.641,268,2.878,269,2.857,270,4.473,271,4.473,272,2.878,283,3.677,284,3.677,285,3.677]],["title/classes/Language.html",[0,0.226,198,1.075]],["body/classes/Language.html",[0,0.313,2,1.285,3,0.155,4,0.155,5,0.133,8,1.188,10,0.187,11,0.014,12,3.782,13,1.603,14,2.578,15,0.155,16,0.01,17,0.012,18,0.01,198,1.927,286,4.912,287,6.357]],["title/classes/Language-1.html",[0,0.19,19,1.32,198,0.903]],["body/classes/Language-1.html",[0,0.302,2,0.91,3,0.11,4,0.11,5,0.094,10,0.15,11,0.014,12,3.03,13,1.135,15,0.11,16,0.007,17,0.009,18,0.007,22,0.877,23,1.797,26,4.099,27,1.306,28,1.892,29,2.197,30,3.92,32,4.093,35,1.408,42,4.356,46,4.141,88,1.481,176,3.676,198,2.028,199,3.185,280,5.39,288,3.479,289,2.669,290,4.003,291,5.459,292,4.003,293,4.003,294,3.405,295,4.003,296,4.743,297,5.397]],["title/controllers/LanguageAdminController.html",[49,1.201,298,2.547]],["body/controllers/LanguageAdminController.html",[0,0.343,3,0.133,4,0.133,5,0.114,8,1.08,10,0.197,11,0.014,15,0.17,16,0.008,17,0.011,18,0.008,49,1.427,51,1.537,55,2.316,57,0.813,58,2.553,59,1.659,67,2.704,68,1.757,71,3.233,298,4.259,299,3.795,300,4.214,301,3.865,302,5.384,303,5.384,304,4.126,305,3.482,306,5.384,307,5.384,308,5.384]],["title/modules/LanguageAdminModule.html",[95,1.115,227,2.547]],["body/modules/LanguageAdminModule.html",[0,0.313,3,0.116,4,0.116,5,0.099,10,0.201,11,0.014,15,0.155,16,0.007,17,0.01,18,0.007,51,2.022,57,0.707,95,1.862,97,1.691,98,1.763,99,1.924,100,1.924,101,1.763,102,3.109,103,2.784,106,2.579,107,1.924,108,1.924,110,3.359,111,1.5,112,1.5,114,3.046,198,1.111,227,4.739,230,4.061,241,2.631,243,3.138,298,3.98,301,3.528,304,4.148,305,3.029,309,3.665,310,4.217,311,3.665,312,3.665,313,3.665,314,3.665,315,4.913]],["title/classes/LanguageDTO.html",[0,0.226,316,3.195]],["body/classes/LanguageDTO.html",[0,0.278,2,0.808,3,0.097,4,0.097,5,0.084,10,0.138,11,0.014,15,0.097,16,0.006,17,0.009,18,0.006,22,0.778,23,1.654,26,3.926,27,1.321,28,2.067,29,2.086,35,1.337,42,4.171,59,1.215,68,2.175,77,3.174,79,3.651,81,2.95,85,3.711,87,3.711,88,1.314,89,3.174,90,3.517,165,2.789,176,3.757,198,1.669,199,3.05,280,5.235,297,5.065,316,3.932,317,3.087,318,2.95,319,3.552,320,5.024,321,3.134,322,3.552,323,3.552,324,5.024,325,3.552]],["title/injectables/LanguageService.html",[116,1.036,304,2.266]],["body/injectables/LanguageService.html",[0,0.232,3,0.115,4,0.115,5,0.099,8,0.981,10,0.194,11,0.014,13,1.188,15,0.115,16,0.007,17,0.01,18,0.007,27,0.759,35,0.884,57,0.702,68,2.011,111,1.49,112,1.49,116,1.429,117,1.751,120,2.688,122,4.241,124,1.68,125,1.328,126,1.49,128,2.613,131,3.386,133,3.279,198,1.103,304,3.529,326,3.64,327,6.357,328,4.189,329,3.734,330,5.906,331,5.906,332,6.013,333,5.906,334,5.906,335,4.189,336,6.357,337,4.189,338,3.64]],["title/controllers/LanguageTraderController.html",[49,1.201,301,2.547]],["body/controllers/LanguageTraderController.html",[0,0.343,3,0.133,4,0.133,5,0.114,8,1.08,10,0.197,11,0.014,15,0.17,16,0.008,17,0.011,18,0.008,49,1.427,51,1.537,55,2.316,57,0.813,58,2.553,59,1.659,67,2.704,68,1.757,71,3.233,298,3.865,299,3.795,300,4.214,301,4.259,302,5.384,303,5.384,304,4.126,305,3.482,306,5.384,307,5.384,308,5.384]],["title/modules/LanguageTraderModule.html",[95,1.115,241,2.547]],["body/modules/LanguageTraderModule.html",[0,0.313,3,0.116,4,0.116,5,0.099,10,0.201,11,0.014,15,0.155,16,0.007,17,0.01,18,0.007,51,2.022,57,0.707,95,1.862,97,1.691,98,1.763,99,1.924,100,1.924,101,1.763,102,3.109,103,2.784,106,2.579,107,1.924,108,1.924,110,3.359,111,1.5,112,1.5,114,3.046,198,1.111,227,2.631,230,3.138,241,4.739,243,4.061,298,3.528,301,3.98,304,4.148,305,3.029,312,3.665,313,3.665,314,3.665,315,4.913,339,4.217,340,4.217,341,4.217]],["title/injectables/LoggerMiddleware.html",[116,1.036,251,2.932]],["body/injectables/LoggerMiddleware.html",[0,0.308,3,0.152,4,0.152,5,0.131,8,1.175,10,0.185,11,0.014,15,0.152,16,0.01,17,0.012,18,0.01,57,0.931,116,1.712,117,2.321,173,3.702,251,5.214,342,4.825,343,7.259,344,6.741,345,5.553]],["title/classes/OpenAccountController.html",[0,0.226,346,2.932]],["body/classes/OpenAccountController.html",[0,0.193,2,0.792,3,0.095,4,0.095,5,0.082,10,0.172,11,0.014,15,0.095,16,0.006,17,0.009,18,0.006,22,0.763,23,1.631,27,1.045,29,1.631,34,2.519,35,1.326,42,2.173,57,0.584,59,1.192,67,1.52,68,1.781,120,1.664,124,2.312,125,1.828,126,2.051,175,2.609,176,3.036,178,3.631,187,2.482,192,1.934,212,2.909,213,3.091,254,4.14,346,3.559,347,4.14,348,2.727,349,6.281,350,4.306,351,4.306,352,3.484,353,4.049,354,4.955,355,3.559,356,4.955,357,3.027,358,3.688,359,3.027,360,3.919,361,3.091,362,3.484,363,2.519,364,3.027,365,3.688,366,3.027,367,3.091,368,3.484,369,3.027,370,3.027,371,5.011,372,3.027,373,2.727,374,3.027,375,4.306,376,3.027,377,4.306,378,3.027,379,3.027]],["title/modules/OpenAccountModule.html",[95,1.115,242,2.722]],["body/modules/OpenAccountModule.html",[0,0.237,1,1.462,3,0.117,4,0.117,5,0.101,10,0.201,11,0.014,15,0.117,16,0.007,17,0.01,18,0.007,51,1.809,57,0.716,95,1.755,97,1.714,98,1.787,99,1.95,100,1.95,101,1.787,102,2.929,103,1.865,106,2.602,107,1.95,108,1.95,110,2.251,111,1.52,112,1.52,114,2.041,115,3.714,198,1.503,242,5.195,254,2.667,259,4.077,269,4.077,353,4.313,360,3.559,363,2.288,380,3.714,381,3.714,382,2.667,383,4.274,384,4.612,385,3.345,386,4.274,387,3.714]],["title/injectables/OpenAccountService.html",[116,1.036,353,2.397]],["body/injectables/OpenAccountService.html",[0,0.31,3,0.154,4,0.154,5,0.132,8,1.182,10,0.186,11,0.014,15,0.154,16,0.01,17,0.012,18,0.01,57,0.939,116,1.721,117,2.342,254,3.495,353,4.279,372,4.868,382,3.495,388,4.868,389,7.287]],["title/classes/Task.html",[0,0.226,390,2.044]],["body/classes/Task.html",[0,0.306,2,1.257,3,0.152,4,0.152,5,0.13,8,1.172,10,0.199,11,0.014,12,3.732,13,1.568,14,2.522,15,0.152,16,0.01,17,0.012,18,0.01,112,1.966,363,2.217,390,3.629,391,4.804,392,7.245]],["title/classes/Task-1.html",[0,0.19,19,1.32,390,1.717]],["body/classes/Task-1.html",[0,0.203,2,0.833,3,0.1,4,0.1,5,0.086,10,0.141,11,0.014,13,1.039,14,1.672,15,0.1,16,0.006,17,0.009,18,0.006,22,0.803,23,1.691,25,4.384,26,3.972,27,1.271,28,1.988,29,2.227,30,2.633,32,4.078,35,1.428,37,4.02,43,2.705,45,2.869,46,3.953,125,1.162,126,1.826,294,3.205,363,2.811,390,3.218,393,3.186,394,4.641,395,4.858,396,3.016,397,4.463,398,4.463,399,3.666,400,3.666,401,3.666,402,3.186,403,5.136,404,3.666,405,5.136,406,4.463,407,3.186,408,3.666,409,3.666,410,4.463,411,3.666,412,3.186,413,3.186,414,2.869,415,3.186]],["title/controllers/TaskController.html",[49,1.201,416,2.932]],["body/controllers/TaskController.html",[0,0.289,3,0.143,4,0.143,5,0.123,8,0.908,10,0.202,11,0.014,15,0.143,16,0.009,17,0.011,18,0.009,49,1.533,51,1.651,55,2.488,57,0.873,58,2.743,59,1.782,61,4.077,67,2.273,68,1.477,416,5.068,417,4.527,418,4.077,419,6.482,420,4.402,421,4.527,422,5.209,423,5.209,424,5.209]],["title/classes/TaskDTO.html",[0,0.226,425,2.722]],["body/classes/TaskDTO.html",[0,0.322,2,1.321,3,0.159,4,0.159,5,0.137,8,1.208,10,0.159,11,0.014,15,0.159,16,0.01,17,0.012,18,0.01,425,4.934,426,5.047,427,7.401,428,5.808]],["title/classes/TaskDTO-1.html",[0,0.19,19,1.32,425,2.286]],["body/classes/TaskDTO-1.html",[0,0.328,2,1.027,3,0.124,4,0.124,5,0.107,10,0.162,11,0.014,15,0.124,16,0.008,17,0.01,18,0.008,22,0.99,23,1.949,26,4.269,27,1.27,28,2.186,29,1.949,35,1.249,43,2.379,59,1.546,77,2.965,79,3.508,81,3.476,85,3.664,87,3.664,88,1.671,89,2.965,90,3.286,91,3.927,390,2.263,395,5.46,425,3.947,429,3.927,430,4.519,431,4.519]],["title/modules/TaskModule.html",[95,1.115,228,2.722]],["body/modules/TaskModule.html",[0,0.264,3,0.13,4,0.13,5,0.112,10,0.203,11,0.014,15,0.13,16,0.008,17,0.011,18,0.008,51,1.94,57,0.797,95,1.849,97,1.908,98,1.989,99,2.17,100,2.17,101,1.989,102,3.086,103,2.076,106,2.792,107,2.17,108,2.17,110,2.505,111,1.692,112,1.692,114,2.272,228,5.044,390,2.383,416,4.86,420,4.719,421,4.134,432,4.134,433,4.134,434,4.757,435,4.757,436,4.757]],["title/injectables/TaskService.html",[116,1.036,420,2.547]],["body/injectables/TaskService.html",[0,0.241,3,0.119,4,0.119,5,0.103,8,1.006,10,0.197,11,0.014,13,1.233,15,0.119,16,0.008,17,0.01,18,0.008,22,0.952,26,2.553,27,0.788,35,1.218,57,0.729,68,1.233,111,1.546,112,1.546,116,1.465,117,1.818,120,2.756,122,4.304,124,1.743,125,1.378,126,1.546,128,2.713,129,3.403,131,2.076,175,3.038,178,3.41,187,2.178,212,2.553,213,2.713,355,3.123,390,2.178,394,3.403,395,4.144,420,4.041,437,3.778,438,6.477,439,6.899,440,4.348,441,4.348,442,5.77,443,4.348,444,4.348,445,4.348,446,4.348,447,4.348,448,3.778,449,4.348]],["title/classes/Trader.html",[0,0.226,363,1.637]],["body/classes/Trader.html",[0,0.305,2,1.251,3,0.151,4,0.151,5,0.13,8,1.169,10,0.198,11,0.014,12,3.722,13,1.561,14,2.511,15,0.151,16,0.01,17,0.012,18,0.01,112,1.957,198,1.45,363,2.9,390,2.757,450,4.783,451,7.231]],["title/classes/Trader-1.html",[0,0.19,19,1.32,363,1.375]],["body/classes/Trader-1.html",[0,0.17,2,0.424,3,0.051,4,0.051,5,0.044,10,0.124,11,0.014,13,0.529,14,0.851,15,0.051,16,0.003,17,0.005,18,0.003,22,0.855,23,1.009,25,3.327,27,1.345,28,2.115,29,2.354,30,2.802,32,4.182,34,1.229,35,1.509,37,2.399,41,3.012,42,1.913,43,1.614,45,1.461,46,4.669,47,1.036,68,0.869,88,0.69,125,1.7,126,1.09,160,2.291,165,3.145,168,2.378,198,1.614,199,1.398,268,1.461,287,2.664,321,3.346,363,1.811,390,1.954,394,3.053,396,3.327,397,2.664,398,2.664,402,4.66,406,3.925,407,2.664,410,3.39,412,1.622,413,1.622,414,4.197,415,2.664,418,3.905,448,2.664,452,1.622,453,2.601,454,3.326,455,3.326,456,2.652,457,2.601,458,2.601,459,3.326,460,3.053,461,3.053,462,3.012,463,3.326,464,3.326,465,2.044,466,1.866,467,1.866,468,5.363,469,1.866,470,1.866,471,6.309,472,1.866,473,1.866,474,1.866,475,1.866,476,1.866,477,5.363,478,2.044,479,1.866,480,1.866,481,3.066,482,1.866,483,2.044,484,1.866,485,4.517,486,1.866,487,3.012,488,1.866,489,3.583,490,1.866,491,3.066,492,1.866,493,2.044,494,1.866,495,1.866,496,1.866,497,3.066,498,1.866,499,1.866,500,1.866,501,2.044,502,1.866,503,1.866,504,1.866,505,2.044,506,2.399,507,4.517,508,1.866,509,1.866]],["title/controllers/TraderController.html",[49,1.201,510,2.932]],["body/controllers/TraderController.html",[0,0.289,3,0.143,4,0.143,5,0.123,8,0.908,10,0.202,11,0.014,15,0.143,16,0.009,17,0.011,18,0.009,49,1.533,51,1.651,55,2.488,57,0.873,58,2.743,59,1.782,61,4.077,67,2.273,68,1.477,510,5.068,511,4.527,512,5.209,513,6.482,514,4.402,515,4.527,516,5.209,517,5.209,518,5.209]],["title/classes/TraderMessengersDTO.html",[0,0.226,519,2.547]],["body/classes/TraderMessengersDTO.html",[0,0.275,1,0.751,2,0.499,3,0.06,4,0.06,5,0.052,10,0.158,11,0.014,15,0.096,16,0.004,17,0.006,18,0.004,22,0.481,23,1.15,27,1.373,28,2.187,29,1.15,34,1.746,35,0.737,41,1.463,43,1.84,47,1.218,59,0.751,77,1.75,79,3.668,85,4.098,86,1.717,87,4.065,88,0.811,89,3.698,90,4.028,125,1.108,160,2.052,165,1.218,168,1.155,179,1.155,198,0.92,267,1.576,273,1.463,278,2.51,318,1.288,321,1.369,347,2.717,396,2.557,453,1.463,454,1.463,455,2.33,456,2.557,457,1.463,458,1.463,459,2.33,460,3.408,461,3.408,462,2.903,463,3.615,464,1.463,465,1.463,478,1.463,483,1.463,487,3.615,489,3.894,493,2.33,501,2.33,505,1.463,506,1.717,519,3.383,520,2.557,521,2.903,522,1.288,523,2.194,524,3.036,525,2.194,526,2.194,527,2.194,528,3.036,529,3.036,530,4.655,531,3.036,532,3.036,533,1.907,534,1.907,535,1.576,536,1.717,537,1.576,538,2.51,539,1.907,540,1.907,541,3.784,542,1.369,543,1.369,544,1.369,545,1.369,546,1.369,547,1.369,548,1.576,549,1.576,550,1.907,551,1.907,552,1.907,553,1.907,554,1.907,555,1.907,556,1.576,557,2.51,558,3.566,559,1.369,560,1.907,561,1.907,562,1.907,563,1.907,564,1.576,565,1.907,566,1.576,567,1.576,568,1.576,569,1.576,570,2.51,571,1.907,572,1.576,573,1.576]],["title/modules/TraderModule.html",[95,1.115,229,2.722]],["body/modules/TraderModule.html",[0,0.264,3,0.13,4,0.13,5,0.112,10,0.203,11,0.014,15,0.13,16,0.008,17,0.011,18,0.008,51,1.94,57,0.797,95,1.849,97,1.908,98,1.989,99,2.17,100,2.17,101,1.989,102,3.086,103,2.076,106,2.792,107,2.17,108,2.17,110,2.505,111,1.692,112,1.692,114,2.272,229,5.044,363,1.908,510,4.86,514,4.719,515,4.134,574,4.134,575,4.134,576,4.757,577,4.757,578,4.757]],["title/controllers/TraderOpenAccountController.html",[49,1.201,384,2.932]],["body/controllers/TraderOpenAccountController.html",[0,0.202,3,0.1,4,0.1,5,0.086,8,0.637,10,0.185,11,0.014,15,0.1,16,0.006,17,0.009,18,0.006,22,0.801,27,0.929,29,1.688,34,2.884,35,1.082,49,1.075,51,1.159,55,1.746,57,0.613,58,1.925,59,1.25,67,1.595,68,1.036,124,2.055,125,1.625,126,1.823,175,2.699,178,3.688,187,2.567,212,3.01,213,3.198,254,3.693,346,2.625,348,2.861,350,4.454,351,4.454,353,3.476,357,3.176,358,3.768,359,3.176,360,4.37,361,3.198,363,2.573,364,3.176,365,3.768,366,3.176,367,3.198,369,3.176,370,3.176,371,5.144,374,3.176,375,4.454,376,3.176,377,4.454,378,3.176,379,3.176,382,3.693,384,3.682,387,3.176,579,3.655,580,3.655,581,3.655,582,5.126,583,3.655,584,3.655,585,3.655,586,3.655,587,3.655]],["title/classes/TraderOpenBaseAccountDTO.html",[0,0.226,542,2.547]],["body/classes/TraderOpenBaseAccountDTO.html",[0,0.221,1,1.156,2,0.347,3,0.042,4,0.042,5,0.036,10,0.133,11,0.014,15,0.071,16,0.003,17,0.005,18,0.003,22,0.335,23,0.854,27,1.374,28,2.223,29,2.16,34,1.355,35,1.384,41,1.018,43,2.097,47,0.848,59,0.523,77,3.231,79,3.723,81,0.897,85,3.789,86,1.196,87,3.744,88,0.565,89,3.491,90,3.695,125,1.263,160,2.619,165,0.848,168,1.779,179,0.804,198,1.175,267,1.097,273,1.018,278,1.862,318,1.523,321,1.618,347,4.153,396,2.847,453,2.253,454,2.253,455,2.974,456,3.035,457,2.253,458,2.253,459,2.974,460,1.196,461,1.196,462,3.446,463,4.028,464,2.253,465,1.729,478,1.729,483,1.729,487,2.974,489,2.427,493,2.655,501,2.655,505,1.018,506,1.196,519,3.025,520,3.909,521,4.438,522,0.897,524,1.327,528,2.253,529,2.253,530,4.072,531,2.253,532,2.253,533,1.327,534,1.327,535,1.097,536,1.196,537,1.097,538,1.862,539,1.327,540,1.327,541,2.936,542,1.618,543,1.618,544,1.618,545,1.618,546,1.618,547,1.618,548,1.862,549,1.862,550,1.327,551,1.327,552,1.327,553,1.327,554,1.327,555,1.327,556,1.097,557,1.862,558,2.86,559,1.618,560,1.327,561,1.327,562,1.327,563,1.327,564,1.862,565,1.327,566,1.862,567,1.862,568,1.862,569,1.862,570,2.86,571,1.327,572,1.862,573,1.097,588,1.196,589,1.528,590,1.196,591,1.528,592,2.03,593,1.528,594,1.196,595,1.528,596,1.018,597,1.196,598,1.528,599,2.03,600,1.528,601,1.196,602,1.528,603,1.528,604,1.528,605,1.196,606,1.196,607,1.528,608,1.196,609,1.528,610,1.196,611,1.196,612,1.528,613,1.528,614,1.196,615,1.528,616,1.196,617,1.528]],["title/classes/TraderOpenDemoAccountDTO.html",[0,0.226,358,2.397]],["body/classes/TraderOpenDemoAccountDTO.html",[0,0.268,1,2.242,2,0.767,3,0.092,4,0.092,5,0.08,8,0.844,10,0.18,11,0.014,15,0.092,16,0.006,17,0.008,18,0.006,22,0.739,23,1.594,27,1.303,28,2.107,29,1.865,34,1.941,35,1.195,59,1.154,77,2.837,79,3.417,85,3.435,87,3.435,88,1.247,89,3.283,90,3.143,112,1.199,179,1.776,198,1.851,259,1.872,269,1.872,318,2.843,358,3.325,361,3.861,363,1.941,373,2.639,382,3.861,385,2.639,456,4.126,505,2.248,520,3.634,522,1.98,530,3.477,535,2.422,543,3.02,544,3.02,545,3.02,546,3.02,547,3.02,556,2.422,557,2.422,558,2.422,559,3.02,573,2.422,596,2.248,618,5.663,619,2.93,620,4.921,621,2.93,622,2.93,623,2.93,624,2.93,625,2.93,626,4.207,627,2.93]],["title/classes/TraderOpenDemoAccountDTO-1.html",[0,0.19,19,1.32,358,2.013]],["body/classes/TraderOpenDemoAccountDTO-1.html",[0,0.141,1,1.342,2,0.578,3,0.07,4,0.07,5,0.06,8,0.684,10,0.07,11,0.014,15,0.07,16,0.004,17,0.007,18,0.004,22,0.557,23,1.292,27,1.354,28,2.213,29,2.438,34,1.02,35,1.563,43,2.522,77,3.673,79,3.673,81,1.493,89,1.965,125,1.244,160,2.812,168,2.066,198,1.262,262,4.348,318,1.493,321,1.587,347,1.587,358,2.304,360,1.587,361,1.587,396,2.812,453,2.616,454,2.616,455,3.193,456,3.161,457,2.616,458,2.616,459,3.193,462,3.59,463,4.098,464,2.616,465,1.696,478,1.696,483,1.696,487,2.616,493,2.616,501,2.616,519,2.448,520,1.493,521,1.696,522,1.493,542,4.728,543,1.587,544,1.587,545,1.587,546,1.587,547,1.587,548,1.827,549,1.827,559,1.587,564,1.827,566,1.827,567,1.827,568,1.827,569,1.827,570,2.818,572,1.827,588,1.991,590,1.991,592,3.071,594,1.991,596,1.696,597,1.991,599,3.071,601,1.991,605,1.991,606,1.991,608,1.991,610,1.991,611,1.991,614,1.991,616,1.991,628,2.21,629,2.21,630,2.21,631,2.21,632,2.21,633,2.21,634,2.21,635,2.21,636,2.21,637,2.21,638,2.21,639,2.21,640,2.21,641,2.21,642,2.21,643,2.21]],["title/classes/TraderOpenTradingAccountDTO.html",[0,0.226,365,2.397]],["body/classes/TraderOpenTradingAccountDTO.html",[0,0.268,1,2.242,2,0.767,3,0.092,4,0.092,5,0.08,8,0.844,10,0.18,11,0.014,15,0.092,16,0.006,17,0.008,18,0.006,22,0.739,23,1.594,27,1.303,28,2.107,29,1.865,34,1.941,35,1.195,59,1.154,77,2.837,79,3.417,85,3.435,87,3.435,88,1.247,89,3.283,90,3.143,112,1.199,179,1.776,198,1.851,259,1.872,269,1.872,318,2.843,363,1.941,365,3.325,367,3.861,373,2.639,382,3.861,385,2.639,456,4.126,505,2.248,520,3.634,522,1.98,530,3.477,535,2.422,543,3.02,544,3.02,545,3.02,546,3.02,547,3.02,556,2.422,557,2.422,558,2.422,559,3.02,573,2.422,596,2.248,619,2.93,620,4.921,621,2.93,622,2.93,623,2.93,624,2.93,625,2.93,626,4.207,627,2.93,644,5.663]],["title/classes/TraderOpenTradingAccountDTO-1.html",[0,0.19,19,1.32,365,2.013]],["body/classes/TraderOpenTradingAccountDTO-1.html",[0,0.141,1,1.342,2,0.578,3,0.07,4,0.07,5,0.06,8,0.684,10,0.07,11,0.014,15,0.07,16,0.004,17,0.007,18,0.004,22,0.557,23,1.292,27,1.354,28,2.213,29,2.438,34,1.02,35,1.563,43,2.522,77,3.673,79,3.673,81,1.493,89,1.965,125,1.244,160,2.812,168,2.066,198,1.262,262,4.348,318,1.493,321,1.587,347,1.587,360,1.587,365,2.304,367,1.587,396,2.812,453,2.616,454,2.616,455,3.193,456,3.161,457,2.616,458,2.616,459,3.193,462,3.59,463,4.098,464,2.616,465,1.696,478,1.696,483,1.696,487,2.616,493,2.616,501,2.616,519,2.448,520,1.493,521,1.696,522,1.493,542,4.728,543,1.587,544,1.587,545,1.587,546,1.587,547,1.587,548,1.827,549,1.827,559,1.587,564,1.827,566,1.827,567,1.827,568,1.827,569,1.827,570,2.818,572,1.827,588,1.991,590,1.991,592,3.071,594,1.991,596,1.696,597,1.991,599,3.071,601,1.991,605,1.991,606,1.991,608,1.991,610,1.991,611,1.991,614,1.991,616,1.991,628,2.21,629,2.21,630,2.21,631,2.21,632,2.21,633,2.21,634,2.21,635,2.21,636,2.21,637,2.21,638,2.21,639,2.21,640,2.21,641,2.21,642,2.21,643,2.21]],["title/injectables/TraderService.html",[116,1.036,514,2.547]],["body/injectables/TraderService.html",[0,0.268,3,0.132,4,0.132,5,0.114,8,1.078,10,0.204,11,0.014,13,1.37,15,0.132,16,0.008,17,0.011,18,0.008,27,0.876,35,1.019,57,0.81,68,1.37,111,1.718,112,1.718,116,1.569,117,2.019,120,2.951,122,4.482,124,1.937,125,1.531,126,1.718,128,3.014,129,3.781,131,2.307,363,1.937,514,4.252,645,4.197,646,6.815,647,4.83,648,4.83,649,6.18,650,4.83,651,4.83]],["title/classes/Translation.html",[0,0.226,652,2.397]],["body/classes/Translation.html",[0,0.257,2,1.054,3,0.127,4,0.127,5,0.109,10,0.127,11,0.014,13,1.314,15,0.127,16,0.008,17,0.01,18,0.008,22,1.015,23,1.981,27,1.211,28,2.13,29,2.2,32,3.926,35,1.41,46,3.09,198,1.585,199,3.344,289,4.012,294,3.755,296,5.807,652,4.491,653,4.028,654,4.887,655,4.635,656,4.635,657,4.635]],["title/classes/TranslationAdmin.html",[0,0.226,658,2.266]],["body/classes/TranslationAdmin.html",[0,0.312,2,1.279,3,0.154,4,0.154,5,0.133,8,1.185,10,0.186,11,0.014,12,3.772,13,1.595,14,2.567,15,0.154,16,0.01,17,0.012,18,0.01,658,4.053,659,4.041,660,4.404,661,7.301]],["title/classes/TranslationAdmin-1.html",[0,0.19,19,1.32,658,1.903]],["body/classes/TranslationAdmin-1.html",[0,0.268,2,1.098,3,0.132,4,0.132,5,0.114,8,1.078,10,0.132,11,0.014,14,2.203,15,0.132,16,0.008,17,0.011,18,0.008,22,1.058,23,2.035,27,1.235,28,1.932,29,2.244,32,2.681,35,1.438,198,1.272,199,3.109,262,4.002,289,4.12,294,3.014,652,4.637,654,4.544,658,3.43,660,3.781,662,3.469,663,3.781,664,3.781,665,3.781]],["title/controllers/TranslationAdminController.html",[49,1.201,666,2.547]],["body/controllers/TranslationAdminController.html",[0,0.343,3,0.133,4,0.133,5,0.114,8,1.08,10,0.197,11,0.014,15,0.17,16,0.008,17,0.011,18,0.008,49,1.427,51,1.537,55,2.316,57,0.813,58,2.553,59,1.659,67,2.704,68,1.757,71,3.233,329,3.914,666,4.259,667,3.795,668,4.214,669,5.384,670,3.865,671,5.384,672,3.482,673,5.384,674,5.384,675,5.384]],["title/modules/TranslationAdminModule.html",[95,1.115,230,2.266]],["body/modules/TranslationAdminModule.html",[0,0.219,3,0.071,4,0.071,5,0.061,10,0.169,11,0.015,15,0.109,16,0.004,17,0.007,18,0.004,51,1.53,57,0.431,95,1.481,97,1.032,98,1.076,99,1.174,100,1.174,101,1.076,102,2.472,103,2.365,106,1.806,107,1.174,108,1.174,110,2.541,111,0.915,112,0.915,114,1.891,151,2.015,230,3.861,243,1.429,329,3.871,658,2.679,666,3.011,670,2.471,672,1.849,676,2.237,677,2.237,678,2.237,679,6.179,680,6.179,681,4.902,682,4.902,683,4.902,684,2.237,685,2.679,686,2.679,687,2.237,688,3.441]],["title/classes/TranslationDTO.html",[0,0.226,689,3.195]],["body/classes/TranslationDTO.html",[0,0.315,2,0.965,3,0.116,4,0.116,5,0.1,10,0.156,11,0.014,15,0.116,16,0.007,17,0.01,18,0.007,22,0.93,23,1.87,27,1.291,28,2.207,29,1.87,35,1.351,59,1.452,68,2.078,77,2.845,79,3.423,81,3.335,85,3.553,87,3.553,88,1.57,89,2.845,90,3.153,126,2.02,199,2.919,652,4.396,654,4.749,689,4.445,690,3.689,691,4.245,692,5.68,693,4.245,694,5.68,695,4.245]],["title/classes/TranslationEmail.html",[0,0.226,685,2.266]],["body/classes/TranslationEmail.html",[0,0.312,2,1.279,3,0.154,4,0.154,5,0.133,8,1.185,10,0.186,11,0.014,12,3.772,13,1.595,14,2.567,15,0.154,16,0.01,17,0.012,18,0.01,659,4.041,685,4.053,696,4.404,697,7.301]],["title/classes/TranslationEmail-1.html",[0,0.19,19,1.32,685,1.903]],["body/classes/TranslationEmail-1.html",[0,0.268,2,1.098,3,0.132,4,0.132,5,0.114,8,1.078,10,0.132,11,0.014,14,2.203,15,0.132,16,0.008,17,0.011,18,0.008,22,1.058,23,2.035,27,1.235,28,1.932,29,2.244,32,2.681,35,1.438,198,1.272,199,3.109,262,4.002,289,4.12,294,3.014,652,4.637,654,4.544,662,3.469,663,3.781,664,3.781,665,3.781,685,3.43,696,3.781]],["title/injectables/TranslationService.html",[116,1.036,329,2.149]],["body/injectables/TranslationService.html",[0,0.224,3,0.111,4,0.111,5,0.095,8,0.958,10,0.192,11,0.014,13,1.146,15,0.111,16,0.007,17,0.01,18,0.007,27,0.733,35,0.853,57,0.677,68,2.049,111,1.437,112,1.437,116,1.395,117,1.69,120,2.624,122,4.811,124,1.621,125,1.281,126,1.437,128,2.521,131,3.45,133,3.163,329,3.287,330,5.424,331,5.82,332,5.969,333,5.82,334,5.82,338,3.512,658,2.243,685,2.243,686,2.243,698,3.512,699,4.042,700,6.698,701,6.698,702,4.042,703,6.242,704,4.042,705,4.042,706,4.042]],["title/classes/TranslationTrader.html",[0,0.226,686,2.266]],["body/classes/TranslationTrader.html",[0,0.312,2,1.279,3,0.154,4,0.154,5,0.133,8,1.185,10,0.186,11,0.014,12,3.772,13,1.595,14,2.567,15,0.154,16,0.01,17,0.012,18,0.01,659,4.041,686,4.053,707,4.404,708,7.301]],["title/classes/TranslationTrader-1.html",[0,0.19,19,1.32,686,1.903]],["body/classes/TranslationTrader-1.html",[0,0.268,2,1.098,3,0.132,4,0.132,5,0.114,8,1.078,10,0.132,11,0.014,14,2.203,15,0.132,16,0.008,17,0.011,18,0.008,22,1.058,23,2.035,27,1.235,28,1.932,29,2.244,32,2.681,35,1.438,198,1.272,199,3.109,262,4.002,289,4.12,294,3.014,652,4.637,654,4.544,662,3.469,663,3.781,664,3.781,665,3.781,686,3.43,707,3.781]],["title/controllers/TranslationTraderController.html",[49,1.201,670,2.547]],["body/controllers/TranslationTraderController.html",[0,0.343,3,0.133,4,0.133,5,0.114,8,1.08,10,0.197,11,0.014,15,0.17,16,0.008,17,0.011,18,0.008,49,1.427,51,1.537,55,2.316,57,0.813,58,2.553,59,1.659,67,2.704,68,1.757,71,3.233,329,3.914,666,3.865,667,3.795,668,4.214,669,5.384,670,4.259,671,5.384,672,3.482,673,5.384,674,5.384,675,5.384]],["title/modules/TranslationTraderModule.html",[95,1.115,243,2.266]],["body/modules/TranslationTraderModule.html",[0,0.219,3,0.071,4,0.071,5,0.061,10,0.169,11,0.015,15,0.109,16,0.004,17,0.007,18,0.004,51,1.53,57,0.431,95,1.481,97,1.032,98,1.076,99,1.174,100,1.174,101,1.076,102,2.472,103,2.365,106,1.806,107,1.174,108,1.174,110,2.541,111,0.915,112,0.915,114,1.891,151,2.015,230,1.429,243,3.861,329,3.871,658,2.679,666,2.471,670,3.011,672,1.849,679,6.179,680,6.179,681,4.902,682,4.902,683,4.902,684,2.237,685,2.679,686,2.679,687,2.237,688,3.441,709,2.574,710,2.574,711,2.574]],["title/interfaces/UniqueValidationArguments.html",[189,2.397,203,2.547]],["body/interfaces/UniqueValidationArguments.html",[0,0.259,1,1.098,3,0.088,4,0.088,5,0.076,8,0.814,10,0.151,11,0.015,13,0.91,15,0.088,16,0.006,17,0.008,18,0.006,22,1.325,23,1.538,25,1.884,27,1.096,28,2.011,40,2.914,47,1.781,48,2.14,67,1.401,68,0.91,88,1.187,93,2.14,131,1.533,171,1.884,172,1.884,173,2.14,174,3.355,176,1.69,178,1.69,181,3.672,184,4.285,186,3.114,188,2.14,189,3.551,191,2.14,192,3.057,193,3.656,194,3.656,195,3.656,196,4.31,197,2.14,198,0.845,199,1.464,200,2.14,201,2.305,202,2.305,203,2.002,204,4.734,205,2.512,206,2.512,207,1.884,208,3.656,209,5.418,210,4.734,211,3.656,212,2.743,213,2.914,214,3.656,215,3.656,216,3.114,217,3.656,218,4.31,219,2.512,220,2.512,221,2.512,222,2.512,223,2.512,712,3.209]],["title/classes/UniqueValidator.html",[0,0.226,207,2.397]],["body/classes/UniqueValidator.html",[0,0.236,1,0.967,2,0.643,3,0.078,4,0.078,5,0.067,8,0.493,10,0.14,11,0.015,13,0.802,15,0.078,16,0.005,17,0.007,18,0.005,22,1.246,25,1.661,27,1.205,28,2.053,35,1.079,40,2.654,47,1.57,48,1.886,67,1.234,68,0.802,88,1.046,93,1.886,120,1.351,124,2.28,125,1.621,126,1.818,131,2.031,171,3.339,172,1.661,173,2.836,174,3.672,175,2.24,176,3.211,177,2.836,178,2.692,179,2.24,180,2.031,181,4.271,183,2.031,184,4.271,186,4.066,187,2.131,188,2.836,189,3.581,191,2.836,192,3.157,193,3.329,194,3.329,195,3.329,196,4.002,197,1.886,198,0.745,199,1.29,200,1.886,201,2.031,202,2.031,203,1.764,204,2.213,205,2.213,206,2.213,207,2.498,208,3.329,209,5.202,210,4.451,211,3.329,212,2.498,213,2.654,214,3.329,215,3.329,216,2.836,217,3.329,218,4.002,219,2.213,220,2.213,221,2.213,222,2.213,223,2.213,713,2.828,714,2.828,715,2.828]],["title/coverage.html",[716,4.807]],["body/coverage.html",[0,0.432,1,0.908,5,0.037,6,1.364,7,1.364,11,0.014,16,0.003,17,0.005,18,0.003,20,1.364,21,1.228,27,0.284,49,1.795,50,2.528,52,1.906,53,3.232,54,3.172,62,2.134,70,2.077,72,1.228,73,2.995,74,1.364,75,1.364,101,0.656,116,1.621,118,3.172,134,1.655,135,1.364,138,1.364,142,1.558,146,1.364,147,1.364,150,1.228,169,7.097,170,1.046,171,3.075,172,3.075,189,0.921,197,1.046,198,0.699,200,1.046,203,0.979,207,0.921,216,2.298,251,1.906,254,2.528,259,0.871,260,2.077,269,0.871,273,1.046,274,2.077,286,1.364,288,1.364,298,1.655,299,2.077,301,1.655,304,1.473,316,1.228,317,1.364,326,1.364,329,1.397,342,1.364,346,1.127,347,3.068,348,2.077,353,1.558,355,1.127,358,1.558,361,1.655,363,1.064,365,1.558,367,1.655,382,2.528,384,1.127,388,2.306,390,1.329,391,1.364,393,1.364,416,1.906,417,1.364,420,1.655,425,1.769,426,1.364,429,1.364,437,1.364,450,1.364,452,1.364,510,1.906,511,1.364,514,1.655,519,0.979,520,2.887,521,1.769,522,2.887,537,1.127,538,1.127,542,0.979,645,1.364,652,0.921,653,1.364,658,1.473,659,2.475,660,2.077,662,2.475,666,1.655,667,2.077,670,1.655,681,1.769,682,1.769,683,1.769,685,1.473,686,1.473,689,1.228,690,1.364,696,2.077,698,1.364,707,2.077,716,1.364,717,1.569,718,1.569,719,1.569,720,4.917,721,6.706,722,4.917,723,1.569,724,3.447,725,1.569,726,1.569,727,1.569,728,5.505,729,1.364,730,6.706,731,7.735,732,1.364,733,1.364,734,1.364,735,4.531,736,1.569,737,1.364,738,1.364,739,1.364,740,1.364,741,1.364,742,1.364,743,1.364,744,1.569,745,2.653,746,2.653,747,1.569,748,2.653,749,1.569,750,3.447,751,1.364,752,2.995,753,1.364,754,1.364,755,2.306,756,1.364,757,2.306,758,1.364,759,2.306,760,1.364,761,1.569,762,1.569]],["title/dependencies.html",[98,2.048,763,3.428]],["body/dependencies.html",[0,0.333,11,0.014,13,1.309,16,0.008,17,0.01,18,0.008,57,0.774,59,1.58,88,1.708,98,1.931,111,1.642,153,4.013,160,3.525,168,2.432,278,4.312,536,3.615,764,6.671,765,4.618,766,4.618,767,4.618,768,4.618,769,6.004,770,4.618,771,4.618,772,4.618,773,4.618,774,4.618,775,4.618,776,4.618,777,4.618,778,4.618,779,4.618,780,4.618,781,4.618,782,4.618,783,4.618,784,4.618,785,4.618,786,4.618,787,4.618,788,4.618,789,4.618,790,4.618,791,4.618,792,4.618,793,4.618,794,4.618,795,4.618,796,4.618,797,4.618,798,4.618,799,4.618]],["title/miscellaneous/enumerations.html",[800,2.139,801,4.257]],["body/miscellaneous/enumerations.html",[11,0.014,16,0.008,17,0.01,18,0.008,21,5.544,22,1.019,40,3.764,76,5.242,192,4.422,355,3.341,361,3.764,367,3.764,489,4.333,800,2.902,801,4.043,802,4.652,803,4.652,804,4.652,805,6.032,806,6.032,807,6.032,808,4.652,809,6.032,810,6.032,811,4.652,812,6.032,813,6.032,814,6.032,815,4.652,816,6.032,817,6.032,818,6.032,819,6.032,820,4.652,821,4.652,822,4.652,823,4.652]],["title/miscellaneous/functions.html",[800,2.139,824,4.257]],["body/miscellaneous/functions.html",[11,0.013,16,0.009,17,0.011,18,0.009,22,1.17,101,2.983,124,2.64,125,2.087,126,2.341,168,3.466,171,3.136,187,2.675,274,5.152,279,4.641,280,3.836,396,3.865,737,5.72,740,4.641,741,5.72,742,5.72,743,5.72,751,4.641,800,3.332,824,4.641,825,5.341,826,4.641,827,5.341,828,5.341]],["title/index.html",[22,0.894,829,3.547]],["body/index.html",[2,0.558,11,0.015,16,0.004,17,0.007,18,0.004,19,0.945,51,0.778,62,2.781,95,0.671,96,4.079,97,0.984,98,1.026,99,1.119,100,1.119,101,1.026,102,1.119,103,1.071,104,2.133,105,2.133,106,1.741,107,1.119,108,1.119,117,1.026,139,3.815,140,2.133,141,2.133,142,2.75,148,3.296,203,1.531,224,5.228,225,2.133,226,2.133,227,3.945,228,3.815,229,3.815,230,3.81,238,5.228,239,2.133,240,2.133,241,3.945,242,4.477,243,3.81,259,2.599,269,2.599,304,2.932,309,2.133,311,2.133,329,3.614,353,2.75,380,2.133,381,2.133,420,2.922,432,2.133,433,2.133,514,2.922,574,2.133,575,2.133,676,2.133,677,2.133,678,2.133,679,5.896,680,5.896,681,4.039,682,4.039,683,4.039,829,2.133,830,3.816,831,2.454,832,2.454]],["title/modules.html",[97,2.218]],["body/modules.html",[11,0.011,16,0.008,17,0.011,18,0.008,96,3.846,97,1.929,139,3.208,148,3.002,224,3.456,227,3.002,228,3.208,229,3.208,230,2.671,238,3.456,241,3.002,242,3.208,243,2.671,833,8.052,834,6.997,835,8.052,836,8.09,837,4.812,838,4.812]],["title/miscellaneous/variables.html",[800,2.139,839,4.257]],["body/miscellaneous/variables.html",[1,0.813,11,0.014,16,0.004,17,0.006,18,0.004,19,0.914,22,0.52,25,1.395,27,1.295,34,0.953,42,4.6,48,1.584,93,1.584,150,2.912,165,3.128,171,1.395,172,2.693,192,4.093,197,2.481,198,0.626,199,1.084,200,2.481,201,1.706,202,1.706,332,4.89,360,1.482,363,1.492,395,2.672,414,1.859,418,2.912,537,2.672,538,2.672,681,3.46,682,3.46,683,3.46,729,2.064,732,2.064,733,2.064,734,2.064,738,2.064,739,3.233,752,2.064,753,3.233,754,3.233,755,2.064,756,3.985,757,2.064,758,3.985,759,2.064,760,3.985,800,1.482,826,3.233,834,3.233,839,2.064,840,4.586,841,4.586,842,4.586,843,2.376,844,2.376,845,4.586,846,4.586,847,2.376,848,3.721,849,3.721,850,2.376,851,2.376,852,3.721,853,2.376,854,2.376,855,2.376,856,2.376,857,2.376,858,2.376,859,2.376,860,2.376,861,2.376,862,2.376,863,2.376,864,2.376,865,4.586,866,2.376,867,2.376,868,2.376,869,2.376,870,2.376,871,2.376,872,2.376,873,2.376,874,2.376,875,2.376,876,2.376,877,3.721,878,2.376,879,2.376,880,2.376,881,3.721,882,3.721,883,3.721,884,2.376,885,3.721,886,3.721,887,2.376,888,3.721,889,3.721,890,2.376,891,2.376,892,2.376,893,2.376,894,2.376,895,2.376,896,2.376,897,2.376,898,2.376,899,3.721,900,2.376,901,2.376,902,2.376,903,2.376,904,2.376,905,2.376,906,2.376,907,2.376,908,3.721,909,2.376,910,2.376,911,2.376,912,2.376,913,3.721,914,3.721,915,2.376,916,2.376,917,2.376,918,2.376,919,3.721,920,3.721,921,2.376,922,2.376,923,2.376,924,3.721,925,3.721,926,3.721]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":169,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{}}}],["0.1.13",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["0.2.30",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["0.5.33",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":552,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["1",{"_index":19,"title":{"classes/AccountType-1.html":{},"controllers/AccountTypeController-1.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController-1.html":{},"injectables/AuthService-1.html":{},"classes/Language-1.html":{},"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"classes/Trader-1.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.6.0",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10')).format('yyyy",{"_index":553,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["100",{"_index":485,"title":{},"body":{"classes/Trader-1.html":{}}}],["11",{"_index":831,"title":{},"body":{"index.html":{}}}],["127.0.0.1",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["128",{"_index":403,"title":{},"body":{"classes/Task-1.html":{}}}],["13",{"_index":830,"title":{},"body":{"index.html":{}}}],["2",{"_index":448,"title":{},"body":{"injectables/TaskService.html":{},"classes/Trader-1.html":{}}}],["2.18.1",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["2021",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2f86",{"_index":544,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["3.0.2",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3306",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["380992247184",{"_index":564,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["4.1.6",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["4.17.20",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["4.7.11",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["40000",{"_index":570,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["45",{"_index":832,"title":{},"body":{"index.html":{}}}],["4b8f",{"_index":545,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["5.0.1",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":477,"title":{},"body":{"classes/Trader-1.html":{}}}],["7.1.5",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.2.0",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["8c3ce31931e3",{"_index":547,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["90c0",{"_index":546,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["__dirname.split",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":206,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["account",{"_index":34,"title":{},"body":{"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"classes/OpenAccountController.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"miscellaneous/variables.html":{}}}],["account.controller",{"_index":386,"title":{},"body":{"modules/OpenAccountModule.html":{}}}],["account.controller.ts",{"_index":348,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{},"coverage.html":{}}}],["account.controller.ts:11",{"_index":354,"title":{},"body":{"classes/OpenAccountController.html":{}}}],["account.controller.ts:19",{"_index":368,"title":{},"body":{"classes/OpenAccountController.html":{}}}],["account.controller.ts:23",{"_index":580,"title":{},"body":{"controllers/TraderOpenAccountController.html":{}}}],["account.controller.ts:27",{"_index":362,"title":{},"body":{"classes/OpenAccountController.html":{}}}],["account.controller.ts:31",{"_index":579,"title":{},"body":{"controllers/TraderOpenAccountController.html":{}}}],["account.dto",{"_index":643,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["account.dto.ts",{"_index":522,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"coverage.html":{}}}],["account.dto.ts:103",{"_index":612,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:111",{"_index":607,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:119",{"_index":595,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:128",{"_index":613,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:137",{"_index":593,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:145",{"_index":617,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:155",{"_index":615,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:162",{"_index":604,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:170",{"_index":602,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:25",{"_index":621,"title":{},"body":{"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["account.dto.ts:31",{"_index":527,"title":{},"body":{"classes/TraderMessengersDTO.html":{}}}],["account.dto.ts:35",{"_index":623,"title":{},"body":{"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["account.dto.ts:39",{"_index":525,"title":{},"body":{"classes/TraderMessengersDTO.html":{}}}],["account.dto.ts:44",{"_index":625,"title":{},"body":{"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["account.dto.ts:49",{"_index":589,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:58",{"_index":600,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:67",{"_index":603,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:75",{"_index":591,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:84",{"_index":598,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.dto.ts:95",{"_index":609,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{}}}],["account.module",{"_index":255,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["account.module.ts",{"_index":383,"title":{},"body":{"modules/OpenAccountModule.html":{}}}],["account.service",{"_index":387,"title":{},"body":{"modules/OpenAccountModule.html":{},"controllers/TraderOpenAccountController.html":{}}}],["account.service.ts",{"_index":388,"title":{},"body":{"injectables/OpenAccountService.html":{},"coverage.html":{}}}],["account/dtos/open",{"_index":520,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"coverage.html":{}}}],["account/open",{"_index":254,"title":{},"body":{"modules/GlobalTraderModule.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"controllers/TraderOpenAccountController.html":{},"coverage.html":{}}}],["accounts",{"_index":65,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{}}}],["accounttype",{"_index":1,"title":{"classes/AccountType.html":{},"classes/AccountType-1.html":{}},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"classes/ExistValidator.html":{},"modules/OpenAccountModule.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accounttypecontroller",{"_index":50,"title":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{}},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"modules/AccountTypeModule.html":{},"coverage.html":{}}}],["accounttypedto",{"_index":72,"title":{"classes/AccountTypeDTO.html":{}},"body":{"classes/AccountTypeDTO.html":{},"coverage.html":{}}}],["accounttypee",{"_index":40,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"miscellaneous/enumerations.html":{}}}],["accounttypee.demo",{"_index":48,"title":{},"body":{"classes/AccountType-1.html":{},"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"miscellaneous/variables.html":{}}}],["accounttypee.trading",{"_index":93,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"miscellaneous/variables.html":{}}}],["accounttypemodule",{"_index":96,"title":{"modules/AccountTypeModule.html":{}},"body":{"modules/AccountTypeModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"index.html":{},"modules.html":{}}}],["accounttyperepo",{"_index":127,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{}}}],["accounttypeservice",{"_index":62,"title":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{}},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"coverage.html":{},"index.html":{}}}],["admin",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin.entity.ts",{"_index":660,"title":{},"body":{"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"coverage.html":{}}}],["admin_translations",{"_index":681,"title":{},"body":{"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["admin_translations_core",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin_translations_local",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["administrators",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administratos",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admintranslations",{"_index":331,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/TranslationService.html":{}}}],["api",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/admin",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/doc/admin",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/doc/trader",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/trader",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_admin_prefix",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_trader_prefix",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedresponse",{"_index":581,"title":{},"body":{"controllers/TraderOpenAccountController.html":{}}}],["apioperation",{"_index":371,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["apiproperty",{"_index":85,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/LanguageDTO.html":{},"classes/TaskDTO-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TranslationDTO.html":{}}}],["apitags",{"_index":58,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{},"controllers/TaskController.html":{},"controllers/TraderController.html":{},"controllers/TraderOpenAccountController.html":{},"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{}}}],["apitags('languages",{"_index":306,"title":{},"body":{"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{}}}],["apitags('open",{"_index":585,"title":{},"body":{"controllers/TraderOpenAccountController.html":{}}}],["apitags('tasks",{"_index":422,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('traders",{"_index":516,"title":{},"body":{"controllers/TraderController.html":{}}}],["apitags('translations",{"_index":673,"title":{},"body":{"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{}}}],["apitags('types",{"_index":64,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{}}}],["app_port",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply(loggermiddleware",{"_index":257,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["apps/.../account",{"_index":802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../admin.ts",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../currency.ts",{"_index":803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../default.ts",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../email.ts",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../is",{"_index":826,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../make",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../messenger",{"_index":804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../regex.ts",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.ts",{"_index":806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../to",{"_index":827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../trader.ts",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/core/src/admin/modules/account",{"_index":73,"title":{},"body":{"classes/AccountTypeDTO.html":{},"coverage.html":{}}}],["apps/core/src/admin/modules/task/dtos/task.dto.ts",{"_index":429,"title":{},"body":{"classes/TaskDTO-1.html":{},"coverage.html":{}}}],["apps/core/src/admin/modules/task/dtos/task.dto.ts:11",{"_index":431,"title":{},"body":{"classes/TaskDTO-1.html":{}}}],["apps/core/src/admin/modules/task/dtos/task.dto.ts:18",{"_index":430,"title":{},"body":{"classes/TaskDTO-1.html":{}}}],["apps/core/src/admin/modules/task/task.controller.ts",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["apps/core/src/admin/modules/task/task.service.ts",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["apps/core/src/admin/modules/trader/trader.controller.ts",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["apps/core/src/admin/modules/trader/trader.service.ts",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["apps/core/src/shared/configs/translations/admin.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/core/src/shared/configs/translations/email.ts",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/core/src/shared/configs/translations/trader.ts",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/core/src/shared/consts/account",{"_index":808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/core/src/shared/consts/currency.ts",{"_index":811,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/core/src/shared/consts/messenger",{"_index":815,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/core/src/shared/consts/regex.ts",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/core/src/shared/consts/task.ts",{"_index":820,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/core/src/shared/entities/account",{"_index":20,"title":{},"body":{"classes/AccountType-1.html":{},"coverage.html":{}}}],["apps/core/src/shared/entities/language.entity.ts",{"_index":288,"title":{},"body":{"classes/Language-1.html":{},"coverage.html":{}}}],["apps/core/src/shared/entities/language.entity.ts:10",{"_index":295,"title":{},"body":{"classes/Language-1.html":{}}}],["apps/core/src/shared/entities/language.entity.ts:14",{"_index":293,"title":{},"body":{"classes/Language-1.html":{}}}],["apps/core/src/shared/entities/language.entity.ts:18",{"_index":292,"title":{},"body":{"classes/Language-1.html":{}}}],["apps/core/src/shared/entities/language.entity.ts:7",{"_index":290,"title":{},"body":{"classes/Language-1.html":{}}}],["apps/core/src/shared/entities/task.entity.ts",{"_index":393,"title":{},"body":{"classes/Task-1.html":{},"coverage.html":{}}}],["apps/core/src/shared/entities/task.entity.ts:11",{"_index":401,"title":{},"body":{"classes/Task-1.html":{}}}],["apps/core/src/shared/entities/task.entity.ts:14",{"_index":404,"title":{},"body":{"classes/Task-1.html":{}}}],["apps/core/src/shared/entities/task.entity.ts:17",{"_index":400,"title":{},"body":{"classes/Task-1.html":{}}}],["apps/core/src/shared/entities/task.entity.ts:20",{"_index":399,"title":{},"body":{"classes/Task-1.html":{}}}],["apps/core/src/shared/entities/task.entity.ts:24",{"_index":408,"title":{},"body":{"classes/Task-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts",{"_index":452,"title":{},"body":{"classes/Trader-1.html":{},"coverage.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:25",{"_index":480,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:28",{"_index":479,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:31",{"_index":484,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:35",{"_index":467,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:40",{"_index":476,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:43",{"_index":492,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:47",{"_index":495,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:55",{"_index":490,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:58",{"_index":488,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:61",{"_index":470,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:64",{"_index":496,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:67",{"_index":469,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:70",{"_index":502,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:73",{"_index":486,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:77",{"_index":482,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:81",{"_index":500,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:85",{"_index":498,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/trader.entity.ts:95",{"_index":473,"title":{},"body":{"classes/Trader-1.html":{}}}],["apps/core/src/shared/entities/translation",{"_index":662,"title":{},"body":{"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{},"coverage.html":{}}}],["apps/core/src/shared/entities/translation.entity.ts",{"_index":653,"title":{},"body":{"classes/Translation.html":{},"coverage.html":{}}}],["apps/core/src/shared/entities/translation.entity.ts:11",{"_index":657,"title":{},"body":{"classes/Translation.html":{}}}],["apps/core/src/shared/entities/translation.entity.ts:5",{"_index":655,"title":{},"body":{"classes/Translation.html":{}}}],["apps/core/src/shared/entities/translation.entity.ts:8",{"_index":656,"title":{},"body":{"classes/Translation.html":{}}}],["apps/core/src/shared/helpers/is",{"_index":171,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsTimezone.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/core/src/shared/helpers/make",{"_index":738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/core/src/shared/helpers/to",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/core/src/shared/middlewares/logger.middleware.ts",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["apps/core/src/shared/modules/account",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["apps/core/src/shared/modules/language/dtos/language.dto.ts",{"_index":317,"title":{},"body":{"classes/LanguageDTO.html":{},"coverage.html":{}}}],["apps/core/src/shared/modules/language/dtos/language.dto.ts:11",{"_index":319,"title":{},"body":{"classes/LanguageDTO.html":{}}}],["apps/core/src/shared/modules/language/dtos/language.dto.ts:18",{"_index":325,"title":{},"body":{"classes/LanguageDTO.html":{}}}],["apps/core/src/shared/modules/language/dtos/language.dto.ts:26",{"_index":323,"title":{},"body":{"classes/LanguageDTO.html":{}}}],["apps/core/src/shared/modules/language/dtos/language.dto.ts:36",{"_index":322,"title":{},"body":{"classes/LanguageDTO.html":{}}}],["apps/core/src/shared/modules/language/language.controller.ts",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["apps/core/src/shared/modules/language/language.service.ts",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["apps/core/src/shared/modules/translation/dtos/translation.dto.ts",{"_index":690,"title":{},"body":{"classes/TranslationDTO.html":{},"coverage.html":{}}}],["apps/core/src/shared/modules/translation/dtos/translation.dto.ts:13",{"_index":693,"title":{},"body":{"classes/TranslationDTO.html":{}}}],["apps/core/src/shared/modules/translation/dtos/translation.dto.ts:20",{"_index":695,"title":{},"body":{"classes/TranslationDTO.html":{}}}],["apps/core/src/shared/modules/translation/dtos/translation.dto.ts:6",{"_index":691,"title":{},"body":{"classes/TranslationDTO.html":{}}}],["apps/core/src/shared/modules/translation/translation.controller.ts",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["apps/core/src/shared/modules/translation/translation.service.ts",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["apps/core/src/trader/modules/auth/auth.controller.ts",{"_index":138,"title":{},"body":{"controllers/AuthController-1.html":{},"coverage.html":{}}}],["apps/core/src/trader/modules/auth/auth.service.ts",{"_index":147,"title":{},"body":{"injectables/AuthService-1.html":{},"coverage.html":{}}}],["apps/core/src/trader/modules/open",{"_index":347,"title":{},"body":{"classes/OpenAccountController.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"coverage.html":{}}}],["apps/main/src/admin/admin.module.ts",{"_index":231,"title":{},"body":{"modules/GlobalAdminModule.html":{}}}],["apps/main/src/admin/modules/account",{"_index":52,"title":{},"body":{"controllers/AccountTypeController.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"coverage.html":{}}}],["apps/main/src/admin/modules/task/dtos/task.dto.ts",{"_index":426,"title":{},"body":{"classes/TaskDTO.html":{},"coverage.html":{}}}],["apps/main/src/admin/modules/task/task.controller.ts",{"_index":417,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/main/src/admin/modules/task/task.module.ts",{"_index":434,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/main/src/admin/modules/task/task.service.ts",{"_index":437,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["apps/main/src/admin/modules/task/task.service.ts:10",{"_index":441,"title":{},"body":{"injectables/TaskService.html":{}}}],["apps/main/src/admin/modules/task/task.service.ts:18",{"_index":443,"title":{},"body":{"injectables/TaskService.html":{}}}],["apps/main/src/admin/modules/trader/trader.controller.ts",{"_index":511,"title":{},"body":{"controllers/TraderController.html":{},"coverage.html":{}}}],["apps/main/src/admin/modules/trader/trader.module.ts",{"_index":576,"title":{},"body":{"modules/TraderModule.html":{}}}],["apps/main/src/admin/modules/trader/trader.service.ts",{"_index":645,"title":{},"body":{"injectables/TraderService.html":{},"coverage.html":{}}}],["apps/main/src/admin/modules/trader/trader.service.ts:10",{"_index":648,"title":{},"body":{"injectables/TraderService.html":{}}}],["apps/main/src/main.ts",{"_index":751,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/main/src/shared/configs/default.ts",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/main/src/shared/configs/translations/admin.ts",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/main/src/shared/configs/translations/email.ts",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/main/src/shared/configs/translations/trader.ts",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/main/src/shared/entities/account",{"_index":6,"title":{},"body":{"classes/AccountType.html":{},"coverage.html":{}}}],["apps/main/src/shared/entities/language.entity.ts",{"_index":286,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["apps/main/src/shared/entities/task.entity.ts",{"_index":391,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["apps/main/src/shared/entities/trader.entity.ts",{"_index":450,"title":{},"body":{"classes/Trader.html":{},"coverage.html":{}}}],["apps/main/src/shared/entities/translation",{"_index":659,"title":{},"body":{"classes/TranslationAdmin.html":{},"classes/TranslationEmail.html":{},"classes/TranslationTrader.html":{},"coverage.html":{}}}],["apps/main/src/shared/helpers/is",{"_index":260,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"coverage.html":{}}}],["apps/main/src/shared/middlewares/logger.middleware.ts",{"_index":342,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["apps/main/src/shared/modules/account",{"_index":70,"title":{},"body":{"controllers/AccountTypeController-1.html":{},"injectables/AccountTypeService-1.html":{},"coverage.html":{}}}],["apps/main/src/shared/modules/database/database.module.ts",{"_index":149,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["apps/main/src/shared/modules/language/language.controller.ts",{"_index":299,"title":{},"body":{"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{},"coverage.html":{}}}],["apps/main/src/shared/modules/language/language.module.ts",{"_index":312,"title":{},"body":{"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{}}}],["apps/main/src/shared/modules/language/language.service.ts",{"_index":326,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["apps/main/src/shared/modules/language/language.service.ts:13",{"_index":335,"title":{},"body":{"injectables/LanguageService.html":{}}}],["apps/main/src/shared/modules/translation/translation.controller.ts",{"_index":667,"title":{},"body":{"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{},"coverage.html":{}}}],["apps/main/src/shared/modules/translation/translation.module.ts",{"_index":684,"title":{},"body":{"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{}}}],["apps/main/src/shared/modules/translation/translation.service.ts",{"_index":698,"title":{},"body":{"injectables/TranslationService.html":{},"coverage.html":{}}}],["apps/main/src/shared/modules/translation/translation.service.ts:14",{"_index":702,"title":{},"body":{"injectables/TranslationService.html":{}}}],["apps/main/src/trader/modules/auth/auth.controller.ts",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/main/src/trader/modules/auth/auth.module.ts",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/main/src/trader/modules/auth/auth.service.ts",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/main/src/trader/modules/open",{"_index":382,"title":{},"body":{"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"coverage.html":{}}}],["apps/main/src/trader/trader.module.ts",{"_index":244,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["apps/main/src/trader/trader.module.ts:28",{"_index":248,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["args",{"_index":186,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["args.constraints",{"_index":211,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["args.property",{"_index":210,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["args.targetname}_${args.property",{"_index":222,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["async",{"_index":178,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/OpenAccountController.html":{},"injectables/TaskService.html":{},"controllers/TraderOpenAccountController.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["auth",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthController-1.html":{}}}],["auth.controller",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":134,"title":{"controllers/AuthController.html":{},"controllers/AuthController-1.html":{}},"body":{"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":139,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/GlobalTraderModule.html":{},"index.html":{},"modules.html":{}}}],["authservice",{"_index":142,"title":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"coverage.html":{},"index.html":{}}}],["autoloadentities",{"_index":166,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["available",{"_index":838,"title":{},"body":{"modules.html":{}}}],["await",{"_index":213,"title":{},"body":{"classes/ExistValidator.html":{},"classes/OpenAccountController.html":{},"injectables/TaskService.html":{},"controllers/TraderOpenAccountController.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["base",{"_index":521,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"coverage.html":{}}}],["bcrypt",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["birth",{"_index":465,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["birthdate",{"_index":453,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["blue",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":370,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["boolean",{"_index":280,"title":{},"body":{"injectables/IsTimezone.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":101,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browse",{"_index":836,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":833,"title":{},"body":{"modules.html":{}}}],["c0bf0c71",{"_index":543,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["cascade",{"_index":415,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["cascade'})@joincolumn({name",{"_index":407,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["cash_transactions",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city",{"_index":454,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["class",{"_index":0,"title":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/ExistValidator.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/OpenAccountController.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"classes/UniqueValidator.html":{}},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/ExistValidator.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/OpenAccountController.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"classes/UniqueValidator.html":{},"index.html":{}}}],["client",{"_index":694,"title":{},"body":{"classes/TranslationDTO.html":{}}}],["clients",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_accounttypemodule",{"_index":104,"title":{},"body":{"modules/AccountTypeModule.html":{},"index.html":{}}}],["cluster_accounttypemodule_providers",{"_index":105,"title":{},"body":{"modules/AccountTypeModule.html":{},"index.html":{}}}],["cluster_authmodule",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_providers",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_globaladminmodule",{"_index":225,"title":{},"body":{"modules/GlobalAdminModule.html":{},"index.html":{}}}],["cluster_globaladminmodule_imports",{"_index":226,"title":{},"body":{"modules/GlobalAdminModule.html":{},"index.html":{}}}],["cluster_globaltradermodule",{"_index":239,"title":{},"body":{"modules/GlobalTraderModule.html":{},"index.html":{}}}],["cluster_globaltradermodule_imports",{"_index":240,"title":{},"body":{"modules/GlobalTraderModule.html":{},"index.html":{}}}],["cluster_languageadminmodule",{"_index":309,"title":{},"body":{"modules/LanguageAdminModule.html":{},"index.html":{}}}],["cluster_languageadminmodule_imports",{"_index":310,"title":{},"body":{"modules/LanguageAdminModule.html":{}}}],["cluster_languageadminmodule_providers",{"_index":311,"title":{},"body":{"modules/LanguageAdminModule.html":{},"index.html":{}}}],["cluster_languagetradermodule",{"_index":339,"title":{},"body":{"modules/LanguageTraderModule.html":{}}}],["cluster_languagetradermodule_imports",{"_index":340,"title":{},"body":{"modules/LanguageTraderModule.html":{}}}],["cluster_languagetradermodule_providers",{"_index":341,"title":{},"body":{"modules/LanguageTraderModule.html":{}}}],["cluster_openaccountmodule",{"_index":380,"title":{},"body":{"modules/OpenAccountModule.html":{},"index.html":{}}}],["cluster_openaccountmodule_providers",{"_index":381,"title":{},"body":{"modules/OpenAccountModule.html":{},"index.html":{}}}],["cluster_taskmodule",{"_index":432,"title":{},"body":{"modules/TaskModule.html":{},"index.html":{}}}],["cluster_taskmodule_providers",{"_index":433,"title":{},"body":{"modules/TaskModule.html":{},"index.html":{}}}],["cluster_tradermodule",{"_index":574,"title":{},"body":{"modules/TraderModule.html":{},"index.html":{}}}],["cluster_tradermodule_providers",{"_index":575,"title":{},"body":{"modules/TraderModule.html":{},"index.html":{}}}],["cluster_translationadminmodule",{"_index":676,"title":{},"body":{"modules/TranslationAdminModule.html":{},"index.html":{}}}],["cluster_translationadminmodule_exports",{"_index":677,"title":{},"body":{"modules/TranslationAdminModule.html":{},"index.html":{}}}],["cluster_translationadminmodule_providers",{"_index":678,"title":{},"body":{"modules/TranslationAdminModule.html":{},"index.html":{}}}],["cluster_translationtradermodule",{"_index":709,"title":{},"body":{"modules/TranslationTraderModule.html":{}}}],["cluster_translationtradermodule_exports",{"_index":711,"title":{},"body":{"modules/TranslationTraderModule.html":{}}}],["cluster_translationtradermodule_providers",{"_index":710,"title":{},"body":{"modules/TranslationTraderModule.html":{}}}],["code",{"_index":199,"title":{},"body":{"classes/ExistValidator.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/Trader-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":46,"title":{},"body":{"classes/AccountType-1.html":{},"classes/Language-1.html":{},"classes/Task-1.html":{},"classes/Trader-1.html":{},"classes/Translation.html":{}}}],["column('text",{"_index":294,"title":{},"body":{"classes/Language-1.html":{},"classes/Task-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{}}}],["column({comment",{"_index":468,"title":{},"body":{"classes/Trader-1.html":{}}}],["column({length",{"_index":402,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["column({type",{"_index":30,"title":{},"body":{"classes/AccountType-1.html":{},"classes/Language-1.html":{},"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["comment",{"_index":32,"title":{},"body":{"classes/AccountType-1.html":{},"classes/Language-1.html":{},"classes/Task-1.html":{},"classes/Trader-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{}}}],["conditions",{"_index":218,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["config",{"_index":150,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.mysql_database",{"_index":163,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.mysql_host",{"_index":155,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.mysql_password",{"_index":161,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.mysql_port",{"_index":157,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.mysql_user",{"_index":159,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configure",{"_index":245,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["configure(consumer",{"_index":246,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["connection",{"_index":181,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["const",{"_index":196,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["constraints",{"_index":204,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["constructor",{"_index":120,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"injectables/LanguageService.html":{},"classes/OpenAccountController.html":{},"injectables/TaskService.html":{},"injectables/TraderService.html":{},"injectables/TranslationService.html":{},"classes/UniqueValidator.html":{}}}],["constructor(@injectconnection",{"_index":270,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsUnique.html":{}}}],["constructor(accounttyperepo",{"_index":121,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{}}}],["constructor(connection",{"_index":180,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"classes/UniqueValidator.html":{}}}],["constructor(languagerepo",{"_index":328,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructor(openaccountservice",{"_index":352,"title":{},"body":{"classes/OpenAccountController.html":{}}}],["constructor(protected",{"_index":67,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/ExistValidator.html":{},"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{},"classes/OpenAccountController.html":{},"controllers/TaskController.html":{},"controllers/TraderController.html":{},"controllers/TraderOpenAccountController.html":{},"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["constructor(taskrepo",{"_index":440,"title":{},"body":{"injectables/TaskService.html":{}}}],["constructor(traderrepo",{"_index":647,"title":{},"body":{"injectables/TraderService.html":{}}}],["constructor(tranalationadminrepo",{"_index":699,"title":{},"body":{"injectables/TranslationService.html":{}}}],["consumer",{"_index":249,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["controller",{"_index":49,"title":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{},"controllers/TaskController.html":{},"controllers/TraderController.html":{},"controllers/TraderOpenAccountController.html":{},"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{}},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{},"controllers/TaskController.html":{},"controllers/TraderController.html":{},"controllers/TraderOpenAccountController.html":{},"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{},"coverage.html":{}}}],["controller('account",{"_index":66,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{}}}],["controller('auth",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthController-1.html":{}}}],["controller('languages",{"_index":307,"title":{},"body":{"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{}}}],["controller('open",{"_index":586,"title":{},"body":{"controllers/TraderOpenAccountController.html":{}}}],["controller('tasks",{"_index":423,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('traders",{"_index":517,"title":{},"body":{"controllers/TraderController.html":{}}}],["controller('translations",{"_index":674,"title":{},"body":{"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{}}}],["controllers",{"_index":51,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"modules/AccountTypeModule.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TraderController.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}],["copyright",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core/admin/controllers",{"_index":61,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/TaskController.html":{},"controllers/TraderController.html":{}}}],["core/admin/dtos",{"_index":428,"title":{},"body":{"classes/TaskDTO.html":{}}}],["core/admin/services",{"_index":129,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/TaskService.html":{},"injectables/TraderService.html":{}}}],["core/shared/consts",{"_index":47,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/ExistValidator.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["core/shared/controllers",{"_index":71,"title":{},"body":{"controllers/AccountTypeController-1.html":{},"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{},"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{}}}],["core/shared/entities",{"_index":14,"title":{},"body":{"classes/AccountType.html":{},"classes/Language.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{}}}],["core/shared/helpers",{"_index":267,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["core/shared/middlewares",{"_index":345,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["core/shared/services",{"_index":133,"title":{},"body":{"injectables/AccountTypeService-1.html":{},"injectables/LanguageService.html":{},"injectables/TranslationService.html":{}}}],["core/trader/controllers",{"_index":583,"title":{},"body":{"controllers/TraderOpenAccountController.html":{}}}],["core/trader/dtos",{"_index":373,"title":{},"body":{"classes/OpenAccountController.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["core/trader/services",{"_index":372,"title":{},"body":{"classes/OpenAccountController.html":{},"injectables/OpenAccountService.html":{}}}],["coreaccounttype",{"_index":9,"title":{},"body":{"classes/AccountType.html":{}}}],["coreaccounttypecontroller",{"_index":60,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{}}}],["coreaccounttypeservice",{"_index":119,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{}}}],["corelanguage",{"_index":287,"title":{},"body":{"classes/Language.html":{},"classes/Trader-1.html":{}}}],["corelanguageadmincontroller",{"_index":303,"title":{},"body":{"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{}}}],["corelanguageservice",{"_index":327,"title":{},"body":{"injectables/LanguageService.html":{}}}],["corelanguagetradercontroller",{"_index":302,"title":{},"body":{"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{}}}],["coreloggermiddleware",{"_index":343,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["coreopenaccountcontroller",{"_index":582,"title":{},"body":{"controllers/TraderOpenAccountController.html":{}}}],["coreopenaccountservice",{"_index":389,"title":{},"body":{"injectables/OpenAccountService.html":{}}}],["coretask",{"_index":508,"title":{},"body":{"classes/Trader-1.html":{}}}],["coretaskcontroller",{"_index":419,"title":{},"body":{"controllers/TaskController.html":{}}}],["coretaskdto",{"_index":427,"title":{},"body":{"classes/TaskDTO.html":{}}}],["coretaskservice",{"_index":438,"title":{},"body":{"injectables/TaskService.html":{}}}],["coretrader",{"_index":411,"title":{},"body":{"classes/Task-1.html":{}}}],["coretradercontroller",{"_index":513,"title":{},"body":{"controllers/TraderController.html":{}}}],["coretraderopendemoaccountdto",{"_index":618,"title":{},"body":{"classes/TraderOpenDemoAccountDTO.html":{}}}],["coretraderopentradingaccountdto",{"_index":644,"title":{},"body":{"classes/TraderOpenTradingAccountDTO.html":{}}}],["coretraderservice",{"_index":646,"title":{},"body":{"injectables/TraderService.html":{}}}],["coretranslationadmin",{"_index":661,"title":{},"body":{"classes/TranslationAdmin.html":{}}}],["coretranslationadmincontroller",{"_index":669,"title":{},"body":{"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{}}}],["coretranslationservice",{"_index":330,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/TranslationService.html":{}}}],["coretranslationtradercontroller",{"_index":671,"title":{},"body":{"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{}}}],["country",{"_index":455,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["coverage",{"_index":716,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":398,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["createdat",{"_index":394,"title":{},"body":{"classes/Task-1.html":{},"injectables/TaskService.html":{},"classes/Trader-1.html":{}}}],["createtask",{"_index":439,"title":{},"body":{"injectables/TaskService.html":{}}}],["crm",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":24,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{}}}],["currencye",{"_index":76,"title":{},"body":{"classes/AccountTypeDTO.html":{},"miscellaneous/enumerations.html":{}}}],["currencye.eur",{"_index":94,"title":{},"body":{"classes/AccountTypeDTO.html":{}}}],["current_timestamp",{"_index":509,"title":{},"body":{"classes/Trader-1.html":{}}}],["curreny",{"_index":33,"title":{},"body":{"classes/AccountType-1.html":{}}}],["database",{"_index":162,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["databasemodule",{"_index":148,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"index.html":{},"modules.html":{}}}],["date",{"_index":396,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"miscellaneous/functions.html":{}}}],["date'})@isdate",{"_index":466,"title":{},"body":{"classes/Trader-1.html":{}}}],["date('1999",{"_index":551,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["date(date.now",{"_index":449,"title":{},"body":{"injectables/TaskService.html":{}}}],["date.now",{"_index":91,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/TaskDTO-1.html":{}}}],["datetime",{"_index":397,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["datetime.ts",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dd",{"_index":555,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["declarations",{"_index":100,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}],["decorators",{"_index":29,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/OpenAccountController.html":{},"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{}}}],["default",{"_index":42,"title":{},"body":{"classes/AccountType-1.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/OpenAccountController.html":{},"classes/Trader-1.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":177,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/UniqueValidator.html":{}}}],["defaultmessage(args",{"_index":183,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"classes/UniqueValidator.html":{}}}],["defined",{"_index":35,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"classes/ExistValidator.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"classes/OpenAccountController.html":{},"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"injectables/TaskService.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader-1.html":{},"classes/UniqueValidator.html":{}}}],["demo",{"_index":361,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":98,"title":{"dependencies.html":{}},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"dependencies.html":{},"index.html":{}}}],["deposit",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":395,"title":{},"body":{"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":822,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dotenv",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["downloads",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":821,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["e",{"_index":191,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["each",{"_index":565,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["email",{"_index":456,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["email'})@index({unique",{"_index":474,"title":{},"body":{"classes/Trader-1.html":{}}}],["email.entity.ts",{"_index":696,"title":{},"body":{"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"coverage.html":{}}}],["email_translations",{"_index":682,"title":{},"body":{"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["email_translations_core",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email_translations_local",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailtranslations",{"_index":333,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/TranslationService.html":{}}}],["empty",{"_index":90,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/LanguageDTO.html":{},"classes/TaskDTO-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TranslationDTO.html":{}}}],["empty!'})@apiproperty({enum",{"_index":78,"title":{},"body":{"classes/AccountTypeDTO.html":{}}}],["empty!'})@apiproperty({type",{"_index":81,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/LanguageDTO.html":{},"classes/TaskDTO-1.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/TranslationDTO.html":{}}}],["empty!'})@isboolean()@apiproperty({type",{"_index":320,"title":{},"body":{"classes/LanguageDTO.html":{}}}],["empty!'})@isdatestring()@apiproperty({type",{"_index":590,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@isemail(undefined",{"_index":596,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@isenum(accounttypee)@apiproperty({enum",{"_index":83,"title":{},"body":{"classes/AccountTypeDTO.html":{}}}],["empty!'})@isenum(messengertypee)@apiproperty({enum",{"_index":526,"title":{},"body":{"classes/TraderMessengersDTO.html":{}}}],["empty!'})@isint()@apiproperty({type",{"_index":616,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@isiso31661alpha2()@apiproperty({type",{"_index":594,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@ismobilephone(undefined",{"_index":610,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@isstring()@apiproperty({type",{"_index":588,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@isstring()@maxlength(255)@apiproperty({type",{"_index":592,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@isstring()@maxlength(255)@validate(istimezone)@apiproperty({type",{"_index":614,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@isstring()@maxlength(64)@apiproperty({example",{"_index":523,"title":{},"body":{"classes/TraderMessengersDTO.html":{}}}],["empty!'})@isstring()@maxlength(64)@apiproperty({type",{"_index":599,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@isstring()@minlength(8)@maxlength(32)@matches(passwordregex)@apiproperty({type",{"_index":608,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@isstring()@validate(isexist",{"_index":619,"title":{},"body":{"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["empty!'})@maxlength(2)@apiproperty({type",{"_index":601,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["empty!'})@maxlength(2)@validate(isexist",{"_index":624,"title":{},"body":{"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["en",{"_index":318,"title":{},"body":{"classes/LanguageDTO.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["english",{"_index":324,"title":{},"body":{"classes/LanguageDTO.html":{}}}],["entity",{"_index":12,"title":{},"body":{"classes/AccountType.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"classes/Task.html":{},"classes/Trader.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationEmail.html":{},"classes/TranslationTrader.html":{}}}],["entityclass",{"_index":208,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["entityschema",{"_index":193,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["enum",{"_index":41,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["enumerations",{"_index":801,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eur",{"_index":813,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["europe/kiev",{"_index":572,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["example",{"_index":79,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/LanguageDTO.html":{},"classes/TaskDTO-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/TranslationDTO.html":{}}}],["exclude",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":272,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{}}}],["existvalidator",{"_index":170,"title":{"classes/ExistValidator.html":{}},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"coverage.html":{}}}],["existvalidator:64",{"_index":264,"title":{},"body":{"injectables/IsExist.html":{}}}],["existvalidator:95",{"_index":263,"title":{},"body":{"injectables/IsExist.html":{}}}],["export",{"_index":15,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["exports",{"_index":103,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}],["express",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AccountType.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"controllers/LanguageAdminController.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"controllers/TraderController.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["extraconditions",{"_index":200,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["extraconditions[`${args.targetname}_${args.property",{"_index":223,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["false",{"_index":321,"title":{},"body":{"classes/LanguageDTO.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["fieldstoid",{"_index":197,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fieldstoid[findcondition.tostring",{"_index":220,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{}}}],["findcondition",{"_index":209,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["findcondition(args",{"_index":217,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["findconditions",{"_index":194,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["first",{"_index":478,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["firstname",{"_index":457,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["flat",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["footer",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroutes",{"_index":258,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["function",{"_index":216,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsTimezone.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{}}}],["functions",{"_index":824,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["generator",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["generator.generate",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["globaladminmodule",{"_index":224,"title":{"modules/GlobalAdminModule.html":{}},"body":{"modules/GlobalAdminModule.html":{},"index.html":{},"modules.html":{}}}],["globaltradermodule",{"_index":238,"title":{"modules/GlobalTraderModule.html":{}},"body":{"modules/GlobalTraderModule.html":{},"index.html":{},"modules.html":{}}}],["gpb",{"_index":814,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["graph",{"_index":837,"title":{},"body":{"modules.html":{}}}],["header",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":154,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["iamvasiliev143",{"_index":524,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["iamvasliev143@gmail.com",{"_index":559,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["ib",{"_index":809,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["id",{"_index":25,"title":{},"body":{"classes/AccountType-1.html":{},"classes/ExistValidator.html":{},"classes/Task-1.html":{},"classes/Trader-1.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":173,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsTimezone.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["import",{"_index":10,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["imports",{"_index":114,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/DatabaseModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/OpenAccountController.html":{},"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"injectables/TaskService.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["inherited",{"_index":262,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{}}}],["injectable",{"_index":116,"title":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"injectables/LanguageService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/OpenAccountService.html":{},"injectables/TaskService.html":{},"injectables/TraderService.html":{},"injectables/TranslationService.html":{}},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"injectables/LanguageService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/OpenAccountService.html":{},"injectables/TaskService.html":{},"injectables/TraderService.html":{},"injectables/TranslationService.html":{},"coverage.html":{}}}],["injectables",{"_index":117,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"injectables/LanguageService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/OpenAccountService.html":{},"injectables/TaskService.html":{},"injectables/TraderService.html":{},"injectables/TranslationService.html":{},"index.html":{}}}],["injectconnection",{"_index":265,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsUnique.html":{}}}],["injectrepository",{"_index":128,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"injectables/LanguageService.html":{},"injectables/TaskService.html":{},"injectables/TraderService.html":{},"injectables/TranslationService.html":{}}}],["injectrepository(accounttype",{"_index":130,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{}}}],["injectrepository(language",{"_index":337,"title":{},"body":{"injectables/LanguageService.html":{}}}],["injectrepository(task",{"_index":444,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectrepository(trader",{"_index":650,"title":{},"body":{"injectables/TraderService.html":{}}}],["injectrepository(translationadmin",{"_index":704,"title":{},"body":{"injectables/TranslationService.html":{}}}],["injectrepository(translationemail",{"_index":705,"title":{},"body":{"injectables/TranslationService.html":{}}}],["injectrepository(translationtrader",{"_index":706,"title":{},"body":{"injectables/TranslationService.html":{}}}],["interface",{"_index":203,"title":{"interfaces/UniqueValidationArguments.html":{}},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":712,"title":{},"body":{"interfaces/UniqueValidationArguments.html":{}}}],["isboolean",{"_index":297,"title":{},"body":{"classes/Language-1.html":{},"classes/LanguageDTO.html":{}}}],["isdate",{"_index":507,"title":{},"body":{"classes/Trader-1.html":{}}}],["isdatestring",{"_index":532,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["isemail",{"_index":505,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["isemail(undefined",{"_index":556,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["isenum",{"_index":86,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["isenum(accounttypee",{"_index":92,"title":{},"body":{"classes/AccountTypeDTO.html":{}}}],["isenum(messengertypee",{"_index":539,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["isexist",{"_index":259,"title":{"injectables/IsExist.html":{}},"body":{"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"modules/OpenAccountModule.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"coverage.html":{},"index.html":{}}}],["isint",{"_index":531,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["isiso31661alpha2",{"_index":529,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["ismobilephone",{"_index":506,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["ismobilephone(undefined",{"_index":563,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["isnotempty",{"_index":87,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/LanguageDTO.html":{},"classes/TaskDTO-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TranslationDTO.html":{}}}],["isnotempty({message",{"_index":77,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/LanguageDTO.html":{},"classes/TaskDTO-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/TranslationDTO.html":{}}}],["isstring",{"_index":530,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["istimezone",{"_index":273,"title":{"injectables/IsTimezone.html":{}},"body":{"injectables/IsTimezone.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"coverage.html":{}}}],["isunique",{"_index":269,"title":{"injectables/IsUnique.html":{}},"body":{"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"modules/OpenAccountModule.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"coverage.html":{},"index.html":{}}}],["joincolumn",{"_index":410,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["keepconnectionalive",{"_index":167,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["key",{"_index":654,"title":{},"body":{"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{}}}],["keyof",{"_index":205,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["lagoon",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["language",{"_index":198,"title":{"classes/Language.html":{},"classes/Language-1.html":{}},"body":{"classes/ExistValidator.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language.controller",{"_index":314,"title":{},"body":{"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{}}}],["language.service",{"_index":305,"title":{},"body":{"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{}}}],["languageadmincontroller",{"_index":298,"title":{"controllers/LanguageAdminController.html":{}},"body":{"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"coverage.html":{}}}],["languageadminmodule",{"_index":227,"title":{"modules/LanguageAdminModule.html":{}},"body":{"modules/GlobalAdminModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"index.html":{},"modules.html":{}}}],["languagedto",{"_index":316,"title":{"classes/LanguageDTO.html":{}},"body":{"classes/LanguageDTO.html":{},"coverage.html":{}}}],["languagerepo",{"_index":336,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languages",{"_index":300,"title":{},"body":{"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{}}}],["languageservice",{"_index":304,"title":{"injectables/LanguageService.html":{}},"body":{"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"coverage.html":{},"index.html":{}}}],["languagetradercontroller",{"_index":301,"title":{"controllers/LanguageTraderController.html":{}},"body":{"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"coverage.html":{}}}],["languagetradermodule",{"_index":241,"title":{"modules/LanguageTraderModule.html":{}},"body":{"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"index.html":{},"modules.html":{}}}],["last",{"_index":483,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["lastname",{"_index":458,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["lead_types.client",{"_index":692,"title":{},"body":{"classes/TranslationDTO.html":{}}}],["legend",{"_index":99,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}],["length",{"_index":414,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{},"miscellaneous/variables.html":{}}}],["leverage",{"_index":459,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["literal",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["lodash",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":349,"title":{},"body":{"classes/OpenAccountController.html":{}}}],["logger(openaccountcontroller.name",{"_index":356,"title":{},"body":{"classes/OpenAccountController.html":{}}}],["loggermiddleware",{"_index":251,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/GlobalTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["lowercase",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ltd",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makepassword",{"_index":538,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mam",{"_index":810,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytoone",{"_index":409,"title":{},"body":{"classes/Task-1.html":{}}}],["manytoone('trader",{"_index":405,"title":{},"body":{"classes/Task-1.html":{}}}],["matches",{"_index":534,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["matches(passwordregex",{"_index":562,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["matching",{"_index":17,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":535,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["maxlength(2",{"_index":573,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["maxlength(255",{"_index":558,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["maxlength(32",{"_index":561,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["maxlength(64",{"_index":541,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["merge",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":89,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/LanguageDTO.html":{},"classes/TaskDTO-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/TranslationDTO.html":{}}}],["messenger",{"_index":487,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["messengeraccount",{"_index":460,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["messengertype",{"_index":461,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["messengertypee",{"_index":489,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"miscellaneous/enumerations.html":{}}}],["messengertypee.telegram",{"_index":540,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["metadata",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":175,"title":{},"body":{"classes/ExistValidator.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/OpenAccountController.html":{},"injectables/TaskService.html":{},"controllers/TraderOpenAccountController.html":{},"classes/UniqueValidator.html":{}}}],["middlewareconsumer",{"_index":247,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["mikhail",{"_index":548,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["minlength",{"_index":533,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["minlength(8",{"_index":560,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["miscellaneous",{"_index":800,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":554,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["mobile",{"_index":493,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["module",{"_index":95,"title":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{}},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}],["modules",{"_index":97,"title":{"modules.html":{}},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{},"modules.html":{}}}],["modules/account",{"_index":234,"title":{},"body":{"modules/GlobalAdminModule.html":{}}}],["modules/auth/auth.module",{"_index":256,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["modules/open",{"_index":253,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["modules/task/task.module",{"_index":236,"title":{},"body":{"modules/GlobalAdminModule.html":{}}}],["modules/trader/trader.module",{"_index":237,"title":{},"body":{"modules/GlobalAdminModule.html":{}}}],["moment",{"_index":278,"title":{},"body":{"injectables/IsTimezone.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"dependencies.html":{}}}],["moment(new",{"_index":550,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["moment.tz.zone(timezone",{"_index":281,"title":{},"body":{"injectables/IsTimezone.html":{}}}],["mysql",{"_index":153,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["mysql_database",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql_host",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql_password",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql_port",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql_user",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":125,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"classes/ExistValidator.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"injectables/LanguageService.html":{},"classes/OpenAccountController.html":{},"classes/Task-1.html":{},"injectables/TaskService.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"injectables/TranslationService.html":{},"classes/UniqueValidator.html":{},"miscellaneous/functions.html":{}}}],["navigation",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":57,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"controllers/TraderController.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"injectables/TraderService.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"injectables/TranslationService.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":59,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"controllers/LanguageAdminController.html":{},"classes/LanguageDTO.html":{},"controllers/LanguageTraderController.html":{},"classes/OpenAccountController.html":{},"controllers/TaskController.html":{},"classes/TaskDTO-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"controllers/TranslationAdminController.html":{},"classes/TranslationDTO.html":{},"controllers/TranslationTraderController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":111,"title":{},"body":{"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"modules/DatabaseModule.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"modules/LanguageAdminModule.html":{},"injectables/LanguageService.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"modules/TraderModule.html":{},"injectables/TraderService.html":{},"modules/TranslationAdminModule.html":{},"injectables/TranslationService.html":{},"modules/TranslationTraderModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":344,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["never",{"_index":413,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["new",{"_index":355,"title":{},"body":{"classes/OpenAccountController.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["null",{"_index":282,"title":{},"body":{"injectables/IsTimezone.html":{}}}],["nullable",{"_index":471,"title":{},"body":{"classes/Trader-1.html":{}}}],["number",{"_index":501,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["numbers",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":332,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/TranslationService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(extraconditions).includes",{"_index":221,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["object.keys(fieldstoid).includes(findcondition.tostring",{"_index":219,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["objecttype",{"_index":195,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["ondelete",{"_index":406,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["onetomany",{"_index":504,"title":{},"body":{"classes/Trader-1.html":{}}}],["onetomany('task",{"_index":497,"title":{},"body":{"classes/Trader-1.html":{}}}],["onetoone",{"_index":503,"title":{},"body":{"classes/Trader-1.html":{}}}],["onetoone('language",{"_index":481,"title":{},"body":{"classes/Trader-1.html":{}}}],["open",{"_index":360,"title":{},"body":{"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"miscellaneous/variables.html":{}}}],["open_account",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openaccountcontroller",{"_index":346,"title":{"classes/OpenAccountController.html":{}},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{},"coverage.html":{}}}],["openaccountmodule",{"_index":242,"title":{"modules/OpenAccountModule.html":{}},"body":{"modules/GlobalTraderModule.html":{},"modules/OpenAccountModule.html":{},"index.html":{},"modules.html":{}}}],["openaccountservice",{"_index":353,"title":{"injectables/OpenAccountService.html":{}},"body":{"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"controllers/TraderOpenAccountController.html":{},"coverage.html":{},"index.html":{}}}],["opendemoaccount",{"_index":350,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["opendemoaccount(@body",{"_index":379,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["opendemoaccount(trader",{"_index":357,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["opentradingaccount",{"_index":351,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["opentradingaccount(@body",{"_index":376,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["opentradingaccount(trader",{"_index":364,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["optional",{"_index":126,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"classes/ExistValidator.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"injectables/LanguageService.html":{},"classes/OpenAccountController.html":{},"classes/Task-1.html":{},"injectables/TaskService.html":{},"classes/Trader-1.html":{},"controllers/TraderOpenAccountController.html":{},"injectables/TraderService.html":{},"classes/TranslationDTO.html":{},"injectables/TranslationService.html":{},"classes/UniqueValidator.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":108,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}],["overview",{"_index":829,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":763,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":124,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"classes/ExistValidator.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"injectables/LanguageService.html":{},"classes/OpenAccountController.html":{},"injectables/TaskService.html":{},"controllers/TraderOpenAccountController.html":{},"injectables/TraderService.html":{},"injectables/TranslationService.html":{},"classes/UniqueValidator.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.mysql_port",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passowrd",{"_index":491,"title":{},"body":{"classes/Trader-1.html":{}}}],["password",{"_index":160,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"dependencies.html":{}}}],["password.ts",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordregex",{"_index":537,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paths[paths.length",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone",{"_index":462,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["phone'})@ismobilephone",{"_index":494,"title":{},"body":{"classes/Trader-1.html":{}}}],["port",{"_index":156,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["post",{"_index":369,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["post('/demo",{"_index":378,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["post('/demo')@apioperation({summary",{"_index":359,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["post('/trading",{"_index":374,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["post('/trading')@apioperation({summary",{"_index":366,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["prefix",{"_index":55,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{},"controllers/TaskController.html":{},"controllers/TraderController.html":{},"controllers/TraderOpenAccountController.html":{},"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{}}}],["primarycolumn",{"_index":296,"title":{},"body":{"classes/Language-1.html":{},"classes/Translation.html":{}}}],["primarycolumn({comment",{"_index":289,"title":{},"body":{"classes/Language-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{}}}],["primarygeneratedcolumn",{"_index":45,"title":{},"body":{"classes/AccountType-1.html":{},"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":37,"title":{},"body":{"classes/AccountType-1.html":{},"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["process.env.admin_port",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.api_admin_prefix",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.api_trader_prefix",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_database",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_host",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_password",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_user",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_admin_description",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_admin_prefix",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_admin_title",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_admin_version",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_trader_prefix",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":23,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/OpenAccountController.html":{},"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{},"interfaces/UniqueValidationArguments.html":{}}}],["protected",{"_index":131,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"injectables/LanguageService.html":{},"injectables/TaskService.html":{},"injectables/TraderService.html":{},"injectables/TranslationService.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["provide",{"_index":679,"title":{},"body":{"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}],["providers",{"_index":102,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}],["province",{"_index":463,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["public",{"_index":176,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/OpenAccountController.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["public'})@isboolean",{"_index":291,"title":{},"body":{"classes/Language-1.html":{}}}],["readonly",{"_index":68,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"controllers/LanguageAdminController.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"classes/OpenAccountController.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"controllers/TraderOpenAccountController.html":{},"injectables/TraderService.html":{},"controllers/TranslationAdminController.html":{},"classes/TranslationDTO.html":{},"injectables/TranslationService.html":{},"controllers/TranslationTraderController.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["reflect",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["registration",{"_index":823,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["repository",{"_index":122,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"injectables/LanguageService.html":{},"injectables/TaskService.html":{},"injectables/TraderService.html":{},"injectables/TranslationService.html":{}}}],["required",{"_index":566,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["reserved",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":107,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}],["result",{"_index":16,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":18,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":212,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsTimezone.html":{},"classes/OpenAccountController.html":{},"injectables/TaskService.html":{},"controllers/TraderOpenAccountController.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["returns",{"_index":187,"title":{},"body":{"classes/ExistValidator.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/OpenAccountController.html":{},"injectables/TaskService.html":{},"controllers/TraderOpenAccountController.html":{},"classes/UniqueValidator.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rimraf",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["shared/configs",{"_index":151,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{}}}],["shared/entities",{"_index":112,"title":{},"body":{"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"modules/LanguageAdminModule.html":{},"injectables/LanguageService.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"classes/Task.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"modules/TraderModule.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"injectables/TraderService.html":{},"modules/TranslationAdminModule.html":{},"injectables/TranslationService.html":{},"modules/TranslationTraderModule.html":{}}}],["shared/helpers",{"_index":385,"title":{},"body":{"modules/OpenAccountModule.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["shared/middlewares",{"_index":252,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["shared/modules",{"_index":233,"title":{},"body":{"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{}}}],["sharedaccounttypemodule",{"_index":232,"title":{},"body":{"modules/GlobalAdminModule.html":{}}}],["sidebar",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skype",{"_index":819,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"classes/AccountTypeDTO.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"controllers/LanguageAdminController.html":{},"modules/LanguageAdminModule.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"controllers/LanguageTraderController.html":{},"modules/LanguageTraderModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"injectables/OpenAccountService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"controllers/TaskController.html":{},"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"controllers/TraderController.html":{},"classes/TraderMessengersDTO.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["statements",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["strict",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["summary",{"_index":375,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["sumskaya",{"_index":568,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["sumy",{"_index":569,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["super",{"_index":338,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/TranslationService.html":{}}}],["super(accounttyperepo",{"_index":132,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{}}}],["super(accounttypeservice",{"_index":69,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{}}}],["super(connection",{"_index":271,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsUnique.html":{}}}],["super(languageservice",{"_index":308,"title":{},"body":{"controllers/LanguageAdminController.html":{},"controllers/LanguageTraderController.html":{}}}],["super(openaccountservice",{"_index":587,"title":{},"body":{"controllers/TraderOpenAccountController.html":{}}}],["super(taskrepo",{"_index":445,"title":{},"body":{"injectables/TaskService.html":{}}}],["super(taskservice",{"_index":424,"title":{},"body":{"controllers/TaskController.html":{}}}],["super(traderrepo",{"_index":651,"title":{},"body":{"injectables/TraderService.html":{}}}],["super(traderservice",{"_index":518,"title":{},"body":{"controllers/TraderController.html":{}}}],["super(translationservice",{"_index":675,"title":{},"body":{"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{}}}],["support",{"_index":834,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":835,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["swagger_admin_description",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swagger_admin_prefix",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swagger_admin_title",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swagger_admin_version",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swagger_trader_description",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swagger_trader_prefix",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swagger_trader_title",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swagger_trader_version",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbols",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":164,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["t",{"_index":412,"title":{},"body":{"classes/Task-1.html":{},"classes/Trader-1.html":{}}}],["table",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":390,"title":{"classes/Task.html":{},"classes/Task-1.html":{}},"body":{"classes/Task.html":{},"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"coverage.html":{}}}],["task.controller",{"_index":435,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.service",{"_index":421,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task_status",{"_index":805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["task_type",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["taskcontroller",{"_index":416,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskcore",{"_index":392,"title":{},"body":{"classes/Task.html":{}}}],["taskdto",{"_index":425,"title":{"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{}},"body":{"classes/TaskDTO.html":{},"classes/TaskDTO-1.html":{},"coverage.html":{}}}],["taskmodule",{"_index":228,"title":{"modules/TaskModule.html":{}},"body":{"modules/GlobalAdminModule.html":{},"modules/TaskModule.html":{},"index.html":{},"modules.html":{}}}],["taskrepo",{"_index":442,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks",{"_index":418,"title":{},"body":{"controllers/TaskController.html":{},"classes/Trader-1.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":420,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"index.html":{}}}],["telegram",{"_index":816,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":447,"title":{},"body":{"injectables/TaskService.html":{}}}],["text",{"_index":31,"title":{},"body":{"classes/AccountType-1.html":{}}}],["this.connection.getrepository(entityclass).count",{"_index":214,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["this.openaccountservice.opentradingaccount(trader",{"_index":377,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{}}}],["this.taskrepo.save",{"_index":446,"title":{},"body":{"injectables/TaskService.html":{}}}],["timezone",{"_index":168,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/IsTimezone.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["timezone'})@isdate",{"_index":499,"title":{},"body":{"classes/Trader-1.html":{}}}],["timezone.ts",{"_index":274,"title":{},"body":{"injectables/IsTimezone.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["timezone.ts:16",{"_index":277,"title":{},"body":{"injectables/IsTimezone.html":{}}}],["timezone.ts:20",{"_index":275,"title":{},"body":{"injectables/IsTimezone.html":{}}}],["timezonevalidator",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["timezonevalidator(timezone",{"_index":279,"title":{},"body":{"injectables/IsTimezone.html":{},"miscellaneous/functions.html":{}}}],["title",{"_index":26,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"injectables/TaskService.html":{}}}],["tolocaldatetime",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tolocaldatetime(timezone",{"_index":828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trader",{"_index":363,"title":{"classes/Trader.html":{},"classes/Trader-1.html":{}},"body":{"classes/OpenAccountController.html":{},"modules/OpenAccountModule.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"modules/TraderModule.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"injectables/TraderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["trader.controller",{"_index":577,"title":{},"body":{"modules/TraderModule.html":{}}}],["trader.entity.ts",{"_index":707,"title":{},"body":{"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"coverage.html":{}}}],["trader.service",{"_index":515,"title":{},"body":{"controllers/TraderController.html":{},"modules/TraderModule.html":{}}}],["trader/dtos",{"_index":584,"title":{},"body":{"controllers/TraderOpenAccountController.html":{}}}],["trader_translations",{"_index":683,"title":{},"body":{"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trader_translations_core",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trader_translations_local",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tradercontroller",{"_index":510,"title":{"controllers/TraderController.html":{}},"body":{"controllers/TraderController.html":{},"modules/TraderModule.html":{},"coverage.html":{}}}],["tradercore",{"_index":451,"title":{},"body":{"classes/Trader.html":{}}}],["tradermessengersdto",{"_index":519,"title":{"classes/TraderMessengersDTO.html":{}},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"coverage.html":{}}}],["tradermodule",{"_index":229,"title":{"modules/TraderModule.html":{}},"body":{"modules/GlobalAdminModule.html":{},"modules/TraderModule.html":{},"index.html":{},"modules.html":{}}}],["traderopenaccountcontroller",{"_index":384,"title":{"controllers/TraderOpenAccountController.html":{}},"body":{"modules/OpenAccountModule.html":{},"controllers/TraderOpenAccountController.html":{},"coverage.html":{}}}],["traderopenbaseaccountdto",{"_index":542,"title":{"classes/TraderOpenBaseAccountDTO.html":{}},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"coverage.html":{}}}],["traderopenbaseaccountdto:103",{"_index":639,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:111",{"_index":637,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:119",{"_index":631,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:128",{"_index":640,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:137",{"_index":630,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:145",{"_index":642,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:155",{"_index":641,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:162",{"_index":636,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:170",{"_index":634,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:49",{"_index":628,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:58",{"_index":633,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:67",{"_index":635,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:75",{"_index":629,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:84",{"_index":632,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopenbaseaccountdto:95",{"_index":638,"title":{},"body":{"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["traderopendemoaccountdto",{"_index":358,"title":{"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{}},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"coverage.html":{}}}],["traderopendemoaccountdto_accounttype",{"_index":202,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"miscellaneous/variables.html":{}}}],["traderopentradingaccountdto",{"_index":365,"title":{"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"coverage.html":{}}}],["traderopentradingaccountdto_accounttype",{"_index":201,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"miscellaneous/variables.html":{}}}],["traderrepo",{"_index":649,"title":{},"body":{"injectables/TraderService.html":{}}}],["traders",{"_index":512,"title":{},"body":{"controllers/TraderController.html":{}}}],["traderservice",{"_index":514,"title":{"injectables/TraderService.html":{}},"body":{"controllers/TraderController.html":{},"modules/TraderModule.html":{},"injectables/TraderService.html":{},"coverage.html":{},"index.html":{}}}],["tradertranslations",{"_index":334,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/TranslationService.html":{}}}],["trading",{"_index":367,"title":{},"body":{"classes/OpenAccountController.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["tranalationadminrepo",{"_index":703,"title":{},"body":{"injectables/TranslationService.html":{}}}],["tranalationemailrepo",{"_index":700,"title":{},"body":{"injectables/TranslationService.html":{}}}],["tranalationtraderrepo",{"_index":701,"title":{},"body":{"injectables/TranslationService.html":{}}}],["transfer",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":536,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"dependencies.html":{}}}],["translation",{"_index":652,"title":{"classes/Translation.html":{}},"body":{"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{},"coverage.html":{}}}],["translation.controller",{"_index":687,"title":{},"body":{"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{}}}],["translation.service",{"_index":672,"title":{},"body":{"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{}}}],["translation/translation.module",{"_index":313,"title":{},"body":{"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{}}}],["translation:11",{"_index":665,"title":{},"body":{"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{}}}],["translation:5",{"_index":663,"title":{},"body":{"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{}}}],["translation:8",{"_index":664,"title":{},"body":{"classes/TranslationAdmin-1.html":{},"classes/TranslationEmail-1.html":{},"classes/TranslationTrader-1.html":{}}}],["translationadmin",{"_index":658,"title":{"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{}},"body":{"classes/TranslationAdmin.html":{},"classes/TranslationAdmin-1.html":{},"modules/TranslationAdminModule.html":{},"injectables/TranslationService.html":{},"modules/TranslationTraderModule.html":{},"coverage.html":{}}}],["translationadmincontroller",{"_index":666,"title":{"controllers/TranslationAdminController.html":{}},"body":{"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"coverage.html":{}}}],["translationadminmodule",{"_index":230,"title":{"modules/TranslationAdminModule.html":{}},"body":{"modules/GlobalAdminModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{},"modules.html":{}}}],["translationdto",{"_index":689,"title":{"classes/TranslationDTO.html":{}},"body":{"classes/TranslationDTO.html":{},"coverage.html":{}}}],["translationemail",{"_index":685,"title":{"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{}},"body":{"modules/TranslationAdminModule.html":{},"classes/TranslationEmail.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"modules/TranslationTraderModule.html":{},"coverage.html":{}}}],["translationemailcore",{"_index":697,"title":{},"body":{"classes/TranslationEmail.html":{}}}],["translations",{"_index":668,"title":{},"body":{"controllers/TranslationAdminController.html":{},"controllers/TranslationTraderController.html":{}}}],["translationservice",{"_index":329,"title":{"injectables/TranslationService.html":{}},"body":{"injectables/LanguageService.html":{},"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"injectables/TranslationService.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"coverage.html":{},"index.html":{}}}],["translationtrader",{"_index":686,"title":{"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{}},"body":{"modules/TranslationAdminModule.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"classes/TranslationTrader-1.html":{},"modules/TranslationTraderModule.html":{},"coverage.html":{}}}],["translationtradercontroller",{"_index":670,"title":{"controllers/TranslationTraderController.html":{}},"body":{"controllers/TranslationAdminController.html":{},"modules/TranslationAdminModule.html":{},"controllers/TranslationTraderController.html":{},"modules/TranslationTraderModule.html":{},"coverage.html":{}}}],["translationtradercore",{"_index":708,"title":{},"body":{"classes/TranslationTrader.html":{}}}],["translationtradermodule",{"_index":243,"title":{"modules/TranslationTraderModule.html":{}},"body":{"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{},"modules.html":{}}}],["true",{"_index":165,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"classes/LanguageDTO.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"miscellaneous/variables.html":{}}}],["true})@isemail",{"_index":475,"title":{},"body":{"classes/Trader-1.html":{}}}],["true})@type(undefined)@apiproperty({type",{"_index":606,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"modules/DatabaseModule.html":{},"classes/ExistValidator.html":{},"modules/GlobalTraderModule.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"injectables/LanguageService.html":{},"classes/OpenAccountController.html":{},"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"injectables/TaskService.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"controllers/TraderOpenAccountController.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin-1.html":{},"classes/TranslationDTO.html":{},"classes/TranslationEmail-1.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader-1.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.controller",{"_index":113,"title":{},"body":{"modules/AccountTypeModule.html":{}}}],["type.controller.ts",{"_index":54,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"coverage.html":{}}}],["type.dto.ts",{"_index":75,"title":{},"body":{"classes/AccountTypeDTO.html":{},"coverage.html":{}}}],["type.dto.ts:13",{"_index":82,"title":{},"body":{"classes/AccountTypeDTO.html":{}}}],["type.dto.ts:21",{"_index":84,"title":{},"body":{"classes/AccountTypeDTO.html":{}}}],["type.dto.ts:28",{"_index":80,"title":{},"body":{"classes/AccountTypeDTO.html":{}}}],["type.entity.ts",{"_index":7,"title":{},"body":{"classes/AccountType.html":{},"coverage.html":{}}}],["type.module",{"_index":235,"title":{},"body":{"modules/GlobalAdminModule.html":{}}}],["type.module.ts",{"_index":109,"title":{},"body":{"modules/AccountTypeModule.html":{}}}],["type.service",{"_index":63,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"modules/AccountTypeModule.html":{}}}],["type.service.ts",{"_index":118,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"coverage.html":{}}}],["type.service.ts:10",{"_index":123,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{}}}],["type.ts",{"_index":21,"title":{},"body":{"classes/AccountType-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["type.ts:10",{"_index":39,"title":{},"body":{"classes/AccountType-1.html":{}}}],["type.ts:18",{"_index":44,"title":{},"body":{"classes/AccountType-1.html":{}}}],["type.ts:21",{"_index":36,"title":{},"body":{"classes/AccountType-1.html":{}}}],["type.ts:7",{"_index":38,"title":{},"body":{"classes/AccountType-1.html":{}}}],["type/account",{"_index":53,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"modules/GlobalAdminModule.html":{},"coverage.html":{}}}],["type/dtos/account",{"_index":74,"title":{},"body":{"classes/AccountTypeDTO.html":{},"coverage.html":{}}}],["typeof",{"_index":215,"title":{},"body":{"classes/ExistValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["typeorm",{"_index":13,"title":{},"body":{"classes/AccountType.html":{},"classes/AccountType-1.html":{},"injectables/AccountTypeService.html":{},"injectables/AccountTypeService-1.html":{},"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"classes/Language.html":{},"classes/Language-1.html":{},"injectables/LanguageService.html":{},"classes/Task.html":{},"classes/Task-1.html":{},"injectables/TaskService.html":{},"classes/Trader.html":{},"classes/Trader-1.html":{},"injectables/TraderService.html":{},"classes/Translation.html":{},"classes/TranslationAdmin.html":{},"classes/TranslationEmail.html":{},"injectables/TranslationService.html":{},"classes/TranslationTrader.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":110,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/DatabaseModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{}}}],["typeormmodule.forfeature",{"_index":688,"title":{},"body":{"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{}}}],["typeormmodule.forfeature([accounttype",{"_index":115,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/OpenAccountModule.html":{}}}],["typeormmodule.forfeature([language",{"_index":315,"title":{},"body":{"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{}}}],["typeormmodule.forfeature([task",{"_index":436,"title":{},"body":{"modules/TaskModule.html":{}}}],["typeormmodule.forfeature([trader",{"_index":578,"title":{},"body":{"modules/TraderModule.html":{}}}],["typeormmodule.forroot",{"_index":152,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":56,"title":{},"body":{"controllers/AccountTypeController.html":{},"controllers/AccountTypeController-1.html":{}}}],["ua",{"_index":567,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["ui",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":43,"title":{},"body":{"classes/AccountType-1.html":{},"classes/AccountTypeDTO.html":{},"classes/Task-1.html":{},"classes/TaskDTO-1.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["undefined)@apiproperty({type",{"_index":620,"title":{},"body":{"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["undefined})@isdate",{"_index":472,"title":{},"body":{"classes/Trader-1.html":{}}}],["unique",{"_index":268,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"classes/Trader-1.html":{}}}],["unique.ts",{"_index":172,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unique.ts:11",{"_index":283,"title":{},"body":{"injectables/IsUnique.html":{}}}],["unique.ts:19",{"_index":261,"title":{},"body":{"injectables/IsExist.html":{}}}],["unique.ts:37",{"_index":713,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["unique.ts:40",{"_index":715,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["unique.ts:54",{"_index":714,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["unique.ts:61",{"_index":182,"title":{},"body":{"classes/ExistValidator.html":{}}}],["unique.ts:64",{"_index":190,"title":{},"body":{"classes/ExistValidator.html":{}}}],["unique.ts:95",{"_index":185,"title":{},"body":{"classes/ExistValidator.html":{}}}],["uniquevalidationarguments",{"_index":189,"title":{"interfaces/UniqueValidationArguments.html":{}},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{}}}],["uniquevalidator",{"_index":207,"title":{"classes/UniqueValidator.html":{}},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"coverage.html":{}}}],["uniquevalidator:40",{"_index":285,"title":{},"body":{"injectables/IsUnique.html":{}}}],["uniquevalidator:54",{"_index":284,"title":{},"body":{"injectables/IsUnique.html":{}}}],["uppercase",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usd",{"_index":812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["username",{"_index":158,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["usevalue",{"_index":680,"title":{},"body":{"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}],["validate",{"_index":179,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/UniqueValidator.html":{}}}],["validate(isexist",{"_index":626,"title":{},"body":{"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["validate(istimezone",{"_index":571,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["validate(isunique",{"_index":627,"title":{},"body":{"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["validate(timezone",{"_index":276,"title":{},"body":{"injectables/IsTimezone.html":{}}}],["validate(value",{"_index":188,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["validatenested",{"_index":528,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{}}}],["validatenested({each",{"_index":605,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["validationarguments",{"_index":184,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["validator",{"_index":88,"title":{},"body":{"classes/AccountTypeDTO.html":{},"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{},"classes/Language-1.html":{},"classes/LanguageDTO.html":{},"classes/TaskDTO-1.html":{},"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{},"classes/TranslationDTO.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":266,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsTimezone.html":{},"injectables/IsUnique.html":{}}}],["validatorconstraintinterface",{"_index":174,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsTimezone.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{}}}],["value",{"_index":192,"title":{},"body":{"classes/ExistValidator.html":{},"injectables/IsExist.html":{},"injectables/IsUnique.html":{},"classes/OpenAccountController.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UniqueValidator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":839,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasiliev",{"_index":549,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["viber",{"_index":817,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":250,"title":{},"body":{"modules/GlobalTraderModule.html":{}}}],["whatsapp",{"_index":818,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["withdraw",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrong",{"_index":557,"title":{},"body":{"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["wrong!'})@apiproperty({type",{"_index":611,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["wrong!'})@maxlength(255)@apiproperty({type",{"_index":597,"title":{},"body":{"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["wrong!'})@maxlength(255)@validate(isunique",{"_index":622,"title":{},"body":{"classes/TraderOpenDemoAccountDTO.html":{},"classes/TraderOpenTradingAccountDTO.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zip",{"_index":464,"title":{},"body":{"classes/Trader-1.html":{},"classes/TraderMessengersDTO.html":{},"classes/TraderOpenBaseAccountDTO.html":{},"classes/TraderOpenDemoAccountDTO-1.html":{},"classes/TraderOpenTradingAccountDTO-1.html":{}}}],["zoom",{"_index":106,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/AuthModule.html":{},"modules/GlobalAdminModule.html":{},"modules/GlobalTraderModule.html":{},"modules/LanguageAdminModule.html":{},"modules/LanguageTraderModule.html":{},"modules/OpenAccountModule.html":{},"modules/TaskModule.html":{},"modules/TraderModule.html":{},"modules/TranslationAdminModule.html":{},"modules/TranslationTraderModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccountType.html":{"url":"classes/AccountType.html","title":"class - AccountType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/entities/account-type.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CoreAccountType\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from 'typeorm';\n\nimport { AccountType as CoreAccountType } from '@core/shared/entities';\n\n@Entity()\nexport class AccountType extends CoreAccountType {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountType-1.html":{"url":"classes/AccountType-1.html","title":"class - AccountType-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/entities/account-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', comment: 'Curreny of Account Type'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/account-type.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {comment: 'Account Type ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/account-type.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', comment: 'Title of Account Type'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/account-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccountTypeE\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: AccountTypeE, default: undefined, comment: 'Type of Account Type'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/account-type.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, Column } from 'typeorm';\n\nimport { AccountTypeE } from '@core/shared/consts';\n\nexport class AccountType {\n  @PrimaryGeneratedColumn('uuid', { comment: 'Account Type ID' })\n  id!: string;\n\n  @Column({ type: 'text', comment: 'Title of Account Type' })\n  title!: string;\n\n  @Column({\n    type: 'enum',\n    enum: AccountTypeE,\n    default: AccountTypeE.demo,\n    comment: 'Type of Account Type',\n  })\n  type!: AccountTypeE;\n\n  @Column({ type: 'text', comment: 'Curreny of Account Type' })\n  currency!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountTypeController.html":{"url":"controllers/AccountTypeController.html","title":"controller - AccountTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/admin/modules/account-type/account-type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                account-types\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { AccountTypeController as CoreAccountTypeController } from '@core/admin/controllers';\n\nimport { AccountTypeService } from './account-type.service';\n\n@ApiTags('Types of Accounts')\n@Controller('account-types')\nexport class AccountTypeController extends CoreAccountTypeController {\n  constructor(protected readonly accountTypeService: AccountTypeService) {\n    super(accountTypeService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountTypeController-1.html":{"url":"controllers/AccountTypeController-1.html","title":"controller - AccountTypeController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/modules/account-type/account-type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                account-types\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { AccountTypeController as CoreAccountTypeController } from '@core/shared/controllers';\n\nimport { AccountTypeService } from './account-type.service';\n\n@ApiTags('Types of Accounts')\n@Controller('account-types')\nexport class AccountTypeController extends CoreAccountTypeController {\n  constructor(protected readonly accountTypeService: AccountTypeService) {\n    super(accountTypeService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountTypeDTO.html":{"url":"classes/AccountTypeDTO.html","title":"class - AccountTypeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountTypeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/admin/modules/account-type/dtos/account-type.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CurrencyE\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Currency cannot be empty!'})@ApiProperty({enum: CurrencyE, example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/admin/modules/account-type/dtos/account-type.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Title cannot be empty!'})@ApiProperty({type: String, example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/admin/modules/account-type/dtos/account-type.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccountTypeE\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Type cannot be empty!'})@IsEnum(AccountTypeE)@ApiProperty({enum: AccountTypeE, example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/admin/modules/account-type/dtos/account-type.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { IsEnum, IsNotEmpty } from 'class-validator';\n\nimport { AccountTypeE, CurrencyE } from '@core/shared/consts';\n\nexport class AccountTypeDTO {\n  @IsNotEmpty({ message: 'Title cannot be empty!' })\n  @ApiProperty({\n    type: String,\n    example: `Account #${Date.now()}`,\n  })\n  title!: string;\n\n  @IsNotEmpty({ message: 'Type cannot be empty!' })\n  @IsEnum(AccountTypeE)\n  @ApiProperty({\n    enum: AccountTypeE,\n    example: AccountTypeE.trading,\n  })\n  type!: AccountTypeE;\n\n  @IsNotEmpty({ message: 'Currency cannot be empty!' })\n  @ApiProperty({\n    enum: CurrencyE,\n    example: CurrencyE.EUR,\n  })\n  currency!: CurrencyE;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountTypeModule.html":{"url":"modules/AccountTypeModule.html","title":"module - AccountTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountTypeModule\n\n\n\ncluster_AccountTypeModule_providers\n\n\n\n\nAccountTypeService\n\nAccountTypeService\n\n\n\nAccountTypeModule\n\nAccountTypeModule\n\nAccountTypeModule -->\n\nAccountTypeService->AccountTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/admin/modules/account-type/account-type.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountTypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountTypeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AccountType } from '@shared/entities';\n\nimport { AccountTypeService } from './account-type.service';\n\nimport { AccountTypeController } from './account-type.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountType])],\n\n  controllers: [AccountTypeController],\n\n  providers: [AccountTypeService],\n\n  exports: [TypeOrmModule],\n})\nexport class AccountTypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountTypeService.html":{"url":"injectables/AccountTypeService.html","title":"injectable - AccountTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/admin/modules/account-type/account-type.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CoreAccountTypeService\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountTypeRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/main/src/admin/modules/account-type/account-type.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountTypeRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { AccountType } from '@shared/entities';\n\nimport { AccountTypeService as CoreAccountTypeService } from '@core/admin/services';\n\n@Injectable()\nexport class AccountTypeService extends CoreAccountTypeService {\n  constructor(\n    @InjectRepository(AccountType)\n    protected readonly accountTypeRepo: Repository,\n  ) {\n    super(accountTypeRepo);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountTypeService-1.html":{"url":"injectables/AccountTypeService-1.html","title":"injectable - AccountTypeService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/modules/account-type/account-type.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CoreAccountTypeService\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountTypeRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/main/src/shared/modules/account-type/account-type.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountTypeRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { AccountType } from '@shared/entities';\n\nimport { AccountTypeService as CoreAccountTypeService } from '@core/shared/services';\n\n@Injectable()\nexport class AccountTypeService extends CoreAccountTypeService {\n  constructor(\n    @InjectRepository(AccountType)\n    protected readonly accountTypeRepo: Repository,\n  ) {\n    super(accountTypeRepo);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/trader/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('auth')\nexport class AuthController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController-1.html":{"url":"controllers/AuthController-1.html","title":"controller - AuthController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/trader/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('auth')\nexport class AuthController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/trader/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/trader/modules/auth/auth.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService-1.html":{"url":"injectables/AuthService-1.html","title":"injectable - AuthService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/trader/modules/auth/auth.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/shared/modules/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { CONFIG } from '@shared/configs';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: CONFIG.MYSQL_HOST,\n      port: CONFIG.MYSQL_PORT,\n      username: CONFIG.MYSQL_USER,\n      password: CONFIG.MYSQL_PASSWORD,\n      database: CONFIG.MYSQL_DATABASE,\n      synchronize: true,\n      autoLoadEntities: true,\n      keepConnectionAlive: true,\n      timezone: '0',\n    }),\n  ],\n\n  exports: [TypeOrmModule],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExistValidator.html":{"url":"classes/ExistValidator.html","title":"class - ExistValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExistValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/helpers/is-unique.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in apps/core/src/shared/helpers/is-unique.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in apps/core/src/shared/helpers/is-unique.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(value: string, args: UniqueValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in apps/core/src/shared/helpers/is-unique.ts:64\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                UniqueValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Connection, EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport {\n  ValidationArguments,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\nimport { AccountTypeE } from '@core/shared/consts';\n\nconst fieldsToId: {\n  [index: string]: string;\n} = {\n  accountType: 'id',\n  language: 'code',\n};\n\nconst extraConditions: {\n  [index: string]: {\n    type: AccountTypeE;\n  };\n} = {\n  TraderOpenTradingAccountDTO_accountType: {\n    type: AccountTypeE.trading,\n  },\n\n  TraderOpenDemoAccountDTO_accountType: {\n    type: AccountTypeE.demo,\n  },\n};\n\ninterface UniqueValidationArguments extends ValidationArguments {\n  constraints: [\n    ObjectType | EntitySchema | string,\n    ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n  ];\n}\n\nexport abstract class UniqueValidator implements ValidatorConstraintInterface {\n  protected constructor(protected readonly connection: Connection) {}\n\n  public async validate(value: string, args: UniqueValidationArguments) {\n    const [EntityClass, findCondition = args.property] = args.constraints;\n    return (\n      (await this.connection.getRepository(EntityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n                [findCondition || args.property]: value,\n              },\n      })) (value: string, args: UniqueValidationArguments) {\n    let [EntityClass, findCondition = args.property] = args.constraints;\n    let conditions!: {\n      [index: string]: string;\n    };\n\n    if (Object.keys(fieldsToId).includes(findCondition.toString())) {\n      findCondition = fieldsToId[findCondition.toString()];\n    }\n\n    if (\n      Object.keys(extraConditions).includes(\n        `${args.targetName}_${args.property}`,\n      )\n    ) {\n      conditions = extraConditions[`${args.targetName}_${args.property}`];\n    }\n\n    return !(\n      (await this.connection.getRepository(EntityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n                [findCondition || args.property]: value,\n                ...conditions,\n              },\n      })) \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GlobalAdminModule.html":{"url":"modules/GlobalAdminModule.html","title":"module - GlobalAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    GlobalAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GlobalAdminModule\n\n\n\ncluster_GlobalAdminModule_imports\n\n\n\n\nAccountTypeModule\n\nAccountTypeModule\n\n\n\nGlobalAdminModule\n\nGlobalAdminModule\n\nGlobalAdminModule -->\n\nAccountTypeModule->GlobalAdminModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nGlobalAdminModule -->\n\nDatabaseModule->GlobalAdminModule\n\n\n\n\n\nLanguageAdminModule\n\nLanguageAdminModule\n\nGlobalAdminModule -->\n\nLanguageAdminModule->GlobalAdminModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nGlobalAdminModule -->\n\nTaskModule->GlobalAdminModule\n\n\n\n\n\nTraderModule\n\nTraderModule\n\nGlobalAdminModule -->\n\nTraderModule->GlobalAdminModule\n\n\n\n\n\nTranslationAdminModule\n\nTranslationAdminModule\n\nGlobalAdminModule -->\n\nTranslationAdminModule->GlobalAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountTypeModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            LanguageAdminModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            TraderModule\n                        \n                        \n                            TranslationAdminModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport {\n  DatabaseModule,\n  LanguageAdminModule,\n  TranslationAdminModule,\n  AccountTypeModule as SharedAccountTypeModule,\n} from '@shared/modules';\nimport { AccountTypeModule } from './modules/account-type/account-type.module';\n\nimport { TaskModule } from './modules/task/task.module';\nimport { TraderModule } from './modules/trader/trader.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n\n    LanguageAdminModule,\n    TranslationAdminModule,\n\n    SharedAccountTypeModule,\n    AccountTypeModule,\n\n    TaskModule,\n    TraderModule,\n  ],\n})\nexport class GlobalAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GlobalTraderModule.html":{"url":"modules/GlobalTraderModule.html","title":"module - GlobalTraderModule","body":"\n                   \n\n\n\n\n    Modules\n    GlobalTraderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GlobalTraderModule\n\n\n\ncluster_GlobalTraderModule_imports\n\n\n\n\nAccountTypeModule\n\nAccountTypeModule\n\n\n\nGlobalTraderModule\n\nGlobalTraderModule\n\nGlobalTraderModule -->\n\nAccountTypeModule->GlobalTraderModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nGlobalTraderModule -->\n\nAuthModule->GlobalTraderModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nGlobalTraderModule -->\n\nDatabaseModule->GlobalTraderModule\n\n\n\n\n\nLanguageTraderModule\n\nLanguageTraderModule\n\nGlobalTraderModule -->\n\nLanguageTraderModule->GlobalTraderModule\n\n\n\n\n\nOpenAccountModule\n\nOpenAccountModule\n\nGlobalTraderModule -->\n\nOpenAccountModule->GlobalTraderModule\n\n\n\n\n\nTranslationTraderModule\n\nTranslationTraderModule\n\nGlobalTraderModule -->\n\nTranslationTraderModule->GlobalTraderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/trader/trader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountTypeModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            LanguageTraderModule\n                        \n                        \n                            OpenAccountModule\n                        \n                        \n                            TranslationTraderModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in apps/main/src/trader/trader.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\n\nimport {\n  DatabaseModule,\n  LanguageTraderModule,\n  TranslationTraderModule,\n  AccountTypeModule,\n} from '@shared/modules';\n\nimport { LoggerMiddleware } from '@shared/middlewares';\n\nimport { OpenAccountModule } from './modules/open-account/open-account.module';\nimport { AuthModule } from './modules/auth/auth.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n\n    LanguageTraderModule,\n    TranslationTraderModule,\n\n    AccountTypeModule,\n    OpenAccountModule,\n    AuthModule,\n  ],\n})\nexport class GlobalTraderModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes('/');\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsExist.html":{"url":"injectables/IsExist.html","title":"injectable - IsExist","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IsExist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/helpers/is-unique.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExistValidator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in apps/main/src/shared/helpers/is-unique.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Inherited from         ExistValidator\n\n                \n            \n            \n                \n                        Defined in         ExistValidator:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(value: string, args: UniqueValidationArguments)\n                \n            \n\n\n            \n                \n                    Inherited from         ExistValidator\n\n                \n            \n            \n                \n                        Defined in         ExistValidator:64\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                UniqueValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectConnection } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\n\nimport { Connection } from 'typeorm';\nimport { ValidatorConstraint } from 'class-validator';\n\nimport { ExistValidator, UniqueValidator } from '@core/shared/helpers';\n\n@ValidatorConstraint({ name: 'is-unique', async: true })\n@Injectable()\nexport class IsUnique extends UniqueValidator {\n  constructor(@InjectConnection() protected readonly connection: Connection) {\n    super(connection);\n  }\n}\n\n@ValidatorConstraint({ name: 'is-exist', async: true })\n@Injectable()\nexport class IsExist extends ExistValidator {\n  constructor(@InjectConnection() protected readonly connection: Connection) {\n    super(connection);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsTimezone.html":{"url":"injectables/IsTimezone.html","title":"injectable - IsTimezone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IsTimezone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/helpers/is-timezone.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultMessage()\n                \n            \n\n\n            \n                \n                    Defined in apps/core/src/shared/helpers/is-timezone.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(timezone: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/core/src/shared/helpers/is-timezone.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timezone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport moment from 'moment-timezone';\n\nexport function TimezoneValidator(timezone: string): boolean {\n  return moment.tz.zone(timezone) != null;\n}\n\n@ValidatorConstraint({ name: 'is-timezone' })\n@Injectable()\nexport class IsTimezone implements ValidatorConstraintInterface {\n  public async validate(timezone: string) {\n    return TimezoneValidator(timezone);\n  }\n\n  public defaultMessage() {\n    return `This timezone does not exist!`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsUnique.html":{"url":"injectables/IsUnique.html","title":"injectable - IsUnique","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IsUnique\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/helpers/is-unique.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UniqueValidator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in apps/main/src/shared/helpers/is-unique.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Inherited from         UniqueValidator\n\n                \n            \n            \n                \n                        Defined in         UniqueValidator:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(value: string, args: UniqueValidationArguments)\n                \n            \n\n\n            \n                \n                    Inherited from         UniqueValidator\n\n                \n            \n            \n                \n                        Defined in         UniqueValidator:40\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                UniqueValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectConnection } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\n\nimport { Connection } from 'typeorm';\nimport { ValidatorConstraint } from 'class-validator';\n\nimport { ExistValidator, UniqueValidator } from '@core/shared/helpers';\n\n@ValidatorConstraint({ name: 'is-unique', async: true })\n@Injectable()\nexport class IsUnique extends UniqueValidator {\n  constructor(@InjectConnection() protected readonly connection: Connection) {\n    super(connection);\n  }\n}\n\n@ValidatorConstraint({ name: 'is-exist', async: true })\n@Injectable()\nexport class IsExist extends ExistValidator {\n  constructor(@InjectConnection() protected readonly connection: Connection) {\n    super(connection);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/entities/language.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CoreLanguage\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from 'typeorm';\n\nimport { Language as CoreLanguage } from '@core/shared/entities';\n\n@Entity()\nexport class Language extends CoreLanguage {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language-1.html":{"url":"classes/Language-1.html","title":"class - Language-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/entities/language.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                default\n                            \n                            \n                                public\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({comment: 'Language Code'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/language.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', comment: 'If the Language is Default and Public'})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/language.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', comment: 'If the Language is Public'})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/language.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text', {comment: 'Title of the Language'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/language.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryColumn, Column } from 'typeorm';\nimport { IsBoolean } from 'class-validator';\n\n@Entity()\nexport class Language {\n  @PrimaryColumn({ comment: 'Language Code' })\n  code!: string;\n\n  @Column('text', { comment: 'Title of the Language' })\n  title!: string;\n\n  @Column({ type: 'boolean', comment: 'If the Language is Public' })\n  @IsBoolean()\n  public!: boolean;\n\n  @Column({ type: 'boolean', comment: 'If the Language is Default and Public' })\n  @IsBoolean()\n  default!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LanguageAdminController.html":{"url":"controllers/LanguageAdminController.html","title":"controller - LanguageAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LanguageAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/modules/language/language.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                languages\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport {\n  LanguageTraderController as CoreLanguageTraderController,\n  LanguageAdminController as CoreLanguageAdminController,\n} from '@core/shared/controllers';\n\nimport { LanguageService } from './language.service';\n\n@ApiTags('Languages')\n@Controller('languages')\nexport class LanguageTraderController extends CoreLanguageTraderController {\n  constructor(protected readonly languageService: LanguageService) {\n    super(languageService);\n  }\n}\n\n@ApiTags('Languages')\n@Controller('languages')\nexport class LanguageAdminController extends CoreLanguageAdminController {\n  constructor(protected readonly languageService: LanguageService) {\n    super(languageService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LanguageAdminModule.html":{"url":"modules/LanguageAdminModule.html","title":"module - LanguageAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    LanguageAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LanguageAdminModule\n\n\n\ncluster_LanguageAdminModule_imports\n\n\n\ncluster_LanguageAdminModule_providers\n\n\n\n\nTranslationAdminModule\n\nTranslationAdminModule\n\n\n\nLanguageAdminModule\n\nLanguageAdminModule\n\nLanguageAdminModule -->\n\nTranslationAdminModule->LanguageAdminModule\n\n\n\n\n\nLanguageService\n\nLanguageService\n\nLanguageAdminModule -->\n\nLanguageService->LanguageAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/shared/modules/language/language.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LanguageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LanguageAdminController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TranslationAdminModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Language } from '@shared/entities';\n\nimport {\n  TranslationTraderModule,\n  TranslationAdminModule,\n} from '../translation/translation.module';\n\nimport {\n  LanguageTraderController,\n  LanguageAdminController,\n} from './language.controller';\n\nimport { LanguageService } from './language.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Language]), TranslationTraderModule],\n\n  controllers: [LanguageTraderController],\n\n  providers: [LanguageService],\n\n  exports: [TypeOrmModule],\n})\nexport class LanguageTraderModule {}\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Language]), TranslationAdminModule],\n\n  controllers: [LanguageAdminController],\n\n  providers: [LanguageService],\n\n  exports: [TypeOrmModule],\n})\nexport class LanguageAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LanguageDTO.html":{"url":"classes/LanguageDTO.html","title":"class - LanguageDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LanguageDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/modules/language/dtos/language.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                default\n                            \n                            \n                                    Readonly\n                                public\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Code cannot be empty!'})@ApiProperty({type: String, example: 'en'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/modules/language/dtos/language.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'If the Language is Default and Public\t cannot be empty!'})@IsBoolean()@ApiProperty({type: Boolean, example: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/modules/language/dtos/language.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'If the Language is Public cannot be empty!'})@IsBoolean()@ApiProperty({type: Boolean, example: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/modules/language/dtos/language.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Title cannot be empty!'})@ApiProperty({type: String, example: 'English'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/modules/language/dtos/language.dto.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { IsNotEmpty, IsBoolean } from 'class-validator';\n\nexport class LanguageDTO {\n  @IsNotEmpty({ message: 'Code cannot be empty!' })\n  @ApiProperty({\n    type: String,\n    example: 'en',\n  })\n  readonly code!: string;\n\n  @IsNotEmpty({ message: 'Title cannot be empty!' })\n  @ApiProperty({\n    type: String,\n    example: 'English',\n  })\n  readonly title!: string;\n\n  @IsNotEmpty({ message: 'If the Language is Public cannot be empty!' })\n  @IsBoolean()\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n  })\n  readonly public!: boolean;\n\n  @IsNotEmpty({\n    message: 'If the Language is Default and Public\t cannot be empty!',\n  })\n  @IsBoolean()\n  @ApiProperty({\n    type: Boolean,\n    example: false,\n  })\n  readonly default!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/modules/language/language.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreLanguageService\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageRepo: Repository, translationService: CoreTranslationService, adminTranslations: Object, emailTranslations: Object, traderTranslations: Object)\n                    \n                \n                        \n                            \n                                Defined in apps/main/src/shared/modules/language/language.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        CoreTranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminTranslations\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailTranslations\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        traderTranslations\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport {\n  LanguageService as CoreLanguageService,\n  TranslationService as CoreTranslationService,\n} from '@core/shared/services';\n\nimport { Language } from '@shared/entities';\n\n@Injectable()\nexport class LanguageService extends CoreLanguageService {\n  constructor(\n    @InjectRepository(Language)\n    protected readonly languageRepo: Repository,\n\n    protected readonly translationService: CoreTranslationService,\n\n    protected readonly adminTranslations: Object,\n    protected readonly emailTranslations: Object,\n    protected readonly traderTranslations: Object,\n  ) {\n    super(\n      languageRepo,\n      translationService,\n      adminTranslations,\n      emailTranslations,\n      traderTranslations,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LanguageTraderController.html":{"url":"controllers/LanguageTraderController.html","title":"controller - LanguageTraderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LanguageTraderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/modules/language/language.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                languages\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport {\n  LanguageTraderController as CoreLanguageTraderController,\n  LanguageAdminController as CoreLanguageAdminController,\n} from '@core/shared/controllers';\n\nimport { LanguageService } from './language.service';\n\n@ApiTags('Languages')\n@Controller('languages')\nexport class LanguageTraderController extends CoreLanguageTraderController {\n  constructor(protected readonly languageService: LanguageService) {\n    super(languageService);\n  }\n}\n\n@ApiTags('Languages')\n@Controller('languages')\nexport class LanguageAdminController extends CoreLanguageAdminController {\n  constructor(protected readonly languageService: LanguageService) {\n    super(languageService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LanguageTraderModule.html":{"url":"modules/LanguageTraderModule.html","title":"module - LanguageTraderModule","body":"\n                   \n\n\n\n\n    Modules\n    LanguageTraderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LanguageTraderModule\n\n\n\ncluster_LanguageTraderModule_imports\n\n\n\ncluster_LanguageTraderModule_providers\n\n\n\n\nTranslationTraderModule\n\nTranslationTraderModule\n\n\n\nLanguageTraderModule\n\nLanguageTraderModule\n\nLanguageTraderModule -->\n\nTranslationTraderModule->LanguageTraderModule\n\n\n\n\n\nLanguageService\n\nLanguageService\n\nLanguageTraderModule -->\n\nLanguageService->LanguageTraderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/shared/modules/language/language.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LanguageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LanguageTraderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TranslationTraderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Language } from '@shared/entities';\n\nimport {\n  TranslationTraderModule,\n  TranslationAdminModule,\n} from '../translation/translation.module';\n\nimport {\n  LanguageTraderController,\n  LanguageAdminController,\n} from './language.controller';\n\nimport { LanguageService } from './language.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Language]), TranslationTraderModule],\n\n  controllers: [LanguageTraderController],\n\n  providers: [LanguageService],\n\n  exports: [TypeOrmModule],\n})\nexport class LanguageTraderModule {}\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Language]), TranslationAdminModule],\n\n  controllers: [LanguageAdminController],\n\n  providers: [LanguageService],\n\n  exports: [TypeOrmModule],\n})\nexport class LanguageAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/middlewares/logger.middleware.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreLoggerMiddleware\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\n\nimport { LoggerMiddleware as CoreLoggerMiddleware } from '@core/shared/middlewares';\n\n@Injectable()\nexport class LoggerMiddleware extends CoreLoggerMiddleware implements NestMiddleware {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenAccountController.html":{"url":"classes/OpenAccountController.html","title":"class - OpenAccountController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenAccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/trader/modules/open-account/open-account.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openDemoAccount\n                            \n                            \n                                    Async\n                                openTradingAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(openAccountService: OpenAccountService)\n                    \n                \n                        \n                            \n                                Defined in apps/core/src/trader/modules/open-account/open-account.controller.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        openAccountService\n                                                  \n                                                        \n                                                                        OpenAccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(OpenAccountController.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/open-account.controller.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            openDemoAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openDemoAccount(trader: TraderOpenDemoAccountDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/demo')@ApiOperation({summary: 'Open Demo Account'})\n                \n            \n\n            \n                \n                    Defined in apps/core/src/trader/modules/open-account/open-account.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trader\n                                    \n                                                TraderOpenDemoAccountDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            openTradingAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openTradingAccount(trader: TraderOpenTradingAccountDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/trading')@ApiOperation({summary: 'Open Trading Account'})\n                \n            \n\n            \n                \n                    Defined in apps/core/src/trader/modules/open-account/open-account.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trader\n                                    \n                                                TraderOpenTradingAccountDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger, Post, Body } from '@nestjs/common';\nimport { ApiOperation } from '@nestjs/swagger';\n\nimport { OpenAccountService } from '@core/trader/services';\nimport {\n  TraderOpenTradingAccountDTO,\n  TraderOpenDemoAccountDTO,\n} from '@core/trader/dtos';\n\nexport class OpenAccountController {\n  public readonly logger = new Logger(OpenAccountController.name);\n\n  constructor(protected readonly openAccountService: OpenAccountService) {}\n\n  @Post('/trading')\n  @ApiOperation({\n    summary: 'Open Trading Account',\n  })\n  async openTradingAccount(@Body() trader: TraderOpenTradingAccountDTO) {\n    return await this.openAccountService.openTradingAccount(trader);\n  }\n\n  @Post('/demo')\n  @ApiOperation({\n    summary: 'Open Demo Account',\n  })\n  async openDemoAccount(@Body() trader: TraderOpenDemoAccountDTO) {\n    return await this.openAccountService.openTradingAccount(trader);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenAccountModule.html":{"url":"modules/OpenAccountModule.html","title":"module - OpenAccountModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenAccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OpenAccountModule\n\n\n\ncluster_OpenAccountModule_providers\n\n\n\n\nIsExist\n\nIsExist\n\n\n\nOpenAccountModule\n\nOpenAccountModule\n\nOpenAccountModule -->\n\nIsExist->OpenAccountModule\n\n\n\n\n\nIsUnique\n\nIsUnique\n\nOpenAccountModule -->\n\nIsUnique->OpenAccountModule\n\n\n\n\n\nOpenAccountService\n\nOpenAccountService\n\nOpenAccountModule -->\n\nOpenAccountService->OpenAccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/trader/modules/open-account/open-account.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IsExist\n                        \n                        \n                            IsUnique\n                        \n                        \n                            OpenAccountService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TraderOpenAccountController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AccountType, Trader, Language } from '@shared/entities';\n\nimport { IsExist, IsUnique } from '@shared/helpers';\n\nimport { TraderOpenAccountController } from './open-account.controller';\nimport { OpenAccountService } from './open-account.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountType, Trader, Language])],\n\n  controllers: [TraderOpenAccountController],\n\n  providers: [OpenAccountService, IsUnique, IsExist],\n})\nexport class OpenAccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenAccountService.html":{"url":"injectables/OpenAccountService.html","title":"injectable - OpenAccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OpenAccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/trader/modules/open-account/open-account.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreOpenAccountService\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { OpenAccountService as CoreOpenAccountService } from '@core/trader/services';\n\n@Injectable()\nexport class OpenAccountService extends CoreOpenAccountService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/entities/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TaskCore\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from 'typeorm';\n\nimport { Task as TaskCore } from '@core/shared/entities';\n\nimport { Trader } from '@shared/entities';\n\n@Entity()\nexport class Task extends TaskCore {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task-1.html":{"url":"classes/Task-1.html","title":"class - Task-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/entities/task.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                trader\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime', comment: 'Created At'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/task.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text', {comment: 'Description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/task.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {comment: 'Task ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/task.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 128, comment: 'Title'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/task.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            trader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Trader\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne('Trader', 'id', {onDelete: 'CASCADE'})@JoinColumn({name: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/task.entity.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, Column, ManyToOne, JoinColumn } from 'typeorm';\n\nimport { Trader as CoreTrader } from '@core/shared/entities';\n\nexport class Task | undefined\n    ? T | undefined\n    : never\n> {\n  @PrimaryGeneratedColumn('uuid', { comment: 'Task ID' })\n  id!: string;\n\n  @Column({ length: 128, comment: 'Title' })\n  title!: string;\n\n  @Column('text', { comment: 'Description' })\n  description!: string;\n\n  @Column({ type: 'datetime', comment: 'Created At' })\n  createdAt!: Date;\n\n  @ManyToOne('Trader', 'id', { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'id' })\n  trader?: Trader;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/admin/modules/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { TaskController as CoreTaskController } from '@core/admin/controllers';\n\nimport { TaskService } from './task.service';\n\n@ApiTags('Tasks')\n@Controller('tasks')\nexport class TaskController extends CoreTaskController {\n  constructor(protected readonly taskService: TaskService) {\n    super(taskService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskDTO.html":{"url":"classes/TaskDTO.html","title":"class - TaskDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/admin/modules/task/dtos/task.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CoreTaskDTO\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TaskDTO as CoreTaskDTO } from '@core/admin/dtos';\n\nexport class TaskDTO extends CoreTaskDTO {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskDTO-1.html":{"url":"classes/TaskDTO-1.html","title":"class - TaskDTO-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/admin/modules/task/dtos/task.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Description cannot be empty!'})@ApiProperty({type: String, example: 'Description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/admin/modules/task/dtos/task.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Title cannot be empty!'})@ApiProperty({type: String, example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/admin/modules/task/dtos/task.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { IsNotEmpty } from 'class-validator';\n\nexport class TaskDTO {\n  @IsNotEmpty({ message: 'Title cannot be empty!' })\n  @ApiProperty({\n    type: String,\n    example: `Task #${Date.now()}`,\n  })\n  title!: string;\n\n  @IsNotEmpty({ message: 'Description cannot be empty!' })\n  @ApiProperty({\n    type: String,\n    example: 'Description',\n  })\n  description!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nTaskService\n\nTaskService\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/admin/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Task } from '@shared/entities';\n\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Task])],\n  controllers: [TaskController],\n  providers: [TaskService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/admin/modules/task/task.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreTaskService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/main/src/admin/modules/task/task.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask()\n                \n            \n\n\n            \n                \n                    Defined in apps/main/src/admin/modules/task/task.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TaskService as CoreTaskService } from '@core/admin/services';\n\nimport { Task } from '@shared/entities';\n\n@Injectable()\nexport class TaskService extends CoreTaskService {\n  constructor(\n    @InjectRepository(Task)\n    protected readonly taskRepo: Repository,\n  ) {\n    super(taskRepo);\n  }\n\n  async createTask() {\n    return await this.taskRepo.save({\n      title: 'Test #2',\n      description: 'Description!',\n      createdAt: new Date(Date.now()),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Trader.html":{"url":"classes/Trader.html","title":"class - Trader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Trader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/entities/trader.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TraderCore\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from 'typeorm';\n\nimport { Trader as TraderCore } from '@core/shared/entities';\n\nimport { Task, Language } from '@shared/entities';\n\n@Entity()\nexport class Trader extends TraderCore {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Trader-1.html":{"url":"classes/Trader-1.html","title":"class - Trader-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Trader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/entities/trader.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                language\n                            \n                            \n                                lastName\n                            \n                            \n                                leverage\n                            \n                            \n                                messengerAccount\n                            \n                            \n                                messengerType\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                province\n                            \n                            \n                                    Optional\n                                tasks\n                            \n                            \n                                timezone\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date', comment: 'Birth Date'})@IsDate()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({comment: 'City'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 2, comment: 'Country'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime', nullable: false, readonly: true, comment: 'Created At', default: undefined})@IsDate()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({comment: 'Email'})@Index({unique: true})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 64, nullable: false, comment: 'First Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {comment: 'Trader ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Language\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne('Language', 'code', {onDelete: 'CASCADE'})@JoinColumn({name: 'language'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 64, nullable: false, comment: 'Last Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leverage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, comment: 'Leverage'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messengerAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 64, nullable: true, comment: 'Messenger Account'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messengerType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessengerTypeE\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: MessengerTypeE, nullable: true, comment: 'Messenger Type'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({comment: 'Passowrd'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, comment: 'Mobile Phone'})@IsMobilePhone()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({comment: 'Province'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Task[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany('Task', 'id', {onDelete: 'CASCADE'})@JoinColumn({name: 'tasks'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timezone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({comment: 'Timezone'})@IsDate()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({comment: 'ZIP'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/trader.entity.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  PrimaryGeneratedColumn,\n  Column,\n  OneToOne,\n  OneToMany,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport { IsEmail, IsMobilePhone, IsDate } from 'class-validator';\n\nimport { MessengerTypeE } from '@core/shared/consts';\n\nimport {\n  Language as CoreLanguage,\n  Task as CoreTask,\n} from '@core/shared/entities';\n\nexport class Trader | undefined\n    ? T | undefined\n    : never,\n  Language = CoreLanguage\n> {\n  @PrimaryGeneratedColumn('uuid', { comment: 'Trader ID' })\n  id!: string;\n\n  @Column({ length: 64, nullable: false, comment: 'First Name' })\n  firstName!: string;\n\n  @Column({ length: 64, nullable: false, comment: 'Last Name' })\n  lastName!: string;\n\n  @Column({ type: 'date', comment: 'Birth Date' })\n  @IsDate()\n  birthDate!: Date;\n\n  @Column({ comment: 'Email' })\n  @Index({ unique: true })\n  @IsEmail()\n  email!: string;\n\n  @Column({ comment: 'Passowrd' })\n  password!: string;\n\n  @Column({ length: 100, comment: 'Mobile Phone' })\n  @IsMobilePhone()\n  phone!: string;\n\n  @Column({\n    type: 'enum',\n    enum: MessengerTypeE,\n    nullable: true,\n    comment: 'Messenger Type',\n  })\n  messengerType!: MessengerTypeE;\n\n  @Column({ length: 64, nullable: true, comment: 'Messenger Account' })\n  messengerAccount!: string;\n\n  @Column({ length: 2, comment: 'Country' })\n  country!: string;\n\n  @Column({ comment: 'Province' })\n  province!: string;\n\n  @Column({ comment: 'City' })\n  city!: string;\n\n  @Column({ comment: 'ZIP' })\n  zip!: number;\n\n  @Column({ length: 100, comment: 'Leverage' })\n  leverage!: string;\n\n  @OneToOne('Language', 'code', { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'language' })\n  language!: Language;\n\n  @Column({ comment: 'Timezone' })\n  @IsDate()\n  timezone!: string;\n\n  @OneToMany('Task', 'id', { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'tasks' })\n  tasks?: Task[];\n\n  @Column({\n    type: 'datetime',\n    nullable: false,\n    readonly: true,\n    comment: 'Created At',\n    default: () => 'CURRENT_TIMESTAMP',\n  })\n  @IsDate()\n  createdAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TraderController.html":{"url":"controllers/TraderController.html","title":"controller - TraderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TraderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/admin/modules/trader/trader.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                traders\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { TraderController as CoreTraderController } from '@core/admin/controllers';\n\nimport { TraderService } from './trader.service';\n\n@ApiTags('Traders')\n@Controller('traders')\nexport class TraderController extends CoreTraderController {\n  constructor(protected readonly traderService: TraderService) {\n    super(traderService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TraderMessengersDTO.html":{"url":"classes/TraderMessengersDTO.html","title":"class - TraderMessengersDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TraderMessengersDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messengerAccount\n                            \n                            \n                                messengerType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messengerAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Messenger Account cannot be empty!'})@IsString()@MaxLength(64)@ApiProperty({example: 'iamvasiliev143'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messengerType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessengerTypeE\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Messenger Type cannot be empty!'})@IsEnum(MessengerTypeE)@ApiProperty({enum: MessengerTypeE, example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport {\n  IsNotEmpty,\n  IsEnum,\n  IsEmail,\n  IsMobilePhone,\n  ValidateNested,\n  IsISO31661Alpha2,\n  IsString,\n  IsInt,\n  IsDateString,\n  MinLength,\n  Matches,\n  MaxLength,\n  Validate,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport moment from 'moment';\n\nimport { MessengerTypeE, PasswordRegex } from '@core/shared/consts';\nimport { IsTimezone, MakePassword } from '@core/shared/helpers';\n\nexport class TraderMessengersDTO {\n  @IsNotEmpty({ message: 'Messenger Type cannot be empty!' })\n  @IsEnum(MessengerTypeE)\n  @ApiProperty({\n    enum: MessengerTypeE,\n    example: MessengerTypeE.telegram,\n  })\n  messengerType!: MessengerTypeE;\n\n  @IsNotEmpty({ message: 'Messenger Account cannot be empty!' })\n  @IsString()\n  @MaxLength(64)\n  @ApiProperty({\n    example: 'iamvasiliev143',\n  })\n  messengerAccount!: string;\n}\n\nexport class TraderOpenBaseAccountDTO {\n  @IsNotEmpty({ message: 'Account Type cannot be empty!' })\n  @IsString()\n  @ApiProperty({\n    type: String,\n    example: 'c0bf0c71-2f86-4b8f-90c0-8c3ce31931e3',\n  })\n  accountType!: string;\n\n  @IsNotEmpty({ message: 'First Name cannot be empty!' })\n  @IsString()\n  @MaxLength(64)\n  @ApiProperty({\n    type: String,\n    example: 'Mikhail',\n  })\n  firstName!: string;\n\n  @IsNotEmpty({ message: 'Last Name cannot be empty!' })\n  @IsString()\n  @MaxLength(64)\n  @ApiProperty({\n    type: String,\n    example: 'Vasiliev',\n  })\n  lastName!: string;\n\n  @IsNotEmpty({ message: 'Birth Date cannot be empty!' })\n  @IsDateString()\n  @ApiProperty({\n    type: Date,\n    example: moment(new Date('1999-04-10')).format('YYYY-MM-DD'),\n  })\n  birthDate!: Date;\n\n  @IsNotEmpty({ message: 'Email cannot be empty!' })\n  @IsEmail(undefined, { message: 'Email is wrong!' })\n  @MaxLength(255)\n  @ApiProperty({\n    type: String,\n    example: 'iamvasliev143@gmail.com',\n  })\n  email!: string;\n\n  @IsNotEmpty({ message: 'Password cannot be empty!' })\n  @IsString()\n  @MinLength(8)\n  @MaxLength(32)\n  @Matches(PasswordRegex)\n  @ApiProperty({\n    type: String,\n    example: MakePassword(),\n  })\n  password!: string;\n\n  @IsNotEmpty({ message: 'Mobile Phone cannot be empty!' })\n  @IsMobilePhone(undefined, undefined, { message: 'Mobile Phone is wrong!' })\n  @ApiProperty({\n    type: String,\n    example: '+380992247184',\n  })\n  phone!: string;\n\n  @ValidateNested({ each: true })\n  @Type(() => TraderMessengersDTO)\n  @ApiProperty({\n    type: TraderMessengersDTO,\n    required: false,\n  })\n  messenger!: TraderMessengersDTO;\n\n  @IsNotEmpty({ message: 'Country cannot be empty!' })\n  @IsISO31661Alpha2()\n  @ApiProperty({\n    type: String,\n    example: 'UA',\n  })\n  country!: string;\n\n  @IsNotEmpty({ message: 'Province cannot be empty!' })\n  @IsString()\n  @MaxLength(255)\n  @ApiProperty({\n    type: String,\n    example: 'Sumskaya',\n  })\n  province!: string;\n\n  @IsNotEmpty({ message: 'Province cannot be empty!' })\n  @IsString()\n  @MaxLength(255)\n  @ApiProperty({\n    type: String,\n    example: 'Sumy',\n  })\n  city!: string;\n\n  @IsNotEmpty({ message: 'Province cannot be empty!' })\n  @IsInt()\n  @ApiProperty({\n    type: Number,\n    example: 40000,\n  })\n  zip!: number;\n\n  @IsNotEmpty({ message: 'Province cannot be empty!' })\n  @IsString()\n  @MaxLength(255)\n  @Validate(IsTimezone)\n  @ApiProperty({\n    type: String,\n    example: 'Europe/Kiev',\n  })\n  timezone!: string;\n\n  @IsNotEmpty({ message: 'Leverage cannot be empty!' })\n  @ApiProperty({\n    type: String,\n    example: '40000',\n  })\n  leverage!: string;\n\n  @IsNotEmpty({ message: 'Language cannot be empty!' })\n  @MaxLength(2)\n  @ApiProperty({\n    type: String,\n    example: 'en',\n  })\n  language!: string | any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TraderModule.html":{"url":"modules/TraderModule.html","title":"module - TraderModule","body":"\n                   \n\n\n\n\n    Modules\n    TraderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TraderModule\n\n\n\ncluster_TraderModule_providers\n\n\n\n\nTraderService\n\nTraderService\n\n\n\nTraderModule\n\nTraderModule\n\nTraderModule -->\n\nTraderService->TraderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/admin/modules/trader/trader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TraderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TraderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Trader } from '@shared/entities';\n\nimport { TraderController } from './trader.controller';\nimport { TraderService } from './trader.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Trader])],\n  controllers: [TraderController],\n  providers: [TraderService],\n})\nexport class TraderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TraderOpenAccountController.html":{"url":"controllers/TraderOpenAccountController.html","title":"controller - TraderOpenAccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TraderOpenAccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/trader/modules/open-account/open-account.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                open-account\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openDemoAccount\n                            \n                            \n                                    Async\n                                openTradingAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            openDemoAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openDemoAccount(trader: TraderOpenDemoAccountDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/demo')@ApiOperation({summary: 'Open Demo Account'})\n                \n            \n\n            \n                \n                    Defined in apps/main/src/trader/modules/open-account/open-account.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trader\n                                    \n                                                TraderOpenDemoAccountDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            openTradingAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openTradingAccount(trader: TraderOpenTradingAccountDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/trading')@ApiOperation({summary: 'Open Trading Account'})\n                \n            \n\n            \n                \n                    Defined in apps/main/src/trader/modules/open-account/open-account.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trader\n                                    \n                                                TraderOpenTradingAccountDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiCreatedResponse } from '@nestjs/swagger';\n\nimport { OpenAccountController as CoreOpenAccountController } from '@core/trader/controllers';\nimport { OpenAccountService } from './open-account.service';\n\nimport {\n  TraderOpenTradingAccountDTO,\n  TraderOpenDemoAccountDTO,\n} from '@trader/dtos';\n\n@ApiTags('Open Account')\n@Controller('open-account')\nexport class TraderOpenAccountController extends CoreOpenAccountController {\n  constructor(protected readonly openAccountService: OpenAccountService) {\n    super(openAccountService);\n  }\n\n  @Post('/trading')\n  @ApiOperation({\n    summary: 'Open Trading Account',\n  })\n  async openTradingAccount(@Body() trader: TraderOpenTradingAccountDTO) {\n    return await this.openAccountService.openTradingAccount(trader);\n  }\n\n  @Post('/demo')\n  @ApiOperation({\n    summary: 'Open Demo Account',\n  })\n  async openDemoAccount(@Body() trader: TraderOpenDemoAccountDTO) {\n    return await this.openAccountService.openTradingAccount(trader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TraderOpenBaseAccountDTO.html":{"url":"classes/TraderOpenBaseAccountDTO.html","title":"class - TraderOpenBaseAccountDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TraderOpenBaseAccountDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                birthDate\n                            \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                language\n                            \n                            \n                                lastName\n                            \n                            \n                                leverage\n                            \n                            \n                                messenger\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                province\n                            \n                            \n                                timezone\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Account Type cannot be empty!'})@IsString()@ApiProperty({type: String, example: 'c0bf0c71-2f86-4b8f-90c0-8c3ce31931e3'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Birth Date cannot be empty!'})@IsDateString()@ApiProperty({type: Date, example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsString()@MaxLength(255)@ApiProperty({type: String, example: 'Sumy'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:137\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Country cannot be empty!'})@IsISO31661Alpha2()@ApiProperty({type: String, example: 'UA'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Email cannot be empty!'})@IsEmail(undefined, {message: 'Email is wrong!'})@MaxLength(255)@ApiProperty({type: String, example: 'iamvasliev143@gmail.com'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'First Name cannot be empty!'})@IsString()@MaxLength(64)@ApiProperty({type: String, example: 'Mikhail'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Language cannot be empty!'})@MaxLength(2)@ApiProperty({type: String, example: 'en'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:170\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Last Name cannot be empty!'})@IsString()@MaxLength(64)@ApiProperty({type: String, example: 'Vasiliev'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leverage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Leverage cannot be empty!'})@ApiProperty({type: String, example: '40000'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:162\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messenger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TraderMessengersDTO\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ValidateNested({each: true})@Type(undefined)@ApiProperty({type: TraderMessengersDTO, required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()@MinLength(8)@MaxLength(32)@Matches(PasswordRegex)@ApiProperty({type: String, example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Mobile Phone cannot be empty!'})@IsMobilePhone(undefined, undefined, {message: 'Mobile Phone is wrong!'})@ApiProperty({type: String, example: '+380992247184'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsString()@MaxLength(255)@ApiProperty({type: String, example: 'Sumskaya'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timezone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsString()@MaxLength(255)@Validate(IsTimezone)@ApiProperty({type: String, example: 'Europe/Kiev'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:155\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsInt()@ApiProperty({type: Number, example: 40000})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts:145\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport {\n  IsNotEmpty,\n  IsEnum,\n  IsEmail,\n  IsMobilePhone,\n  ValidateNested,\n  IsISO31661Alpha2,\n  IsString,\n  IsInt,\n  IsDateString,\n  MinLength,\n  Matches,\n  MaxLength,\n  Validate,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport moment from 'moment';\n\nimport { MessengerTypeE, PasswordRegex } from '@core/shared/consts';\nimport { IsTimezone, MakePassword } from '@core/shared/helpers';\n\nexport class TraderMessengersDTO {\n  @IsNotEmpty({ message: 'Messenger Type cannot be empty!' })\n  @IsEnum(MessengerTypeE)\n  @ApiProperty({\n    enum: MessengerTypeE,\n    example: MessengerTypeE.telegram,\n  })\n  messengerType!: MessengerTypeE;\n\n  @IsNotEmpty({ message: 'Messenger Account cannot be empty!' })\n  @IsString()\n  @MaxLength(64)\n  @ApiProperty({\n    example: 'iamvasiliev143',\n  })\n  messengerAccount!: string;\n}\n\nexport class TraderOpenBaseAccountDTO {\n  @IsNotEmpty({ message: 'Account Type cannot be empty!' })\n  @IsString()\n  @ApiProperty({\n    type: String,\n    example: 'c0bf0c71-2f86-4b8f-90c0-8c3ce31931e3',\n  })\n  accountType!: string;\n\n  @IsNotEmpty({ message: 'First Name cannot be empty!' })\n  @IsString()\n  @MaxLength(64)\n  @ApiProperty({\n    type: String,\n    example: 'Mikhail',\n  })\n  firstName!: string;\n\n  @IsNotEmpty({ message: 'Last Name cannot be empty!' })\n  @IsString()\n  @MaxLength(64)\n  @ApiProperty({\n    type: String,\n    example: 'Vasiliev',\n  })\n  lastName!: string;\n\n  @IsNotEmpty({ message: 'Birth Date cannot be empty!' })\n  @IsDateString()\n  @ApiProperty({\n    type: Date,\n    example: moment(new Date('1999-04-10')).format('YYYY-MM-DD'),\n  })\n  birthDate!: Date;\n\n  @IsNotEmpty({ message: 'Email cannot be empty!' })\n  @IsEmail(undefined, { message: 'Email is wrong!' })\n  @MaxLength(255)\n  @ApiProperty({\n    type: String,\n    example: 'iamvasliev143@gmail.com',\n  })\n  email!: string;\n\n  @IsNotEmpty({ message: 'Password cannot be empty!' })\n  @IsString()\n  @MinLength(8)\n  @MaxLength(32)\n  @Matches(PasswordRegex)\n  @ApiProperty({\n    type: String,\n    example: MakePassword(),\n  })\n  password!: string;\n\n  @IsNotEmpty({ message: 'Mobile Phone cannot be empty!' })\n  @IsMobilePhone(undefined, undefined, { message: 'Mobile Phone is wrong!' })\n  @ApiProperty({\n    type: String,\n    example: '+380992247184',\n  })\n  phone!: string;\n\n  @ValidateNested({ each: true })\n  @Type(() => TraderMessengersDTO)\n  @ApiProperty({\n    type: TraderMessengersDTO,\n    required: false,\n  })\n  messenger!: TraderMessengersDTO;\n\n  @IsNotEmpty({ message: 'Country cannot be empty!' })\n  @IsISO31661Alpha2()\n  @ApiProperty({\n    type: String,\n    example: 'UA',\n  })\n  country!: string;\n\n  @IsNotEmpty({ message: 'Province cannot be empty!' })\n  @IsString()\n  @MaxLength(255)\n  @ApiProperty({\n    type: String,\n    example: 'Sumskaya',\n  })\n  province!: string;\n\n  @IsNotEmpty({ message: 'Province cannot be empty!' })\n  @IsString()\n  @MaxLength(255)\n  @ApiProperty({\n    type: String,\n    example: 'Sumy',\n  })\n  city!: string;\n\n  @IsNotEmpty({ message: 'Province cannot be empty!' })\n  @IsInt()\n  @ApiProperty({\n    type: Number,\n    example: 40000,\n  })\n  zip!: number;\n\n  @IsNotEmpty({ message: 'Province cannot be empty!' })\n  @IsString()\n  @MaxLength(255)\n  @Validate(IsTimezone)\n  @ApiProperty({\n    type: String,\n    example: 'Europe/Kiev',\n  })\n  timezone!: string;\n\n  @IsNotEmpty({ message: 'Leverage cannot be empty!' })\n  @ApiProperty({\n    type: String,\n    example: '40000',\n  })\n  leverage!: string;\n\n  @IsNotEmpty({ message: 'Language cannot be empty!' })\n  @MaxLength(2)\n  @ApiProperty({\n    type: String,\n    example: 'en',\n  })\n  language!: string | any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TraderOpenDemoAccountDTO.html":{"url":"classes/TraderOpenDemoAccountDTO.html","title":"class - TraderOpenDemoAccountDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TraderOpenDemoAccountDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/trader/modules/open-account/dtos/open-demo-account.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CoreTraderOpenDemoAccountDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                email\n                            \n                            \n                                language\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Account Type cannot be empty!'})@IsString()@Validate(IsExist, undefined)@ApiProperty({type: String, example: 'c0bf0c71-2f86-4b8f-90c0-8c3ce31931e3'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/main/src/trader/modules/open-account/dtos/open-demo-account.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Email cannot be empty!'})@IsEmail(undefined, {message: 'Email is wrong!'})@MaxLength(255)@Validate(IsUnique, undefined)@ApiProperty({type: String, example: 'iamvasliev143@gmail.com'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/main/src/trader/modules/open-account/dtos/open-demo-account.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Language cannot be empty!'})@MaxLength(2)@Validate(IsExist, undefined)@ApiProperty({type: String, example: 'en'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/main/src/trader/modules/open-account/dtos/open-demo-account.dto.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  Validate,\n} from 'class-validator';\n\nimport { AccountType, Trader, Language } from '@shared/entities';\n\nimport { IsExist, IsUnique } from '@shared/helpers';\n\nimport { TraderOpenDemoAccountDTO as CoreTraderOpenDemoAccountDTO } from '@core/trader/dtos';\n\nexport class TraderOpenDemoAccountDTO extends CoreTraderOpenDemoAccountDTO {\n  @IsNotEmpty({ message: 'Account Type cannot be empty!' })\n  @IsString()\n  @Validate(IsExist, [AccountType])\n  @ApiProperty({\n    type: String,\n    example: 'c0bf0c71-2f86-4b8f-90c0-8c3ce31931e3',\n  })\n  accountType!: string;\n\n  @IsNotEmpty({ message: 'Email cannot be empty!' })\n  @IsEmail(undefined, { message: 'Email is wrong!' })\n  @MaxLength(255)\n  @Validate(IsUnique, [Trader])\n  @ApiProperty({\n    type: String,\n    example: 'iamvasliev143@gmail.com',\n  })\n  email!: string;\n\n  @IsNotEmpty({ message: 'Language cannot be empty!' })\n  @MaxLength(2)\n  @Validate(IsExist, [Language])\n  @ApiProperty({\n    type: String,\n    example: 'en',\n  })\n  language!: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TraderOpenDemoAccountDTO-1.html":{"url":"classes/TraderOpenDemoAccountDTO-1.html","title":"class - TraderOpenDemoAccountDTO-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TraderOpenDemoAccountDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/trader/modules/open-account/dtos/open-demo-account.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TraderOpenBaseAccountDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                birthDate\n                            \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                language\n                            \n                            \n                                lastName\n                            \n                            \n                                leverage\n                            \n                            \n                                messenger\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                province\n                            \n                            \n                                timezone\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Account Type cannot be empty!'})@IsString()@ApiProperty({type: String, example: 'c0bf0c71-2f86-4b8f-90c0-8c3ce31931e3'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:49\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Birth Date cannot be empty!'})@IsDateString()@ApiProperty({type: Date, example: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:75\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsString()@MaxLength(255)@ApiProperty({type: String, example: 'Sumy'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:137\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Country cannot be empty!'})@IsISO31661Alpha2()@ApiProperty({type: String, example: 'UA'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:119\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Email cannot be empty!'})@IsEmail(undefined, {message: 'Email is wrong!'})@MaxLength(255)@ApiProperty({type: String, example: 'iamvasliev143@gmail.com'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:84\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'First Name cannot be empty!'})@IsString()@MaxLength(64)@ApiProperty({type: String, example: 'Mikhail'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Language cannot be empty!'})@MaxLength(2)@ApiProperty({type: String, example: 'en'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:170\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Last Name cannot be empty!'})@IsString()@MaxLength(64)@ApiProperty({type: String, example: 'Vasiliev'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:67\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leverage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Leverage cannot be empty!'})@ApiProperty({type: String, example: '40000'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:162\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messenger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TraderMessengersDTO\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ValidateNested({each: true})@Type(undefined)@ApiProperty({type: TraderMessengersDTO, required: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:111\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()@MinLength(8)@MaxLength(32)@Matches(PasswordRegex)@ApiProperty({type: String, example: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:95\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Mobile Phone cannot be empty!'})@IsMobilePhone(undefined, undefined, {message: 'Mobile Phone is wrong!'})@ApiProperty({type: String, example: '+380992247184'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:103\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsString()@MaxLength(255)@ApiProperty({type: String, example: 'Sumskaya'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:128\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timezone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsString()@MaxLength(255)@Validate(IsTimezone)@ApiProperty({type: String, example: 'Europe/Kiev'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:155\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsInt()@ApiProperty({type: Number, example: 40000})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:145\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TraderOpenBaseAccountDTO } from './open-base-account.dto';\n\nexport class TraderOpenDemoAccountDTO extends TraderOpenBaseAccountDTO {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TraderOpenTradingAccountDTO.html":{"url":"classes/TraderOpenTradingAccountDTO.html","title":"class - TraderOpenTradingAccountDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TraderOpenTradingAccountDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/trader/modules/open-account/dtos/open-trading-account.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CoreTraderOpenTradingAccountDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                email\n                            \n                            \n                                language\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Account Type cannot be empty!'})@IsString()@Validate(IsExist, undefined)@ApiProperty({type: String, example: 'c0bf0c71-2f86-4b8f-90c0-8c3ce31931e3'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/main/src/trader/modules/open-account/dtos/open-trading-account.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Email cannot be empty!'})@IsEmail(undefined, {message: 'Email is wrong!'})@MaxLength(255)@Validate(IsUnique, undefined)@ApiProperty({type: String, example: 'iamvasliev143@gmail.com'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/main/src/trader/modules/open-account/dtos/open-trading-account.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Language cannot be empty!'})@MaxLength(2)@Validate(IsExist, undefined)@ApiProperty({type: String, example: 'en'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/main/src/trader/modules/open-account/dtos/open-trading-account.dto.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  Validate,\n} from 'class-validator';\n\nimport { AccountType, Trader, Language } from '@shared/entities';\n\nimport { IsExist, IsUnique } from '@shared/helpers';\n\nimport { TraderOpenTradingAccountDTO as CoreTraderOpenTradingAccountDTO } from '@core/trader/dtos';\n\nexport class TraderOpenTradingAccountDTO extends CoreTraderOpenTradingAccountDTO {\n  @IsNotEmpty({ message: 'Account Type cannot be empty!' })\n  @IsString()\n  @Validate(IsExist, [AccountType])\n  @ApiProperty({\n    type: String,\n    example: 'c0bf0c71-2f86-4b8f-90c0-8c3ce31931e3',\n  })\n  accountType!: string;\n\n  @IsNotEmpty({ message: 'Email cannot be empty!' })\n  @IsEmail(undefined, { message: 'Email is wrong!' })\n  @MaxLength(255)\n  @Validate(IsUnique, [Trader])\n  @ApiProperty({\n    type: String,\n    example: 'iamvasliev143@gmail.com',\n  })\n  email!: string;\n\n  @IsNotEmpty({ message: 'Language cannot be empty!' })\n  @MaxLength(2)\n  @Validate(IsExist, [Language])\n  @ApiProperty({\n    type: String,\n    example: 'en',\n  })\n  language!: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TraderOpenTradingAccountDTO-1.html":{"url":"classes/TraderOpenTradingAccountDTO-1.html","title":"class - TraderOpenTradingAccountDTO-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TraderOpenTradingAccountDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/trader/modules/open-account/dtos/open-trading-account.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TraderOpenBaseAccountDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                birthDate\n                            \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                language\n                            \n                            \n                                lastName\n                            \n                            \n                                leverage\n                            \n                            \n                                messenger\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                province\n                            \n                            \n                                timezone\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Account Type cannot be empty!'})@IsString()@ApiProperty({type: String, example: 'c0bf0c71-2f86-4b8f-90c0-8c3ce31931e3'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:49\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Birth Date cannot be empty!'})@IsDateString()@ApiProperty({type: Date, example: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:75\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsString()@MaxLength(255)@ApiProperty({type: String, example: 'Sumy'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:137\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Country cannot be empty!'})@IsISO31661Alpha2()@ApiProperty({type: String, example: 'UA'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:119\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Email cannot be empty!'})@IsEmail(undefined, {message: 'Email is wrong!'})@MaxLength(255)@ApiProperty({type: String, example: 'iamvasliev143@gmail.com'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:84\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'First Name cannot be empty!'})@IsString()@MaxLength(64)@ApiProperty({type: String, example: 'Mikhail'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Language cannot be empty!'})@MaxLength(2)@ApiProperty({type: String, example: 'en'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:170\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Last Name cannot be empty!'})@IsString()@MaxLength(64)@ApiProperty({type: String, example: 'Vasiliev'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:67\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leverage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Leverage cannot be empty!'})@ApiProperty({type: String, example: '40000'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:162\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messenger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TraderMessengersDTO\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ValidateNested({each: true})@Type(undefined)@ApiProperty({type: TraderMessengersDTO, required: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:111\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()@MinLength(8)@MaxLength(32)@Matches(PasswordRegex)@ApiProperty({type: String, example: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:95\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Mobile Phone cannot be empty!'})@IsMobilePhone(undefined, undefined, {message: 'Mobile Phone is wrong!'})@ApiProperty({type: String, example: '+380992247184'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:103\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsString()@MaxLength(255)@ApiProperty({type: String, example: 'Sumskaya'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:128\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timezone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsString()@MaxLength(255)@Validate(IsTimezone)@ApiProperty({type: String, example: 'Europe/Kiev'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:155\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Province cannot be empty!'})@IsInt()@ApiProperty({type: Number, example: 40000})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TraderOpenBaseAccountDTO\n\n                                \n                            \n                        \n                            \n                                    Defined in         TraderOpenBaseAccountDTO:145\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TraderOpenBaseAccountDTO } from './open-base-account.dto';\n\nexport class TraderOpenTradingAccountDTO extends TraderOpenBaseAccountDTO {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TraderService.html":{"url":"injectables/TraderService.html","title":"injectable - TraderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TraderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/admin/modules/trader/trader.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreTraderService\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(traderRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/main/src/admin/modules/trader/trader.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        traderRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TraderService as CoreTraderService } from '@core/admin/services';\n\nimport { Trader } from '@shared/entities';\n\n@Injectable()\nexport class TraderService extends CoreTraderService {\n  constructor(\n    @InjectRepository(Trader)\n    protected readonly traderRepo: Repository,\n  ) {\n    super(traderRepo);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Translation.html":{"url":"classes/Translation.html","title":"class - Translation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Translation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/entities/translation.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                key\n                            \n                            \n                                translation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({comment: 'Language Code'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/translation.entity.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({comment: 'Key'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/translation.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text', {comment: 'Translation'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/entities/translation.entity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryColumn, Column } from 'typeorm';\n\nexport class Translation {\n  @PrimaryColumn({ comment: 'Language Code' })\n  code!: string;\n\n  @PrimaryColumn({ comment: 'Key' })\n  key!: string;\n\n  @Column('text', { comment: 'Translation' })\n  translation!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationAdmin.html":{"url":"classes/TranslationAdmin.html","title":"class - TranslationAdmin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationAdmin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/entities/translation-admin.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CoreTranslationAdmin\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from 'typeorm';\n\nimport { TranslationAdmin as CoreTranslationAdmin } from '@core/shared/entities';\n\n@Entity()\nexport class TranslationAdmin extends CoreTranslationAdmin {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationAdmin-1.html":{"url":"classes/TranslationAdmin-1.html","title":"class - TranslationAdmin-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationAdmin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/entities/translation-admin.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Translation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                key\n                            \n                            \n                                translation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({comment: 'Language Code'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Translation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Translation:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({comment: 'Key'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Translation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Translation:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text', {comment: 'Translation'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Translation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Translation:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Translation } from '@core/shared/entities';\n\nexport class TranslationAdmin extends Translation {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TranslationAdminController.html":{"url":"controllers/TranslationAdminController.html","title":"controller - TranslationAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TranslationAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/modules/translation/translation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                translations\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport {\n  TranslationAdminController as CoreTranslationAdminController,\n  TranslationTraderController as CoreTranslationTraderController,\n} from '@core/shared/controllers';\n\nimport { TranslationService } from './translation.service';\n\n@ApiTags('Translations')\n@Controller('translations')\nexport class TranslationTraderController extends CoreTranslationTraderController {\n  constructor(protected readonly translationService: TranslationService) {\n    super(translationService);\n  }\n}\n\n@ApiTags('Translations')\n@Controller('translations')\nexport class TranslationAdminController extends CoreTranslationAdminController {\n  constructor(protected readonly translationService: TranslationService) {\n    super(translationService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslationAdminModule.html":{"url":"modules/TranslationAdminModule.html","title":"module - TranslationAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslationAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TranslationAdminModule\n\n\n\ncluster_TranslationAdminModule_exports\n\n\n\ncluster_TranslationAdminModule_providers\n\n\n\n\nTranslationService \n\nTranslationService \n\n\n\n{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n} \n\n\n\n{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n} \n\n\n\n{\n    provide: , useValue: TRADER_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: TRADER_TRANSLATIONS,\n} \n\n\n\nTranslationAdminModule\n\nTranslationAdminModule\n\nTranslationService  -->\n\nTranslationAdminModule->TranslationService \n\n\n\n{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n}  -->\n\nTranslationAdminModule->{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n} \n\n\n\n{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n}  -->\n\nTranslationAdminModule->{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n} \n\n\n\n{\n    provide: , useValue: TRADER_TRANSLATIONS,\n}  -->\n\nTranslationAdminModule->{\n    provide: , useValue: TRADER_TRANSLATIONS,\n} \n\n\n\n\n\nTranslationService\n\nTranslationService\n\nTranslationAdminModule -->\n\nTranslationService->TranslationAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/shared/modules/translation/translation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TranslationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TranslationAdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TranslationService\n                        \n                        \n                            {\n    provide: , useValue: ADMIN_TRANSLATIONS,\n}\n                        \n                        \n                            {\n    provide: , useValue: EMAIL_TRANSLATIONS,\n}\n                        \n                        \n                            {\n    provide: , useValue: TRADER_TRANSLATIONS,\n}\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport {\n  TranslationAdmin,\n  TranslationEmail,\n  TranslationTrader,\n} from '@shared/entities';\n\nimport {\n  TranslationTraderController,\n  TranslationAdminController,\n} from './translation.controller';\n\nimport { TranslationService } from './translation.service';\n\nimport {\n  ADMIN_TRANSLATIONS,\n  EMAIL_TRANSLATIONS,\n  TRADER_TRANSLATIONS,\n} from '@shared/configs';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      TranslationAdmin,\n      TranslationEmail,\n      TranslationTrader,\n    ]),\n  ],\n\n  controllers: [TranslationTraderController],\n\n  providers: [\n    TranslationService,\n    {\n      provide: 'ADMIN_TRANSLATIONS',\n      useValue: ADMIN_TRANSLATIONS,\n    },\n    {\n      provide: 'EMAIL_TRANSLATIONS',\n      useValue: EMAIL_TRANSLATIONS,\n    },\n    {\n      provide: 'TRADER_TRANSLATIONS',\n      useValue: TRADER_TRANSLATIONS,\n    },\n  ],\n\n  exports: [\n    TypeOrmModule,\n    TranslationService,\n    {\n      provide: 'ADMIN_TRANSLATIONS',\n      useValue: ADMIN_TRANSLATIONS,\n    },\n    {\n      provide: 'EMAIL_TRANSLATIONS',\n      useValue: EMAIL_TRANSLATIONS,\n    },\n    {\n      provide: 'TRADER_TRANSLATIONS',\n      useValue: TRADER_TRANSLATIONS,\n    },\n  ],\n})\nexport class TranslationTraderModule {}\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      TranslationAdmin,\n      TranslationEmail,\n      TranslationTrader,\n    ]),\n  ],\n\n  controllers: [TranslationAdminController],\n\n  providers: [\n    TranslationService,\n    {\n      provide: 'ADMIN_TRANSLATIONS',\n      useValue: ADMIN_TRANSLATIONS,\n    },\n    {\n      provide: 'EMAIL_TRANSLATIONS',\n      useValue: EMAIL_TRANSLATIONS,\n    },\n    {\n      provide: 'TRADER_TRANSLATIONS',\n      useValue: TRADER_TRANSLATIONS,\n    },\n  ],\n\n  exports: [\n    TypeOrmModule,\n    TranslationService,\n    {\n      provide: 'ADMIN_TRANSLATIONS',\n      useValue: ADMIN_TRANSLATIONS,\n    },\n    {\n      provide: 'EMAIL_TRANSLATIONS',\n      useValue: EMAIL_TRANSLATIONS,\n    },\n    {\n      provide: 'TRADER_TRANSLATIONS',\n      useValue: TRADER_TRANSLATIONS,\n    },\n  ],\n})\nexport class TranslationAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationDTO.html":{"url":"classes/TranslationDTO.html","title":"class - TranslationDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/modules/translation/dtos/translation.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                code\n                            \n                            \n                                    Readonly\n                                key\n                            \n                            \n                                    Readonly\n                                translation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/modules/translation/dtos/translation.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Key of Translation cannot be empty!'})@ApiProperty({type: String, example: 'lead_types.client'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/modules/translation/dtos/translation.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            translation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Translation cannot be empty!'})@ApiProperty({type: String, example: 'Client'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/core/src/shared/modules/translation/dtos/translation.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { IsNotEmpty } from 'class-validator';\n\nexport class TranslationDTO {\n  code?: string;\n\n  @IsNotEmpty({ message: 'Key of Translation cannot be empty!' })\n  @ApiProperty({\n    type: String,\n    example: 'lead_types.client',\n  })\n  readonly key!: string;\n\n  @IsNotEmpty({ message: 'Translation cannot be empty!' })\n  @ApiProperty({\n    type: String,\n    example: 'Client',\n  })\n  readonly translation!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationEmail.html":{"url":"classes/TranslationEmail.html","title":"class - TranslationEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/entities/translation-email.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TranslationEmailCore\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from 'typeorm';\n\nimport { TranslationEmail as TranslationEmailCore } from '@core/shared/entities';\n\n@Entity()\nexport class TranslationEmail extends TranslationEmailCore {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationEmail-1.html":{"url":"classes/TranslationEmail-1.html","title":"class - TranslationEmail-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/entities/translation-email.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Translation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                key\n                            \n                            \n                                translation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({comment: 'Language Code'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Translation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Translation:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({comment: 'Key'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Translation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Translation:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text', {comment: 'Translation'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Translation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Translation:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Translation } from '@core/shared/entities';\n\nexport class TranslationEmail extends Translation {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/modules/translation/translation.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreTranslationService\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tranalationAdminRepo: Repository, tranalationEmailRepo: Repository, tranalationTraderRepo: Repository, adminTranslations: Object, emailTranslations: Object, traderTranslations: Object)\n                    \n                \n                        \n                            \n                                Defined in apps/main/src/shared/modules/translation/translation.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tranalationAdminRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tranalationEmailRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tranalationTraderRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminTranslations\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailTranslations\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        traderTranslations\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TranslationService as CoreTranslationService } from '@core/shared/services';\n\nimport {\n  TranslationAdmin,\n  TranslationEmail,\n  TranslationTrader,\n} from '@shared/entities';\n\n@Injectable()\nexport class TranslationService extends CoreTranslationService {\n  constructor(\n    @InjectRepository(TranslationAdmin)\n    protected readonly tranalationAdminRepo: Repository,\n\n    @InjectRepository(TranslationEmail)\n    protected readonly tranalationEmailRepo: Repository,\n\n    @InjectRepository(TranslationTrader)\n    protected readonly tranalationTraderRepo: Repository,\n\n    protected readonly adminTranslations: Object,\n    protected readonly emailTranslations: Object,\n    protected readonly traderTranslations: Object,\n  ) {\n    super(\n      tranalationAdminRepo,\n      tranalationEmailRepo,\n      tranalationTraderRepo,\n      adminTranslations,\n      emailTranslations,\n      traderTranslations,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationTrader.html":{"url":"classes/TranslationTrader.html","title":"class - TranslationTrader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationTrader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/entities/translation-trader.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TranslationTraderCore\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from 'typeorm';\n\nimport { TranslationTrader as TranslationTraderCore } from '@core/shared/entities';\n\n@Entity()\nexport class TranslationTrader extends TranslationTraderCore {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationTrader-1.html":{"url":"classes/TranslationTrader-1.html","title":"class - TranslationTrader-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationTrader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/entities/translation-trader.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Translation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                key\n                            \n                            \n                                translation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({comment: 'Language Code'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Translation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Translation:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({comment: 'Key'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Translation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Translation:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text', {comment: 'Translation'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Translation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Translation:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Translation } from '@core/shared/entities';\n\nexport class TranslationTrader extends Translation {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TranslationTraderController.html":{"url":"controllers/TranslationTraderController.html","title":"controller - TranslationTraderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TranslationTraderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/main/src/shared/modules/translation/translation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                translations\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport {\n  TranslationAdminController as CoreTranslationAdminController,\n  TranslationTraderController as CoreTranslationTraderController,\n} from '@core/shared/controllers';\n\nimport { TranslationService } from './translation.service';\n\n@ApiTags('Translations')\n@Controller('translations')\nexport class TranslationTraderController extends CoreTranslationTraderController {\n  constructor(protected readonly translationService: TranslationService) {\n    super(translationService);\n  }\n}\n\n@ApiTags('Translations')\n@Controller('translations')\nexport class TranslationAdminController extends CoreTranslationAdminController {\n  constructor(protected readonly translationService: TranslationService) {\n    super(translationService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslationTraderModule.html":{"url":"modules/TranslationTraderModule.html","title":"module - TranslationTraderModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslationTraderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TranslationTraderModule\n\n\n\ncluster_TranslationTraderModule_providers\n\n\n\ncluster_TranslationTraderModule_exports\n\n\n\n\nTranslationService \n\nTranslationService \n\n\n\n{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n} \n\n\n\n{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n} \n\n\n\n{\n    provide: , useValue: TRADER_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: TRADER_TRANSLATIONS,\n} \n\n\n\nTranslationTraderModule\n\nTranslationTraderModule\n\nTranslationService  -->\n\nTranslationTraderModule->TranslationService \n\n\n\n{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n}  -->\n\nTranslationTraderModule->{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n} \n\n\n\n{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n}  -->\n\nTranslationTraderModule->{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n} \n\n\n\n{\n    provide: , useValue: TRADER_TRANSLATIONS,\n}  -->\n\nTranslationTraderModule->{\n    provide: , useValue: TRADER_TRANSLATIONS,\n} \n\n\n\n\n\nTranslationService\n\nTranslationService\n\nTranslationTraderModule -->\n\nTranslationService->TranslationTraderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/main/src/shared/modules/translation/translation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TranslationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TranslationTraderController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TranslationService\n                        \n                        \n                            {\n    provide: , useValue: ADMIN_TRANSLATIONS,\n}\n                        \n                        \n                            {\n    provide: , useValue: EMAIL_TRANSLATIONS,\n}\n                        \n                        \n                            {\n    provide: , useValue: TRADER_TRANSLATIONS,\n}\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport {\n  TranslationAdmin,\n  TranslationEmail,\n  TranslationTrader,\n} from '@shared/entities';\n\nimport {\n  TranslationTraderController,\n  TranslationAdminController,\n} from './translation.controller';\n\nimport { TranslationService } from './translation.service';\n\nimport {\n  ADMIN_TRANSLATIONS,\n  EMAIL_TRANSLATIONS,\n  TRADER_TRANSLATIONS,\n} from '@shared/configs';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      TranslationAdmin,\n      TranslationEmail,\n      TranslationTrader,\n    ]),\n  ],\n\n  controllers: [TranslationTraderController],\n\n  providers: [\n    TranslationService,\n    {\n      provide: 'ADMIN_TRANSLATIONS',\n      useValue: ADMIN_TRANSLATIONS,\n    },\n    {\n      provide: 'EMAIL_TRANSLATIONS',\n      useValue: EMAIL_TRANSLATIONS,\n    },\n    {\n      provide: 'TRADER_TRANSLATIONS',\n      useValue: TRADER_TRANSLATIONS,\n    },\n  ],\n\n  exports: [\n    TypeOrmModule,\n    TranslationService,\n    {\n      provide: 'ADMIN_TRANSLATIONS',\n      useValue: ADMIN_TRANSLATIONS,\n    },\n    {\n      provide: 'EMAIL_TRANSLATIONS',\n      useValue: EMAIL_TRANSLATIONS,\n    },\n    {\n      provide: 'TRADER_TRANSLATIONS',\n      useValue: TRADER_TRANSLATIONS,\n    },\n  ],\n})\nexport class TranslationTraderModule {}\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      TranslationAdmin,\n      TranslationEmail,\n      TranslationTrader,\n    ]),\n  ],\n\n  controllers: [TranslationAdminController],\n\n  providers: [\n    TranslationService,\n    {\n      provide: 'ADMIN_TRANSLATIONS',\n      useValue: ADMIN_TRANSLATIONS,\n    },\n    {\n      provide: 'EMAIL_TRANSLATIONS',\n      useValue: EMAIL_TRANSLATIONS,\n    },\n    {\n      provide: 'TRADER_TRANSLATIONS',\n      useValue: TRADER_TRANSLATIONS,\n    },\n  ],\n\n  exports: [\n    TypeOrmModule,\n    TranslationService,\n    {\n      provide: 'ADMIN_TRANSLATIONS',\n      useValue: ADMIN_TRANSLATIONS,\n    },\n    {\n      provide: 'EMAIL_TRANSLATIONS',\n      useValue: EMAIL_TRANSLATIONS,\n    },\n    {\n      provide: 'TRADER_TRANSLATIONS',\n      useValue: TRADER_TRANSLATIONS,\n    },\n  ],\n})\nexport class TranslationAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UniqueValidationArguments.html":{"url":"interfaces/UniqueValidationArguments.html","title":"interface - UniqueValidationArguments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UniqueValidationArguments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/helpers/is-unique.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ValidationArguments\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        constraints\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constraints\n                                    \n                                \n                                \n                                    \n                                        constraints:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Connection, EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport {\n  ValidationArguments,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\nimport { AccountTypeE } from '@core/shared/consts';\n\nconst fieldsToId: {\n  [index: string]: string;\n} = {\n  accountType: 'id',\n  language: 'code',\n};\n\nconst extraConditions: {\n  [index: string]: {\n    type: AccountTypeE;\n  };\n} = {\n  TraderOpenTradingAccountDTO_accountType: {\n    type: AccountTypeE.trading,\n  },\n\n  TraderOpenDemoAccountDTO_accountType: {\n    type: AccountTypeE.demo,\n  },\n};\n\ninterface UniqueValidationArguments extends ValidationArguments {\n  constraints: [\n    ObjectType | EntitySchema | string,\n    ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n  ];\n}\n\nexport abstract class UniqueValidator implements ValidatorConstraintInterface {\n  protected constructor(protected readonly connection: Connection) {}\n\n  public async validate(value: string, args: UniqueValidationArguments) {\n    const [EntityClass, findCondition = args.property] = args.constraints;\n    return (\n      (await this.connection.getRepository(EntityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n                [findCondition || args.property]: value,\n              },\n      })) (value: string, args: UniqueValidationArguments) {\n    let [EntityClass, findCondition = args.property] = args.constraints;\n    let conditions!: {\n      [index: string]: string;\n    };\n\n    if (Object.keys(fieldsToId).includes(findCondition.toString())) {\n      findCondition = fieldsToId[findCondition.toString()];\n    }\n\n    if (\n      Object.keys(extraConditions).includes(\n        `${args.targetName}_${args.property}`,\n      )\n    ) {\n      conditions = extraConditions[`${args.targetName}_${args.property}`];\n    }\n\n    return !(\n      (await this.connection.getRepository(EntityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n                [findCondition || args.property]: value,\n                ...conditions,\n              },\n      })) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UniqueValidator.html":{"url":"classes/UniqueValidator.html","title":"class - UniqueValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UniqueValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/core/src/shared/helpers/is-unique.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in apps/core/src/shared/helpers/is-unique.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in apps/core/src/shared/helpers/is-unique.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(value: string, args: UniqueValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in apps/core/src/shared/helpers/is-unique.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                UniqueValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Connection, EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport {\n  ValidationArguments,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\nimport { AccountTypeE } from '@core/shared/consts';\n\nconst fieldsToId: {\n  [index: string]: string;\n} = {\n  accountType: 'id',\n  language: 'code',\n};\n\nconst extraConditions: {\n  [index: string]: {\n    type: AccountTypeE;\n  };\n} = {\n  TraderOpenTradingAccountDTO_accountType: {\n    type: AccountTypeE.trading,\n  },\n\n  TraderOpenDemoAccountDTO_accountType: {\n    type: AccountTypeE.demo,\n  },\n};\n\ninterface UniqueValidationArguments extends ValidationArguments {\n  constraints: [\n    ObjectType | EntitySchema | string,\n    ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n  ];\n}\n\nexport abstract class UniqueValidator implements ValidatorConstraintInterface {\n  protected constructor(protected readonly connection: Connection) {}\n\n  public async validate(value: string, args: UniqueValidationArguments) {\n    const [EntityClass, findCondition = args.property] = args.constraints;\n    return (\n      (await this.connection.getRepository(EntityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n                [findCondition || args.property]: value,\n              },\n      })) (value: string, args: UniqueValidationArguments) {\n    let [EntityClass, findCondition = args.property] = args.constraints;\n    let conditions!: {\n      [index: string]: string;\n    };\n\n    if (Object.keys(fieldsToId).includes(findCondition.toString())) {\n      findCondition = fieldsToId[findCondition.toString()];\n    }\n\n    if (\n      Object.keys(extraConditions).includes(\n        `${args.targetName}_${args.property}`,\n      )\n    ) {\n      conditions = extraConditions[`${args.targetName}_${args.property}`];\n    }\n\n    return !(\n      (await this.connection.getRepository(EntityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n                [findCondition || args.property]: value,\n                ...conditions,\n              },\n      })) \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/core/src/admin/modules/account-type/account-type.controller.ts\n            \n            class\n            AccountTypeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/core/src/admin/modules/account-type/account-type.service.ts\n            \n            class\n            AccountTypeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/core/src/admin/modules/account-type/dtos/account-type.dto.ts\n            \n            class\n            AccountTypeDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/admin/modules/task/dtos/task.dto.ts\n            \n            class\n            TaskDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/core/src/admin/modules/task/task.controller.ts\n            \n            class\n            TaskController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/core/src/admin/modules/task/task.service.ts\n            \n            class\n            TaskService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/admin/modules/trader/trader.controller.ts\n            \n            class\n            TraderController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/core/src/admin/modules/trader/trader.service.ts\n            \n            class\n            TraderService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/core/src/shared/configs/translations/admin.ts\n            \n            variable\n            ADMIN_TRANSLATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/shared/configs/translations/email.ts\n            \n            variable\n            EMAIL_TRANSLATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/shared/configs/translations/trader.ts\n            \n            variable\n            TRADER_TRANSLATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/shared/consts/regex.ts\n            \n            variable\n            PasswordRegex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/shared/entities/account-type.ts\n            \n            class\n            AccountType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/core/src/shared/entities/language.entity.ts\n            \n            class\n            Language\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/core/src/shared/entities/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/core/src/shared/entities/trader.entity.ts\n            \n            class\n            Trader\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                apps/core/src/shared/entities/translation-admin.entity.ts\n            \n            class\n            TranslationAdmin\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/shared/entities/translation-email.entity.ts\n            \n            class\n            TranslationEmail\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/shared/entities/translation-trader.entity.ts\n            \n            class\n            TranslationTrader\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/shared/entities/translation.entity.ts\n            \n            class\n            Translation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/shared/helpers/is-timezone.ts\n            \n            injectable\n            IsTimezone\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/core/src/shared/helpers/is-timezone.ts\n            \n            function\n            TimezoneValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/shared/helpers/is-unique.ts\n            \n            class\n            ExistValidator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/shared/helpers/is-unique.ts\n            \n            class\n            UniqueValidator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/shared/helpers/is-unique.ts\n            \n            interface\n            UniqueValidationArguments\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/core/src/shared/helpers/is-unique.ts\n            \n            variable\n            extraConditions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/shared/helpers/is-unique.ts\n            \n            variable\n            fieldsToId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/shared/helpers/make-password.ts\n            \n            variable\n            MakePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/shared/helpers/to-local-datetime.ts\n            \n            function\n            ToLocalDateTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/shared/middlewares/logger.middleware.ts\n            \n            class\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/core/src/shared/modules/account-type/account-type.controller.ts\n            \n            class\n            AccountTypeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/core/src/shared/modules/account-type/account-type.service.ts\n            \n            class\n            AccountTypeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/core/src/shared/modules/language/dtos/language.dto.ts\n            \n            class\n            LanguageDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/core/src/shared/modules/language/language.controller.ts\n            \n            class\n            LanguageAdminController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/core/src/shared/modules/language/language.controller.ts\n            \n            class\n            LanguageTraderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/shared/modules/language/language.service.ts\n            \n            class\n            LanguageService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/core/src/shared/modules/translation/dtos/translation.dto.ts\n            \n            class\n            TranslationDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/shared/modules/translation/translation.controller.ts\n            \n            class\n            TranslationAdminController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/shared/modules/translation/translation.controller.ts\n            \n            class\n            TranslationTraderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/core/src/shared/modules/translation/translation.service.ts\n            \n            class\n            TranslationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/core/src/trader/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/trader/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts\n            \n            class\n            TraderMessengersDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/core/src/trader/modules/open-account/dtos/open-base-account.dto.ts\n            \n            class\n            TraderOpenBaseAccountDTO\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/core/src/trader/modules/open-account/dtos/open-demo-account.dto.ts\n            \n            class\n            TraderOpenDemoAccountDTO\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/core/src/trader/modules/open-account/dtos/open-trading-account.dto.ts\n            \n            class\n            TraderOpenTradingAccountDTO\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/core/src/trader/modules/open-account/open-account.controller.ts\n            \n            class\n            OpenAccountController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/core/src/trader/modules/open-account/open-account.service.ts\n            \n            class\n            OpenAccountService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/main/src/admin/modules/account-type/account-type.controller.ts\n            \n            controller\n            AccountTypeController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/admin/modules/account-type/account-type.service.ts\n            \n            injectable\n            AccountTypeService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/main/src/admin/modules/task/dtos/task.dto.ts\n            \n            class\n            TaskDTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/admin/modules/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/admin/modules/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/main/src/admin/modules/trader/trader.controller.ts\n            \n            controller\n            TraderController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/admin/modules/trader/trader.service.ts\n            \n            injectable\n            TraderService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/main/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/configs/default.ts\n            \n            variable\n            CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/configs/default.ts\n            \n            variable\n            paths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/configs/default.ts\n            \n            variable\n            project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/configs/translations/admin.ts\n            \n            variable\n            ADMIN_TRANSLATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/configs/translations/admin.ts\n            \n            variable\n            ADMIN_TRANSLATIONS_LOCAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/configs/translations/email.ts\n            \n            variable\n            EMAIL_TRANSLATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/configs/translations/email.ts\n            \n            variable\n            EMAIL_TRANSLATIONS_LOCAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/configs/translations/trader.ts\n            \n            variable\n            TRADER_TRANSLATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/configs/translations/trader.ts\n            \n            variable\n            TRADER_TRANSLATIONS_LOCAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/entities/account-type.entity.ts\n            \n            class\n            AccountType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/entities/language.entity.ts\n            \n            class\n            Language\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/entities/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/entities/trader.entity.ts\n            \n            class\n            Trader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/entities/translation-admin.entity.ts\n            \n            class\n            TranslationAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/entities/translation-email.entity.ts\n            \n            class\n            TranslationEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/entities/translation-trader.entity.ts\n            \n            class\n            TranslationTrader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/helpers/is-unique.ts\n            \n            injectable\n            IsExist\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/main/src/shared/helpers/is-unique.ts\n            \n            injectable\n            IsUnique\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/main/src/shared/middlewares/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/modules/account-type/account-type.controller.ts\n            \n            controller\n            AccountTypeController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/modules/account-type/account-type.service.ts\n            \n            injectable\n            AccountTypeService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/main/src/shared/modules/language/language.controller.ts\n            \n            controller\n            LanguageAdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/modules/language/language.controller.ts\n            \n            controller\n            LanguageTraderController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/modules/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/main/src/shared/modules/translation/translation.controller.ts\n            \n            controller\n            TranslationAdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/modules/translation/translation.controller.ts\n            \n            controller\n            TranslationTraderController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/shared/modules/translation/translation.service.ts\n            \n            injectable\n            TranslationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/main/src/trader/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/trader/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/main/src/trader/modules/open-account/dtos/open-demo-account.dto.ts\n            \n            class\n            TraderOpenDemoAccountDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/main/src/trader/modules/open-account/dtos/open-trading-account.dto.ts\n            \n            class\n            TraderOpenTradingAccountDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/main/src/trader/modules/open-account/open-account.controller.ts\n            \n            controller\n            TraderOpenAccountController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/main/src/trader/modules/open-account/open-account.service.ts\n            \n            injectable\n            OpenAccountService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.11\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.3.2\n        \n            class-validator : ^0.13.1\n        \n            dotenv : ^8.2.0\n        \n            flat : ^5.0.2\n        \n            generate-password : ^1.6.0\n        \n            lodash : ^4.17.20\n        \n            moment : ^2.29.1\n        \n            moment-timezone : ^0.5.33\n        \n            mysql : ^2.18.1\n        \n            password-generator : ^2.3.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.30\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountTypeE   (apps/.../account-type.ts)\n                        \n                        \n                            CurrencyE   (apps/.../currency.ts)\n                        \n                        \n                            MessengerTypeE   (apps/.../messenger-type.ts)\n                        \n                        \n                            TASK_STATUS   (apps/.../task.ts)\n                        \n                        \n                            TASK_TYPE   (apps/.../task.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/core/src/shared/consts/account-type.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountTypeE\n                    \n                \n                        \n                            \n                                 trading\n                            \n                        \n                        \n                            \n                                Value : trading\n                            \n                        \n                        \n                            \n                                 demo\n                            \n                        \n                        \n                            \n                                Value : demo\n                            \n                        \n                        \n                            \n                                 ib\n                            \n                        \n                        \n                            \n                                Value : ib\n                            \n                        \n                        \n                            \n                                 mam\n                            \n                        \n                        \n                            \n                                Value : mam\n                            \n                        \n            \n        \n\n    apps/core/src/shared/consts/currency.ts\n    \n        \n            \n                \n                    \n                        \n                        CurrencyE\n                    \n                \n                        \n                            \n                                 USD\n                            \n                        \n                        \n                            \n                                Value : USD\n                            \n                        \n                        \n                            \n                                 EUR\n                            \n                        \n                        \n                            \n                                Value : EUR\n                            \n                        \n                        \n                            \n                                 GPB\n                            \n                        \n                        \n                            \n                                Value : GPB\n                            \n                        \n            \n        \n\n    apps/core/src/shared/consts/messenger-type.ts\n    \n        \n            \n                \n                    \n                        \n                        MessengerTypeE\n                    \n                \n                        \n                            \n                                 telegram\n                            \n                        \n                        \n                            \n                                Value : telegram\n                            \n                        \n                        \n                            \n                                 viber\n                            \n                        \n                        \n                            \n                                Value : viber\n                            \n                        \n                        \n                            \n                                 whatsapp\n                            \n                        \n                        \n                            \n                                Value : whatsapp\n                            \n                        \n                        \n                            \n                                 skype\n                            \n                        \n                        \n                            \n                                Value : skype\n                            \n                        \n            \n        \n\n    apps/core/src/shared/consts/task.ts\n    \n        \n            \n                \n                    \n                        \n                        TASK_STATUS\n                    \n                \n                        \n                            \n                                 NEW\n                            \n                        \n                        \n                            \n                                 DUE\n                            \n                        \n                        \n                            \n                                 DONE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TASK_TYPE\n                    \n                \n                        \n                            \n                                 REGISTRATION\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            TimezoneValidator   (apps/.../is-timezone.ts)\n                        \n                        \n                            ToLocalDateTime   (apps/.../to-local-datetime.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/main/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/core/src/shared/helpers/is-timezone.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            TimezoneValidator\n                        \n                        \n                    \n                \n            \n            \n                \nTimezoneValidator(timezone)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timezone\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/core/src/shared/helpers/to-local-datetime.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ToLocalDateTime\n                        \n                        \n                    \n                \n            \n            \n                \nToLocalDateTime(timezone, date)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timezone\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountTypeModule\n\n\n\ncluster_AccountTypeModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GlobalAdminModule\n\n\n\ncluster_GlobalAdminModule_imports\n\n\n\ncluster_GlobalTraderModule\n\n\n\ncluster_GlobalTraderModule_imports\n\n\n\ncluster_LanguageAdminModule\n\n\n\ncluster_LanguageAdminModule_providers\n\n\n\ncluster_OpenAccountModule\n\n\n\ncluster_OpenAccountModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TraderModule\n\n\n\ncluster_TraderModule_providers\n\n\n\ncluster_TranslationAdminModule\n\n\n\ncluster_TranslationAdminModule_exports\n\n\n\ncluster_TranslationAdminModule_providers\n\n\n\n\nAccountTypeService\n\nAccountTypeService\n\n\n\nAccountTypeModule\n\nAccountTypeModule\n\nAccountTypeModule -->\n\nAccountTypeService->AccountTypeModule\n\n\n\nAccountTypeModule -->\n\nAccountTypeService->AccountTypeModule\n\n\n\n\n\nGlobalAdminModule\n\nGlobalAdminModule\n\nGlobalAdminModule -->\n\nAccountTypeModule->GlobalAdminModule\n\n\n\n\n\nGlobalTraderModule\n\nGlobalTraderModule\n\nGlobalTraderModule -->\n\nAccountTypeModule->GlobalTraderModule\n\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nGlobalTraderModule -->\n\nAuthModule->GlobalTraderModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nGlobalAdminModule -->\n\nDatabaseModule->GlobalAdminModule\n\n\n\nGlobalTraderModule -->\n\nDatabaseModule->GlobalTraderModule\n\n\n\n\n\nLanguageAdminModule\n\nLanguageAdminModule\n\nGlobalAdminModule -->\n\nLanguageAdminModule->GlobalAdminModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nGlobalAdminModule -->\n\nTaskModule->GlobalAdminModule\n\n\n\n\n\nTraderModule\n\nTraderModule\n\nGlobalAdminModule -->\n\nTraderModule->GlobalAdminModule\n\n\n\n\n\nTranslationAdminModule\n\nTranslationAdminModule\n\nLanguageAdminModule -->\n\nTranslationAdminModule->LanguageAdminModule\n\n\n\nGlobalAdminModule -->\n\nTranslationAdminModule->GlobalAdminModule\n\n\n\n\n\nTranslationService \n\nTranslationService \n\nTranslationService  -->\n\nTranslationAdminModule->TranslationService \n\n\n\n\n\n{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n}  -->\n\nTranslationAdminModule->{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n} \n\n\n\n\n\n{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n}  -->\n\nTranslationAdminModule->{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n} \n\n\n\n\n\n{\n    provide: , useValue: TRADER_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: TRADER_TRANSLATIONS,\n} \n\n{\n    provide: , useValue: TRADER_TRANSLATIONS,\n}  -->\n\nTranslationAdminModule->{\n    provide: , useValue: TRADER_TRANSLATIONS,\n} \n\n\n\n\n\nLanguageTraderModule\n\nLanguageTraderModule\n\nGlobalTraderModule -->\n\nLanguageTraderModule->GlobalTraderModule\n\n\n\n\n\nOpenAccountModule\n\nOpenAccountModule\n\nGlobalTraderModule -->\n\nOpenAccountModule->GlobalTraderModule\n\n\n\n\n\nTranslationTraderModule\n\nTranslationTraderModule\n\nLanguageTraderModule -->\n\nTranslationTraderModule->LanguageTraderModule\n\n\n\nGlobalTraderModule -->\n\nTranslationTraderModule->GlobalTraderModule\n\n\n\nTranslationService  -->\n\nTranslationTraderModule->TranslationService \n\n\n\n{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n}  -->\n\nTranslationTraderModule->{\n    provide: , useValue: ADMIN_TRANSLATIONS,\n} \n\n\n\n{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n}  -->\n\nTranslationTraderModule->{\n    provide: , useValue: EMAIL_TRANSLATIONS,\n} \n\n\n\n{\n    provide: , useValue: TRADER_TRANSLATIONS,\n}  -->\n\nTranslationTraderModule->{\n    provide: , useValue: TRADER_TRANSLATIONS,\n} \n\n\n\n\n\nLanguageService\n\nLanguageService\n\nLanguageAdminModule -->\n\nLanguageService->LanguageAdminModule\n\n\n\nLanguageTraderModule -->\n\nLanguageService->LanguageTraderModule\n\n\n\n\n\nIsExist\n\nIsExist\n\nOpenAccountModule -->\n\nIsExist->OpenAccountModule\n\n\n\n\n\nIsUnique\n\nIsUnique\n\nOpenAccountModule -->\n\nIsUnique->OpenAccountModule\n\n\n\n\n\nOpenAccountService\n\nOpenAccountService\n\nOpenAccountModule -->\n\nOpenAccountService->OpenAccountModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\nTraderService\n\nTraderService\n\nTraderModule -->\n\nTraderService->TraderModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nTranslationAdminModule -->\n\nTranslationService->TranslationAdminModule\n\n\n\nTranslationTraderModule -->\n\nTranslationService->TranslationTraderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    45 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GlobalAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GlobalTraderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LanguageAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LanguageTraderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenAccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TraderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslationAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslationTraderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_TRANSLATIONS   (apps/.../admin.ts)\n                        \n                        \n                            ADMIN_TRANSLATIONS   (apps/.../admin.ts)\n                        \n                        \n                            ADMIN_TRANSLATIONS_LOCAL   (apps/.../admin.ts)\n                        \n                        \n                            CONFIG   (apps/.../default.ts)\n                        \n                        \n                            EMAIL_TRANSLATIONS   (apps/.../email.ts)\n                        \n                        \n                            EMAIL_TRANSLATIONS   (apps/.../email.ts)\n                        \n                        \n                            EMAIL_TRANSLATIONS_LOCAL   (apps/.../email.ts)\n                        \n                        \n                            extraConditions   (apps/.../is-unique.ts)\n                        \n                        \n                            fieldsToId   (apps/.../is-unique.ts)\n                        \n                        \n                            MakePassword   (apps/.../make-password.ts)\n                        \n                        \n                            PasswordRegex   (apps/.../regex.ts)\n                        \n                        \n                            paths   (apps/.../default.ts)\n                        \n                        \n                            project   (apps/.../default.ts)\n                        \n                        \n                            TRADER_TRANSLATIONS   (apps/.../trader.ts)\n                        \n                        \n                            TRADER_TRANSLATIONS   (apps/.../trader.ts)\n                        \n                        \n                            TRADER_TRANSLATIONS_LOCAL   (apps/.../trader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/main/src/shared/configs/translations/admin.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ADMIN_TRANSLATIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : merge(\n  ADMIN_TRANSLATIONS_CORE,\n  ADMIN_TRANSLATIONS_LOCAL,\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ADMIN_TRANSLATIONS_LOCAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n\n            \n        \n\n    apps/core/src/shared/configs/translations/admin.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ADMIN_TRANSLATIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  header: {\n    navigation: {\n      administratos: 'Administrators',\n      clients: 'Clients',\n      tasks: 'Tasks',\n    },\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    apps/main/src/shared/configs/default.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  APP_PORT: process.env.ADMIN_PORT || 3000,\n\n  MYSQL_HOST: process.env.MYSQL_HOST || '127.0.0.1',\n  MYSQL_PORT: parseInt(process.env.MYSQL_PORT!, 10) || 3306,\n  MYSQL_USER: process.env.MYSQL_USER || 'root',\n  MYSQL_PASSWORD: process.env.MYSQL_PASSWORD || 'root',\n  MYSQL_DATABASE: process.env.MYSQL_DATABASE || 'root',\n\n  API_ADMIN_PREFIX: process.env.API_ADMIN_PREFIX || 'api/admin',\n  API_TRADER_PREFIX: process.env.API_TRADER_PREFIX || 'api/trader',\n\n  SWAGGER_ADMIN_PREFIX: process.env.SWAGGER_ADMIN_PREFIX || 'api/doc/admin',\n  SWAGGER_ADMIN_TITLE:\n    process.env.SWAGGER_ADMIN_TITLE || 'The Blue Lagoon: Admin',\n  SWAGGER_ADMIN_DESCRIPTION:\n    process.env.SWAGGER_ADMIN_DESCRIPTION || 'Admin API description',\n  SWAGGER_ADMIN_VERSION: process.env.SWAGGER_ADMIN_VERSION || '1.0',\n\n  SWAGGER_TRADER_PREFIX: process.env.SWAGGER_TRADER_PREFIX || 'api/doc/trader',\n  SWAGGER_TRADER_TITLE:\n    process.env.SWAGGER_ADMIN_PREFIX || 'The Blue Lagoon: Trader',\n  SWAGGER_TRADER_DESCRIPTION:\n    process.env.SWAGGER_ADMIN_DESCRIPTION || 'Trader API description',\n  SWAGGER_TRADER_VERSION: process.env.SWAGGER_ADMIN_VERSION || '1.0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paths\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : __dirname.split('/')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : paths[paths.length - 1]\n                        \n                    \n\n\n            \n        \n\n    apps/main/src/shared/configs/translations/email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EMAIL_TRANSLATIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : merge(\n  EMAIL_TRANSLATIONS_CORE,\n  EMAIL_TRANSLATIONS_LOCAL,\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EMAIL_TRANSLATIONS_LOCAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n\n            \n        \n\n    apps/core/src/shared/configs/translations/email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EMAIL_TRANSLATIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n\n            \n        \n\n    apps/core/src/shared/helpers/is-unique.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            extraConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  TraderOpenTradingAccountDTO_accountType: {\n    type: AccountTypeE.trading,\n  },\n\n  TraderOpenDemoAccountDTO_accountType: {\n    type: AccountTypeE.demo,\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldsToId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  accountType: 'id',\n  language: 'code',\n}\n                        \n                    \n\n\n            \n        \n\n    apps/core/src/shared/helpers/make-password.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MakePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>\n  generator.generate({\n    length: 8,\n    uppercase: true,\n    lowercase: true,\n    numbers: true,\n    symbols: true,\n    exclude: '\\'\".,|',\n    strict: true,\n  })\n                        \n                    \n\n\n            \n        \n\n    apps/core/src/shared/consts/regex.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PasswordRegex\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/\n                        \n                    \n\n\n            \n        \n\n    apps/main/src/shared/configs/translations/trader.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TRADER_TRANSLATIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : merge(\n  TRADER_TRANSLATIONS_CORE,\n  TRADER_TRANSLATIONS_LOCAL,\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TRADER_TRANSLATIONS_LOCAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  footer: {\n    copyright: '© 2021 Copyright CRM Ltd. 2021 — All rights reserved',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    apps/core/src/shared/configs/translations/trader.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TRADER_TRANSLATIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  header: {\n    navigation: {\n      home: 'Home',\n      downloads: 'Downloads',\n      support: 'Support',\n    },\n\n    sidebar: {\n      open_account: 'Open Account',\n\n      cash_transactions: {\n        deposit: 'Deposit',\n        withdraw: 'Withdraw',\n        transfer: 'Transfer',\n      },\n    },\n  },\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
